{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/CompanySettings/CompanySettingsService.ts", "../../../Modules/ServerTypes/CompanySettings/CompanySettingsColumns.ts", "../../../Modules/ServerTypes/CompanySettings/CompanySettingsForm.ts", "../../../Modules/ServerTypes/CompanySettings/CompanySettingsRow.ts"],
  "sourcesContent": ["\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { CompanySettingsRow } from \"./CompanySettingsRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace CompanySettingsService {\n    export const baseUrl = 'CompanySettings/CompanySettings';\n\n    export declare function Create(request: SaveRequest<CompanySettingsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<CompanySettingsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CompanySettingsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CompanySettingsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"CompanySettings/CompanySettings/Create\",\n        Update: \"CompanySettings/CompanySettings/Update\",\n        Delete: \"CompanySettings/CompanySettings/Delete\",\n        Retrieve: \"CompanySettings/CompanySettings/Retrieve\",\n        List: \"CompanySettings/CompanySettings/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CompanySettingsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class CompanySettingsColumns {\n    static columnsKey = 'CompanySettings.CompanySettings';\n}", "\uFEFFimport { ImageUploadEditor, StringEditor, LookupEditor, BooleanEditor, IntegerEditor, DecimalEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { OTJobGradeTimeEditor } from \"@/HumanResource/OTJobGradeTime/OTJobGradeTime/OTJobGradeTimeEditor\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface CompanySettingsForm {\n    CompanyLogo: ImageUploadEditor;\n    CompanyRegistrationNumber: StringEditor;\n    CompanyPhone: StringEditor;\n    CompanyName: StringEditor;\n    BasedCountry: StringEditor;\n    CompanyAddress: StringEditor;\n    EPFAccountNumber: StringEditor;\n    BankAccountNumber: StringEditor;\n    SocsoAccountNumber: StringEditor;\n    IncomeTaxAccountNumber: StringEditor;\n    ZakatAccountNumber: StringEditor;\n    BankId: LookupEditor;\n    FixedTime: BooleanEditor;\n    FixedHour: BooleanEditor;\n    FixedHourFlexiTime: BooleanEditor;\n    RefreshLeaveOnYearOfService: BooleanEditor;\n    RefreshLeaveOnSpecificDate: BooleanEditor;\n    LeaveRefreshMonth: IntegerEditor;\n    LeaveRefreshDay: IntegerEditor;\n    EntitleAnnualBasedOnJobGrade: BooleanEditor;\n    EntitleAnnualBasedOnYearOfService: BooleanEditor;\n    OneOffEntitlementAnnualLeave: BooleanEditor;\n    MonthlyEntitlementAnnualLeave: BooleanEditor;\n    EntitleAnualLeaveBeforeProbationPeriodEnd: BooleanEditor;\n    DeductSalaryIfLate: BooleanEditor;\n    DeductSalaryIfEarlyLeaving: BooleanEditor;\n    RetireAge: IntegerEditor;\n    PayDay: IntegerEditor;\n    LateArrivalEqualHalfDayLeave: IntegerEditor;\n    LateArrivalEqualFullDayLeave: IntegerEditor;\n    ClockInGracePeriod: IntegerEditor;\n    ClockOutGracePeriod: IntegerEditor;\n    FixedOtRateCalculation: BooleanEditor;\n    VariableOtRateCalculation: BooleanEditor;\n    OTMonthDays: BooleanEditor;\n    FixedOtRateDenominator: DecimalEditor;\n    OtCalculationDescription: StringEditor;\n    WeekdayTwo: BooleanEditor;\n    WeekdayOnePointFive: BooleanEditor;\n    WeekendTwo: BooleanEditor;\n    WeekendOnePointFive: BooleanEditor;\n    PublicHolidayTwo: BooleanEditor;\n    PublicHolidayOnePointFive: BooleanEditor;\n    OTMinimumMinute: IntegerEditor;\n    MaximumOtMinute: IntegerEditor;\n    MaximumBasicSalaryToEntitleForOTPay: BooleanEditor;\n    MaximumBasicSalary: IntegerEditor;\n    MaximumJobGradeToEntitleForOTPay: BooleanEditor;\n    OTJobGradeTime: OTJobGradeTimeEditor;\n    DailyNplBasedOnWorkingHour: BooleanEditor;\n    DailyNplBasedOnFixedDenominator: BooleanEditor;\n    FixedNPLDenominator: DecimalEditor;\n    DailyNplMonthDays: BooleanEditor;\n    NoPaidLeaveDes: StringEditor;\n    HourlyNoPaidLeaveNPL: BooleanEditor;\n    HourlyNoPaidLeaveAbsent: BooleanEditor;\n    HourlyNoPaidLeaveDes: StringEditor;\n    AbsentBasedOnWorkingHour: BooleanEditor;\n    AbsentBasedOnFixedDenominator: BooleanEditor;\n    FixedAbsentDenominator: DecimalEditor;\n    AbsentMonthDays: BooleanEditor;\n    AbsentDes: StringEditor;\n    EarlyLeavingBasedOnWorkingHour: BooleanEditor;\n    EarlyLeavingBasedOnFixedDenominator: BooleanEditor;\n    FixedEarlyLeavingDenominator: DecimalEditor;\n    EarlyLeavingMonthDays: BooleanEditor;\n    EarlyLeavingDes: StringEditor;\n    LateArrivalBasedOnWorkingHour: BooleanEditor;\n    LateArrivalBasedOnFixedDenominator: BooleanEditor;\n    FixedLateArrivalDenominator: DecimalEditor;\n    LateArrivalMonthDays: BooleanEditor;\n    LateArrivalDes: StringEditor;\n    ProbationPeriod: DecimalEditor;\n    MonthlyDays: DecimalEditor;\n    SundayWeekday: BooleanEditor;\n    MondayWeekday: BooleanEditor;\n    TuesdayWeekday: BooleanEditor;\n    WednesdayWeekday: BooleanEditor;\n    ThursdayWeekday: BooleanEditor;\n    FridayWeekday: BooleanEditor;\n    SaturdayWeekday: BooleanEditor;\n    OTApplicationEmployeeApproval: BooleanEditor;\n    OTApplicationHrApproval: BooleanEditor;\n    OTEitherOne: BooleanEditor;\n    LeaveApplicationEmployeeApproval: BooleanEditor;\n    LeaveApplicationHrApproval: BooleanEditor;\n    LeaveApplicationEitherOne: BooleanEditor;\n    MoneyClaimingEmployeeApproval: BooleanEditor;\n    MoneyClaimingHrApproval: BooleanEditor;\n    MoneyClaimingEitherOne: BooleanEditor;\n}\n\nexport class CompanySettingsForm extends PrefixedContext {\n    static formKey = 'HumanResource.CompanySettings.CompanySettings';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CompanySettingsForm.init)  {\n            CompanySettingsForm.init = true;\n\n            var w0 = ImageUploadEditor;\n            var w1 = StringEditor;\n            var w2 = LookupEditor;\n            var w3 = BooleanEditor;\n            var w4 = IntegerEditor;\n            var w5 = DecimalEditor;\n            var w6 = OTJobGradeTimeEditor;\n\n            initFormType(CompanySettingsForm, [\n                'CompanyLogo', w0,\n                'CompanyRegistrationNumber', w1,\n                'CompanyPhone', w1,\n                'CompanyName', w1,\n                'BasedCountry', w1,\n                'CompanyAddress', w1,\n                'EPFAccountNumber', w1,\n                'BankAccountNumber', w1,\n                'SocsoAccountNumber', w1,\n                'IncomeTaxAccountNumber', w1,\n                'ZakatAccountNumber', w1,\n                'BankId', w2,\n                'FixedTime', w3,\n                'FixedHour', w3,\n                'FixedHourFlexiTime', w3,\n                'RefreshLeaveOnYearOfService', w3,\n                'RefreshLeaveOnSpecificDate', w3,\n                'LeaveRefreshMonth', w4,\n                'LeaveRefreshDay', w4,\n                'EntitleAnnualBasedOnJobGrade', w3,\n                'EntitleAnnualBasedOnYearOfService', w3,\n                'OneOffEntitlementAnnualLeave', w3,\n                'MonthlyEntitlementAnnualLeave', w3,\n                'EntitleAnualLeaveBeforeProbationPeriodEnd', w3,\n                'DeductSalaryIfLate', w3,\n                'DeductSalaryIfEarlyLeaving', w3,\n                'RetireAge', w4,\n                'PayDay', w4,\n                'LateArrivalEqualHalfDayLeave', w4,\n                'LateArrivalEqualFullDayLeave', w4,\n                'ClockInGracePeriod', w4,\n                'ClockOutGracePeriod', w4,\n                'FixedOtRateCalculation', w3,\n                'VariableOtRateCalculation', w3,\n                'OTMonthDays', w3,\n                'FixedOtRateDenominator', w5,\n                'OtCalculationDescription', w1,\n                'WeekdayTwo', w3,\n                'WeekdayOnePointFive', w3,\n                'WeekendTwo', w3,\n                'WeekendOnePointFive', w3,\n                'PublicHolidayTwo', w3,\n                'PublicHolidayOnePointFive', w3,\n                'OTMinimumMinute', w4,\n                'MaximumOtMinute', w4,\n                'MaximumBasicSalaryToEntitleForOTPay', w3,\n                'MaximumBasicSalary', w4,\n                'MaximumJobGradeToEntitleForOTPay', w3,\n                'OTJobGradeTime', w6,\n                'DailyNplBasedOnWorkingHour', w3,\n                'DailyNplBasedOnFixedDenominator', w3,\n                'FixedNPLDenominator', w5,\n                'DailyNplMonthDays', w3,\n                'NoPaidLeaveDes', w1,\n                'HourlyNoPaidLeaveNPL', w3,\n                'HourlyNoPaidLeaveAbsent', w3,\n                'HourlyNoPaidLeaveDes', w1,\n                'AbsentBasedOnWorkingHour', w3,\n                'AbsentBasedOnFixedDenominator', w3,\n                'FixedAbsentDenominator', w5,\n                'AbsentMonthDays', w3,\n                'AbsentDes', w1,\n                'EarlyLeavingBasedOnWorkingHour', w3,\n                'EarlyLeavingBasedOnFixedDenominator', w3,\n                'FixedEarlyLeavingDenominator', w5,\n                'EarlyLeavingMonthDays', w3,\n                'EarlyLeavingDes', w1,\n                'LateArrivalBasedOnWorkingHour', w3,\n                'LateArrivalBasedOnFixedDenominator', w3,\n                'FixedLateArrivalDenominator', w5,\n                'LateArrivalMonthDays', w3,\n                'LateArrivalDes', w1,\n                'ProbationPeriod', w5,\n                'MonthlyDays', w5,\n                'SundayWeekday', w3,\n                'MondayWeekday', w3,\n                'TuesdayWeekday', w3,\n                'WednesdayWeekday', w3,\n                'ThursdayWeekday', w3,\n                'FridayWeekday', w3,\n                'SaturdayWeekday', w3,\n                'OTApplicationEmployeeApproval', w3,\n                'OTApplicationHrApproval', w3,\n                'OTEitherOne', w3,\n                'LeaveApplicationEmployeeApproval', w3,\n                'LeaveApplicationHrApproval', w3,\n                'LeaveApplicationEitherOne', w3,\n                'MoneyClaimingEmployeeApproval', w3,\n                'MoneyClaimingHrApproval', w3,\n                'MoneyClaimingEitherOne', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { OTJobGradeTimeRow } from \"../OTJobGradeTime/OTJobGradeTimeRow\";\nimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface CompanySettingsRow {\n    HourlyNoPaidLeaveNPL?: boolean;\n    HourlyNoPaidLeaveAbsent?: boolean;\n    AbsentMonthDays?: boolean;\n    EarlyLeavingMonthDays?: boolean;\n    LateArrivalMonthDays?: boolean;\n    DailyNplMonthDays?: boolean;\n    OTMonthDays?: boolean;\n    EarlyLeavingDes?: string;\n    NoPaidLeaveDes?: string;\n    HourlyNoPaidLeaveDes?: string;\n    LateArrivalDes?: string;\n    AbsentDes?: string;\n    FixedOtRateDenominator?: number;\n    FixedEarlyLeavingDenominator?: number;\n    FixedLateArrivalDenominator?: number;\n    FixedNPLDenominator?: number;\n    FixedAbsentDenominator?: number;\n    ProbationPeriod?: number;\n    EarlyLeavingBasedOnWorkingHour?: boolean;\n    EarlyLeavingBasedOnFixedDenominator?: boolean;\n    LateArrivalBasedOnWorkingHour?: boolean;\n    LateArrivalBasedOnFixedDenominator?: boolean;\n    DailyNplBasedOnWorkingHour?: boolean;\n    DailyNplBasedOnFixedDenominator?: boolean;\n    AbsentBasedOnWorkingHour?: boolean;\n    AbsentBasedOnFixedDenominator?: boolean;\n    OTApplicationEmployeeApproval?: boolean;\n    OTApplicationHrApproval?: boolean;\n    OTEitherOne?: boolean;\n    LeaveApplicationEmployeeApproval?: boolean;\n    LeaveApplicationHrApproval?: boolean;\n    LeaveApplicationEitherOne?: boolean;\n    MoneyClaimingEmployeeApproval?: boolean;\n    MoneyClaimingHrApproval?: boolean;\n    MoneyClaimingEitherOne?: boolean;\n    FixedOtRateCalculation?: boolean;\n    VariableOtRateCalculation?: boolean;\n    WeekdayTwo?: boolean;\n    WeekdayOnePointFive?: boolean;\n    WeekendTwo?: boolean;\n    WeekendOnePointFive?: boolean;\n    PublicHolidayTwo?: boolean;\n    PublicHolidayOnePointFive?: boolean;\n    EPFAccountNumber?: string;\n    BankAccountNumber?: string;\n    SocsoAccountNumber?: string;\n    IncomeTaxAccountNumber?: string;\n    ZakatAccountNumber?: string;\n    BankId?: number;\n    MonthlyDays?: number;\n    BankName?: string;\n    SundayWeekday?: boolean;\n    MondayWeekday?: boolean;\n    TuesdayWeekday?: boolean;\n    WednesdayWeekday?: boolean;\n    ThursdayWeekday?: boolean;\n    FridayWeekday?: boolean;\n    SaturdayWeekday?: boolean;\n    RetireAge?: number;\n    ClockInGracePeriod?: number;\n    IsActive?: number;\n    LateArrivalEqualHalfDayLeave?: number;\n    LateArrivalEqualFullDayLeave?: number;\n    PayDay?: number;\n    LeaveRefreshDay?: number;\n    LeaveRefreshMonth?: number;\n    ClockOutGracePeriod?: number;\n    Id?: number;\n    OTMinimumMinute?: number;\n    Paydate?: string;\n    CompanyName?: string;\n    OtCalculationDescription?: string;\n    CompanyRegistrationNumber?: string;\n    CompanyLogo?: string;\n    CompanyPhone?: string;\n    CompanyAddress?: string;\n    MaximumBasicSalary?: number;\n    DeductSalaryIfLate?: boolean;\n    DeductSalaryIfEarlyLeaving?: boolean;\n    FixedTime?: boolean;\n    FixedHour?: boolean;\n    FixedHourFlexiTime?: boolean;\n    RefreshLeaveOnYearOfService?: boolean;\n    RefreshLeaveOnSpecificDate?: boolean;\n    EntitleAnualLeaveBeforeProbationPeriodEnd?: boolean;\n    LeaveRefreshDate?: string;\n    EffectiveUntil?: string;\n    EffectiveSince?: string;\n    InsertDate?: string;\n    EntitleAnnualBasedOnJobGrade?: boolean;\n    EntitleAnnualBasedOnYearOfService?: boolean;\n    BasedCountry?: string;\n    MaximumOtMinute?: number;\n    OneOffEntitlementAnnualLeave?: boolean;\n    MonthlyEntitlementAnnualLeave?: boolean;\n    MaximumBasicSalaryToEntitleForOTPay?: boolean;\n    MaximumJobGradeToEntitleForOTPay?: boolean;\n    OTJobGradeTime?: OTJobGradeTimeRow[];\n}\n\nexport abstract class CompanySettingsRow {\n    static readonly idProperty = 'Id';\n    static readonly localTextPrefix = 'CompanySettings.CompanySettings';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = '*';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<CompanySettingsRow>();\n}"],
  "mappings": "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",
  "names": ["import_q", "CompanySettingsService", "x", "r", "s", "o", "CompanySettingsColumns", "__name", "import_corelib", "import_q", "_CompanySettingsForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "w6", "OTJobGradeTimeEditor", "CompanySettingsForm", "__name", "import_q", "CompanySettingsRow", "__name"]
}
