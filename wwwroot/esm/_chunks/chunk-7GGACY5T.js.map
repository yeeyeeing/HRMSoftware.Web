{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/EmployeeProfile/EmployeeAllowance/EmployeeAllowanceEditor.ts", "../../../Modules/ServerTypes/EmployeeProfile/Category.ts", "../../../Modules/ServerTypes/EmployeeProfile/EISClass.ts", "../../../Modules/HumanResource/PayrollSettings/NoPaidLeave/StatusFormatter.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeAllowanceColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeAllowanceForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeAllowanceRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeAllowanceService.ts", "../../../Modules/HumanResource/PayrollSettings/Payroll/MonthFormatter.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeBonusColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeBonusForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeBonusRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeBonusService.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeCareerPathColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeCareerPathForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeCareerPathRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeCareerPathService.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeCp38Columns.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeCp38EditorForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeCp38Form.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeCp38Row.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeCp38Service.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeIncentiveColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeIncentiveForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeIncentiveRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeIncentiveService.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeePersonalProfileColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeePersonalProfileForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeePersonalProfileRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeePersonalProfileService.ts", "../../../Modules/ServerTypes/EmployeeProfile/SexType.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeProfileColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeProfileForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeType.ts", "../../../Modules/ServerTypes/EmployeeProfile/MaritalStatus.ts", "../../../Modules/ServerTypes/EmployeeProfile/ProbationClass.ts", "../../../Modules/HumanResource/EmployeeProfile/EmployeeCareerPath/EmployeeCareerPathEditor.ts", "../../../Modules/HumanResource/EmployeeProfile/EmployeeCareerPath/EmployeeCareerPathEditDialog.ts", "../../../Modules/HumanResource/EmployeeProfile/EmployeeCp38/EmployeeCp38Editor.ts", "../../../Modules/HumanResource/EmployeeProfile/EmployeeCp38/EmployeeCp38EditDialog.ts", "../../../Modules/HumanResource/EmployeeProfile/FixedDeduction/FixedDeductionEditor.ts", "../../../Modules/HumanResource/EmployeeProfile/FixedDeduction/FixedDeductionEditDialog.ts", "../../../Modules/ServerTypes/EmployeeProfile/EPFClass.ts", "../../../Modules/ServerTypes/EmployeeProfile/SOCSOClass.ts", "../../../Modules/ServerTypes/EmployeeProfile/HRDFClass.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeResignColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeResignForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeResignRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeResignService.ts", "../../../Modules/ServerTypes/EmployeeProfile/FixedDeductionColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/FixedDeductionForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/FixedDeductionRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/FixedDeductionService.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterAllowanceColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterAllowanceForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterAllowanceRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterAllowanceService.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterCareerPathType.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterCareerPathColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterCareerPathForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterCareerPathRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterCareerPathService.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterDeductionColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterDeductionForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterDeductionRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/MasterDeductionService.ts", "../../../Modules/ServerTypes/EmployeeProfile/TerminateEmployeeColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/TerminateEmployeeForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/TerminateEmployeeRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/TerminateEmployeeService.ts", "../../../Modules/ServerTypes/EmployeeProfile/UserCreationColumns.ts", "../../../Modules/ServerTypes/EmployeeProfile/UserCreationForm.ts", "../../../Modules/ServerTypes/EmployeeProfile/UserCreationRow.ts", "../../../Modules/ServerTypes/EmployeeProfile/UserCreationService.ts", "../../../Modules/HumanResource/EmployeeProfile/EmployeeAllowance/EmployeeAllowanceEditDialog.ts"],
  "sourcesContent": ["import { Decorators } from '@serenity-is/corelib';\nimport { EmployeeAllowanceColumns, EmployeeAllowanceRow, MasterAllowanceRow } from '../../../ServerTypes/EmployeeProfile';\nimport { GridEditorBase } from \"@serenity-is/extensions\";\nimport { EmployeeAllowanceEditDialog } from './EmployeeAllowanceEditDialog';\n@Decorators.registerEditor('HRMSoftware.EmployeeProfile.EmployeeAllowanceEditor')\nexport class EmployeeAllowanceEditor extends GridEditorBase<EmployeeAllowanceRow> {\n    protected getColumnsKey() { return EmployeeAllowanceColumns.columnsKey; }\n    protected getDialogType() { return EmployeeAllowanceEditDialog; }\n    protected getLocalTextPrefix() { return EmployeeAllowanceRow.localTextPrefix; }\n    protected getAddButtonCaption() {\n        return \"Add\";\n    }\n    protected validateEntity(row: EmployeeAllowanceRow, id: number) {\n        if (!super.validateEntity(row, id))\n            return false;\n\n        var itemId = id ?? row[this.getIdProperty()];\n        MasterAllowanceRow.getLookupAsync().then(x => {\n            var item = this.view?.getItemById(itemId);\n            if (item) {\n                console.log(x.itemById[row.MasterAllowanceId])\n                item.AllowanceCode = x.itemById[row.MasterAllowanceId].AllowanceCode;\n                this.view.updateItem(itemId, item);\n            }\n        });\n\n        return true;\n    }\n\n    \n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum Category {\n    DIVISION = 0,\n    DEPARTMENT = 1,\n    SECTION = 2,\n    OCCUPATION = 3,\n    JOBGRADE = 4\n}\nDecorators.registerEnumType(Category, 'HRMSoftware.EmployeeProfile.Category', 'HumanResource.EmployeeProfile.Category');", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum EISClass {\n    None = 0,\n    Class_1 = 1\n}\nDecorators.registerEnumType(EISClass, 'HRMSoftware.EmployeeProfile.EISClass', 'HumanResource.EmployeeProfile.EISClass');", "import { Decorators, Formatter, Lookup } from \"@serenity-is/corelib\";\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\n\n@Decorators.registerFormatter('HRMSoftware.StatusFormatter')\nexport class StatusFormatter implements Formatter {\n\n    format(ctx: FormatterContext) {\n\n        let state = ctx.value;\n        if (state == false)\n            return `<i class=\"fa fa-times\" style=\"color:red\"></i>`;\n        else if (state == true)\n            return `<i class=\"fa fa-check\" style=\"color:green\"></i>`\n       \n    }\n}", "\uFEFFimport { StatusFormatter } from \"@/HumanResource/PayrollSettings/NoPaidLeave/StatusFormatter\";\n\nexport class EmployeeAllowanceColumns {\n    static columnsKey = 'EmployeeProfile.EmployeeAllowance';\n}\n\n[StatusFormatter]; // referenced types", "\uFEFFimport { StringEditor, LookupEditor, DecimalEditor, DateEditor, TextAreaEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeAllowanceForm {\n    AllowanceCode: StringEditor;\n    MasterAllowanceId: LookupEditor;\n    Amount: DecimalEditor;\n    EffectiveFrom: DateEditor;\n    EffectiveUntil: DateEditor;\n    Description: TextAreaEditor;\n    Recurring: BooleanEditor;\n    OneTime: BooleanEditor;\n    PaidOneTime: BooleanEditor;\n    AllowanceSubjections: BooleanEditor;\n    FullAttendance: BooleanEditor;\n    NoLate: BooleanEditor;\n    NoAbsence: BooleanEditor;\n    NoEarlyLeaving: BooleanEditor;\n    ExemptUnpaidLeave: BooleanEditor;\n    ExemptHospitalisationLeave: BooleanEditor;\n    ExemptSickLeave: BooleanEditor;\n    ExemptAnnualLeave: BooleanEditor;\n    ExemptMaternityLeave: BooleanEditor;\n    ExemptPaternityLeave: BooleanEditor;\n    ExemptMarriageLeave: BooleanEditor;\n    ExemptCompassionateLeave: BooleanEditor;\n    ExemptEmergencyLeave: BooleanEditor;\n    ExemptGatepassLeave: BooleanEditor;\n    SubjectionEis: BooleanEditor;\n    SubjectionEpf: BooleanEditor;\n    SubjectionHrdf: BooleanEditor;\n    SubjectionPcb: BooleanEditor;\n    SubjectionSocso: BooleanEditor;\n    SubjectionOt: BooleanEditor;\n}\n\nexport class EmployeeAllowanceForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.EmployeeAllowance';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeAllowanceForm.init)  {\n            EmployeeAllowanceForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = LookupEditor;\n            var w2 = DecimalEditor;\n            var w3 = DateEditor;\n            var w4 = TextAreaEditor;\n            var w5 = BooleanEditor;\n\n            initFormType(EmployeeAllowanceForm, [\n                'AllowanceCode', w0,\n                'MasterAllowanceId', w1,\n                'Amount', w2,\n                'EffectiveFrom', w3,\n                'EffectiveUntil', w3,\n                'Description', w4,\n                'Recurring', w5,\n                'OneTime', w5,\n                'PaidOneTime', w5,\n                'AllowanceSubjections', w5,\n                'FullAttendance', w5,\n                'NoLate', w5,\n                'NoAbsence', w5,\n                'NoEarlyLeaving', w5,\n                'ExemptUnpaidLeave', w5,\n                'ExemptHospitalisationLeave', w5,\n                'ExemptSickLeave', w5,\n                'ExemptAnnualLeave', w5,\n                'ExemptMaternityLeave', w5,\n                'ExemptPaternityLeave', w5,\n                'ExemptMarriageLeave', w5,\n                'ExemptCompassionateLeave', w5,\n                'ExemptEmergencyLeave', w5,\n                'ExemptGatepassLeave', w5,\n                'SubjectionEis', w5,\n                'SubjectionEpf', w5,\n                'SubjectionHrdf', w5,\n                'SubjectionPcb', w5,\n                'SubjectionSocso', w5,\n                'SubjectionOt', w5\n            ]);\n        }\n    }\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeAllowanceRow {\n    ExemptUnpaidLeave?: boolean;\n    ExemptHospitalisationLeave?: boolean;\n    ExemptSickLeave?: boolean;\n    ExemptAnnualLeave?: boolean;\n    ExemptMaternityLeave?: boolean;\n    ExemptPaternityLeave?: boolean;\n    ExemptMarriageLeave?: boolean;\n    ExemptEmergencyLeave?: boolean;\n    ExemptCompassionateLeave?: boolean;\n    ExemptGatepassLeave?: boolean;\n    Recurring?: boolean;\n    PaidOneTime?: boolean;\n    OneTime?: boolean;\n    NoLate?: boolean;\n    NoAbsence?: boolean;\n    NoEarlyLeaving?: boolean;\n    Id?: number;\n    EmployeeRowId?: number;\n    Description?: string;\n    AllowanceCode?: string;\n    MasterAllowanceId?: number;\n    Amount?: number;\n    SubjectionEis?: boolean;\n    SubjectionEpf?: boolean;\n    SubjectionHrdf?: boolean;\n    SubjectionPcb?: boolean;\n    SubjectionSocso?: boolean;\n    SubjectionOt?: boolean;\n    EffectiveFrom?: string;\n    EffectiveUntil?: string;\n    AllowanceSubjections?: boolean;\n    FullAttendance?: boolean;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class EmployeeAllowanceRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Description';\n    static readonly localTextPrefix = 'EmployeeProfile.EmployeeAllowance';\n    static readonly lookupKey = 'EmployeeAllowance.EmployeeAllowance';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<EmployeeAllowanceRow>('EmployeeAllowance.EmployeeAllowance') }\n    static async getLookupAsync() { return getLookupAsync<EmployeeAllowanceRow>('EmployeeAllowance.EmployeeAllowance') }\n\n    static readonly deletePermission = '*';\n    static readonly insertPermission = '*';\n    static readonly readPermission = '*';\n    static readonly updatePermission = '*';\n\n    static readonly Fields = fieldsProxy<EmployeeAllowanceRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeAllowanceRow } from \"./EmployeeAllowanceRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeAllowanceService {\n    export const baseUrl = 'EmployeeProfile/EmployeeAllowance';\n\n    export declare function Create(request: SaveRequest<EmployeeAllowanceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeAllowanceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeAllowanceRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeAllowanceRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/EmployeeAllowance/Create\",\n        Update: \"EmployeeProfile/EmployeeAllowance/Update\",\n        Delete: \"EmployeeProfile/EmployeeAllowance/Delete\",\n        Retrieve: \"EmployeeProfile/EmployeeAllowance/Retrieve\",\n        List: \"EmployeeProfile/EmployeeAllowance/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeeAllowanceService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { Decorators, Formatter, Lookup } from \"@serenity-is/corelib\";\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\n\n@Decorators.registerFormatter('HRMSoftware.MonthFormatter')\nexport class MonthFormatter implements Formatter {\n\n    format(ctx: FormatterContext) {\n\n        let state = ctx.value as number;\n        const months: string[] = [\n            'January',   // 0\n            'February',  // 1\n            'March',     // 2\n            'April',     // 3\n            'May',       // 4\n            'June',      // 5\n            'July',      // 6\n            'August',    // 7\n            'September', // 8\n            'October',   // 9\n            'November',  // 10\n            'December'   // 11\n        ];\n\n\n            return months[state];\n\n    }\n}", "\uFEFFimport { MonthFormatter } from \"@/HumanResource/PayrollSettings/Payroll/MonthFormatter\";\n\nexport class EmployeeBonusColumns {\n    static columnsKey = 'EmployeeProfile.EmployeeBonus';\n}\n\n[MonthFormatter]; // referenced types", "\uFEFFimport { LookupEditor, DecimalEditor, TextAreaEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeBonusForm {\n    EmployeeRowId: LookupEditor;\n    BonusAmount: DecimalEditor;\n    BonusDescription: TextAreaEditor;\n    PayMonth: IntegerEditor;\n    PayYear: IntegerEditor;\n}\n\nexport class EmployeeBonusForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.EmployeeBonus';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeBonusForm.init)  {\n            EmployeeBonusForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = DecimalEditor;\n            var w2 = TextAreaEditor;\n            var w3 = IntegerEditor;\n\n            initFormType(EmployeeBonusForm, [\n                'EmployeeRowId', w0,\n                'BonusAmount', w1,\n                'BonusDescription', w2,\n                'PayMonth', w3,\n                'PayYear', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeBonusRow {\n    CostCentreID?: number;\n    CostCentreName?: string;\n    DepartmentID?: number;\n    DepartmentName?: string;\n    DivisionID?: number;\n    DivisionName?: string;\n    OccupationID?: number;\n    OccupationName?: string;\n    JobGradeID?: number;\n    JobGradeName?: string;\n    SectionID?: number;\n    SectionName?: string;\n    Id?: number;\n    EmployeeRowId?: number;\n    BonusAmount?: number;\n    BonusDescription?: string;\n    PayMonth?: number;\n    PayYear?: number;\n    EmployeeName?: string;\n    EmployeeID?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class EmployeeBonusRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'EmployeeName';\n    static readonly localTextPrefix = 'EmployeeProfile.EmployeeBonus';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<EmployeeBonusRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeBonusRow } from \"./EmployeeBonusRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeBonusService {\n    export const baseUrl = 'EmployeeProfile/EmployeeBonus';\n\n    export declare function Create(request: SaveRequest<EmployeeBonusRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeBonusRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeBonusRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeBonusRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/EmployeeBonus/Create\",\n        Update: \"EmployeeProfile/EmployeeBonus/Update\",\n        Delete: \"EmployeeProfile/EmployeeBonus/Delete\",\n        Retrieve: \"EmployeeProfile/EmployeeBonus/Retrieve\",\n        List: \"EmployeeProfile/EmployeeBonus/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeeBonusService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class EmployeeCareerPathColumns {\n    static columnsKey = 'EmployeeProfile.EmployeeCareerPath';\n}", "\uFEFFimport { LookupEditor, DecimalEditor, DateEditor, TextAreaEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeCareerPathForm {\n    CareerPathId: LookupEditor;\n    EmployeeRowId: LookupEditor;\n    NewValue: DecimalEditor;\n    EffectiveDate: DateEditor;\n    Description: TextAreaEditor;\n}\n\nexport class EmployeeCareerPathForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.EmployeeCareerPath';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeCareerPathForm.init)  {\n            EmployeeCareerPathForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = DecimalEditor;\n            var w2 = DateEditor;\n            var w3 = TextAreaEditor;\n\n            initFormType(EmployeeCareerPathForm, [\n                'CareerPathId', w0,\n                'EmployeeRowId', w0,\n                'NewValue', w1,\n                'EffectiveDate', w2,\n                'Description', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeCareerPathRow {\n    Id?: number;\n    Description?: string;\n    CareerPathCode?: string;\n    ValueString?: string;\n    EmployeeName?: string;\n    CareerPathId?: number;\n    EffectiveDate?: string;\n    NewValue?: number;\n    EmployeeRowId?: number;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class EmployeeCareerPathRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'EmployeeName';\n    static readonly localTextPrefix = 'EmployeeProfile.EmployeeCareerPath';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<EmployeeCareerPathRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeCareerPathRow } from \"./EmployeeCareerPathRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeCareerPathService {\n    export const baseUrl = 'EmployeeProfile/EmployeeCareerPath';\n\n    export declare function Create(request: SaveRequest<EmployeeCareerPathRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeCareerPathRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeCareerPathRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeCareerPathRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/EmployeeCareerPath/Create\",\n        Update: \"EmployeeProfile/EmployeeCareerPath/Update\",\n        Delete: \"EmployeeProfile/EmployeeCareerPath/Delete\",\n        Retrieve: \"EmployeeProfile/EmployeeCareerPath/Retrieve\",\n        List: \"EmployeeProfile/EmployeeCareerPath/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeeCareerPathService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class EmployeeCp38Columns {\n    static columnsKey = 'EmployeeProfile.EmployeeCp38';\n}", "\uFEFFimport { DecimalEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeCp38EditorForm {\n    Cp38Amount: DecimalEditor;\n    EffectiveFrom: DateEditor;\n    EffectiveUntil: DateEditor;\n}\n\nexport class EmployeeCp38EditorForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.EmployeeCp38';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeCp38EditorForm.init)  {\n            EmployeeCp38EditorForm.init = true;\n\n            var w0 = DecimalEditor;\n            var w1 = DateEditor;\n\n            initFormType(EmployeeCp38EditorForm, [\n                'Cp38Amount', w0,\n                'EffectiveFrom', w1,\n                'EffectiveUntil', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { LookupEditor, DecimalEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeCp38Form {\n    EmployeeRowId: LookupEditor;\n    Cp38Amount: DecimalEditor;\n    EffectiveFrom: DateEditor;\n    EffectiveUntil: DateEditor;\n}\n\nexport class EmployeeCp38Form extends PrefixedContext {\n    static formKey = 'EmployeeProfile.EmployeeCp38';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeCp38Form.init)  {\n            EmployeeCp38Form.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = DecimalEditor;\n            var w2 = DateEditor;\n\n            initFormType(EmployeeCp38Form, [\n                'EmployeeRowId', w0,\n                'Cp38Amount', w1,\n                'EffectiveFrom', w2,\n                'EffectiveUntil', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeCp38Row {\n    Id?: number;\n    EmployeeRowId?: number;\n    EmployeeName?: string;\n    Cp38Amount?: number;\n    EffectiveFrom?: string;\n    EffectiveUntil?: string;\n    EmployeeID?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class EmployeeCp38Row {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'EmployeeName';\n    static readonly localTextPrefix = 'EmployeeProfile.EmployeeCp38';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<EmployeeCp38Row>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeCp38Row } from \"./EmployeeCp38Row\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeCp38Service {\n    export const baseUrl = 'EmployeeProfile/EmployeeCp38';\n\n    export declare function Create(request: SaveRequest<EmployeeCp38Row>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeCp38Row>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeCp38Row>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeCp38Row>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/EmployeeCp38/Create\",\n        Update: \"EmployeeProfile/EmployeeCp38/Update\",\n        Delete: \"EmployeeProfile/EmployeeCp38/Delete\",\n        Retrieve: \"EmployeeProfile/EmployeeCp38/Retrieve\",\n        List: \"EmployeeProfile/EmployeeCp38/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeeCp38Service)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { MonthFormatter } from \"@/HumanResource/PayrollSettings/Payroll/MonthFormatter\";\n\nexport class EmployeeIncentiveColumns {\n    static columnsKey = 'EmployeeProfile.EmployeeIncentive';\n}\n\n[MonthFormatter]; // referenced types", "\uFEFFimport { LookupEditor, DecimalEditor, TextAreaEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeIncentiveForm {\n    EmployeeRowId: LookupEditor;\n    IncentiveAmount: DecimalEditor;\n    IncentiveDescription: TextAreaEditor;\n    PayMonth: IntegerEditor;\n    PayYear: IntegerEditor;\n}\n\nexport class EmployeeIncentiveForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.EmployeeIncentive';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeIncentiveForm.init)  {\n            EmployeeIncentiveForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = DecimalEditor;\n            var w2 = TextAreaEditor;\n            var w3 = IntegerEditor;\n\n            initFormType(EmployeeIncentiveForm, [\n                'EmployeeRowId', w0,\n                'IncentiveAmount', w1,\n                'IncentiveDescription', w2,\n                'PayMonth', w3,\n                'PayYear', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeIncentiveRow {\n    Id?: number;\n    EmployeeRowId?: number;\n    IncentiveAmount?: number;\n    IncentiveDescription?: string;\n    PayMonth?: number;\n    PayYear?: number;\n    EmployeeName?: string;\n    EmployeeID?: string;\n    CostCentreID?: number;\n    CostCentreName?: string;\n    DepartmentID?: number;\n    DepartmentName?: string;\n    DivisionID?: number;\n    DivisionName?: string;\n    OccupationID?: number;\n    OccupationName?: string;\n    JobGradeID?: number;\n    JobGradeName?: string;\n    SectionID?: number;\n    SectionName?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class EmployeeIncentiveRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'EmployeeName';\n    static readonly localTextPrefix = 'EmployeeProfile.EmployeeIncentive';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<EmployeeIncentiveRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeIncentiveRow } from \"./EmployeeIncentiveRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeIncentiveService {\n    export const baseUrl = 'EmployeeProfile/EmployeeIncentive';\n\n    export declare function Create(request: SaveRequest<EmployeeIncentiveRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeIncentiveRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeIncentiveRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeIncentiveRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/EmployeeIncentive/Create\",\n        Update: \"EmployeeProfile/EmployeeIncentive/Update\",\n        Delete: \"EmployeeProfile/EmployeeIncentive/Delete\",\n        Retrieve: \"EmployeeProfile/EmployeeIncentive/Retrieve\",\n        List: \"EmployeeProfile/EmployeeIncentive/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeeIncentiveService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class EmployeePersonalProfileColumns {\n    static columnsKey = 'EmployeeProfile.EmployeePersonalProfile';\n}", "\uFEFFimport { StringEditor, IntegerEditor, DateEditor, DecimalEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeePersonalProfileForm {\n    EmployeeName: StringEditor;\n    EmployeeId: StringEditor;\n    Nric: StringEditor;\n    Age: IntegerEditor;\n    LastPaymentDate: DateEditor;\n    RecruitmentDate: DateEditor;\n    Birthday: DateEditor;\n    EmployeeEmail: StringEditor;\n    EpfAccountNumber: StringEditor;\n    ProbationPeriodEnd: DateEditor;\n    ProbationPeriod: IntegerEditor;\n    NoticePeriod: IntegerEditor;\n    Address: StringEditor;\n    TelNumber1: StringEditor;\n    TelNumber2: StringEditor;\n    PassportNumber: StringEditor;\n    PassportIssueDate: DateEditor;\n    PassportValidPeriod: IntegerEditor;\n    PassportExpiryDate: DateEditor;\n    BonusFactor: DecimalEditor;\n    BasicSalary: DecimalEditor;\n    Allowance: DecimalEditor;\n    InsertDate: DateEditor;\n    UpdateDate: DateEditor;\n    DeleteDate: DateEditor;\n    RaceId: IntegerEditor;\n    EmployeeType: IntegerEditor;\n    Sex: IntegerEditor;\n    DepartmentId: IntegerEditor;\n    IsActive: IntegerEditor;\n    InsertUserId: IntegerEditor;\n    UpdateUserId: IntegerEditor;\n    DeleteUserId: IntegerEditor;\n    DivisionId: IntegerEditor;\n    SectionId: IntegerEditor;\n    JobGradeId: IntegerEditor;\n    OccupationId: IntegerEditor;\n    BankId: IntegerEditor;\n    BankAccountNumber: StringEditor;\n    CityId: IntegerEditor;\n    StateId: IntegerEditor;\n    EmployeeImg: StringEditor;\n    NationalityId: IntegerEditor;\n    MaritalStatus: IntegerEditor;\n    GrantHrPrivilege: IntegerEditor;\n    CreateUser: IntegerEditor;\n    PayByHour: IntegerEditor;\n    PayByMonth: IntegerEditor;\n    PayByDay: IntegerEditor;\n    OtPayEntitlement: IntegerEditor;\n    DailyWorkingMinutes: IntegerEditor;\n    UserPassword: StringEditor;\n    UserRowId: IntegerEditor;\n    UserName: StringEditor;\n    ResignationDate: DateEditor;\n    LeaveDate: DateEditor;\n    Terminated: IntegerEditor;\n    Resigned: IntegerEditor;\n    EpfContribution: IntegerEditor;\n}\n\nexport class EmployeePersonalProfileForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.EmployeePersonalProfile';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeePersonalProfileForm.init)  {\n            EmployeePersonalProfileForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n            var w2 = DateEditor;\n            var w3 = DecimalEditor;\n\n            initFormType(EmployeePersonalProfileForm, [\n                'EmployeeName', w0,\n                'EmployeeId', w0,\n                'Nric', w0,\n                'Age', w1,\n                'LastPaymentDate', w2,\n                'RecruitmentDate', w2,\n                'Birthday', w2,\n                'EmployeeEmail', w0,\n                'EpfAccountNumber', w0,\n                'ProbationPeriodEnd', w2,\n                'ProbationPeriod', w1,\n                'NoticePeriod', w1,\n                'Address', w0,\n                'TelNumber1', w0,\n                'TelNumber2', w0,\n                'PassportNumber', w0,\n                'PassportIssueDate', w2,\n                'PassportValidPeriod', w1,\n                'PassportExpiryDate', w2,\n                'BonusFactor', w3,\n                'BasicSalary', w3,\n                'Allowance', w3,\n                'InsertDate', w2,\n                'UpdateDate', w2,\n                'DeleteDate', w2,\n                'RaceId', w1,\n                'EmployeeType', w1,\n                'Sex', w1,\n                'DepartmentId', w1,\n                'IsActive', w1,\n                'InsertUserId', w1,\n                'UpdateUserId', w1,\n                'DeleteUserId', w1,\n                'DivisionId', w1,\n                'SectionId', w1,\n                'JobGradeId', w1,\n                'OccupationId', w1,\n                'BankId', w1,\n                'BankAccountNumber', w0,\n                'CityId', w1,\n                'StateId', w1,\n                'EmployeeImg', w0,\n                'NationalityId', w1,\n                'MaritalStatus', w1,\n                'GrantHrPrivilege', w1,\n                'CreateUser', w1,\n                'PayByHour', w1,\n                'PayByMonth', w1,\n                'PayByDay', w1,\n                'OtPayEntitlement', w1,\n                'DailyWorkingMinutes', w1,\n                'UserPassword', w0,\n                'UserRowId', w1,\n                'UserName', w0,\n                'ResignationDate', w2,\n                'LeaveDate', w2,\n                'Terminated', w1,\n                'Resigned', w1,\n                'EpfContribution', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeePersonalProfileRow {\n    Id?: number;\n    EmployeeName?: string;\n    EmployeeId?: string;\n    Nric?: string;\n    Age?: number;\n    LastPaymentDate?: string;\n    RecruitmentDate?: string;\n    Birthday?: string;\n    EmployeeEmail?: string;\n    EpfAccountNumber?: string;\n    ProbationPeriodEnd?: string;\n    ProbationPeriod?: number;\n    NoticePeriod?: number;\n    Address?: string;\n    TelNumber1?: string;\n    TelNumber2?: string;\n    PassportNumber?: string;\n    PassportIssueDate?: string;\n    PassportValidPeriod?: number;\n    PassportExpiryDate?: string;\n    BonusFactor?: number;\n    BasicSalary?: number;\n    Allowance?: number;\n    InsertDate?: string;\n    UpdateDate?: string;\n    DeleteDate?: string;\n    RaceId?: number;\n    EmployeeType?: number;\n    Sex?: number;\n    DepartmentId?: number;\n    IsActive?: number;\n    InsertUserId?: number;\n    UpdateUserId?: number;\n    DeleteUserId?: number;\n    DivisionId?: number;\n    SectionId?: number;\n    JobGradeId?: number;\n    OccupationId?: number;\n    BankId?: number;\n    BankAccountNumber?: string;\n    CityId?: number;\n    StateId?: number;\n    EmployeeImg?: string;\n    NationalityId?: number;\n    MaritalStatus?: number;\n    GrantHrPrivilege?: number;\n    CreateUser?: number;\n    PayByHour?: number;\n    PayByMonth?: number;\n    PayByDay?: number;\n    OtPayEntitlement?: number;\n    DailyWorkingMinutes?: number;\n    UserPassword?: string;\n    UserRowId?: number;\n    UserName?: string;\n    ResignationDate?: string;\n    LeaveDate?: string;\n    Terminated?: number;\n    Resigned?: number;\n    EpfContribution?: number;\n    Race?: string;\n    DepartmentName?: string;\n    DivisionName?: string;\n    SectionName?: string;\n    JobGradeName?: string;\n    OccupationName?: string;\n    BankName?: string;\n    CityName?: string;\n    StateName?: string;\n    NationalityName?: string;\n}\n\nexport abstract class EmployeePersonalProfileRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'EmployeeName';\n    static readonly localTextPrefix = 'EmployeeProfile.EmployeePersonalProfile';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<EmployeePersonalProfileRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeePersonalProfileRow } from \"./EmployeePersonalProfileRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeePersonalProfileService {\n    export const baseUrl = 'EmployeeProfile/EmployeePersonalProfile';\n\n    export declare function Create(request: SaveRequest<EmployeePersonalProfileRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeePersonalProfileRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeePersonalProfileRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeePersonalProfileRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/EmployeePersonalProfile/Create\",\n        Update: \"EmployeeProfile/EmployeePersonalProfile/Update\",\n        Delete: \"EmployeeProfile/EmployeePersonalProfile/Delete\",\n        Retrieve: \"EmployeeProfile/EmployeePersonalProfile/Retrieve\",\n        List: \"EmployeeProfile/EmployeePersonalProfile/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeePersonalProfileService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum SexType {\n    Male = 1,\n    Female = 2\n}\nDecorators.registerEnumType(SexType, 'HRMSoftware.EmployeeProfile.SexType', 'HumanResource.EmployeeProfile.SexType');", "\uFEFFimport { SexType } from \"./SexType\";\n\nexport class EmployeeProfileColumns {\n    static columnsKey = 'EmployeeProfile.EmployeeProfile';\n}\n\n[SexType]; // referenced types", "\uFEFFimport { DateEditor, ImageUploadEditor, StringEditor, EnumEditor, IntegerEditor, LookupEditor, MultipleImageUploadEditor, BooleanEditor, DecimalEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { SexType } from \"./SexType\";\nimport { EmployeeType } from \"./EmployeeType\";\nimport { MaritalStatus } from \"./MaritalStatus\";\nimport { ProbationClass } from \"./ProbationClass\";\nimport { EmployeeCareerPathEditor } from \"@/HumanResource/EmployeeProfile/EmployeeCareerPath/EmployeeCareerPathEditor\";\nimport { EmployeeCp38Editor } from \"@/HumanResource/EmployeeProfile/EmployeeCp38/EmployeeCp38Editor\";\nimport { EmployeeAllowanceEditor } from \"@/HumanResource/EmployeeProfile/EmployeeAllowance/EmployeeAllowanceEditor\";\nimport { FixedDeductionEditor } from \"@/HumanResource/EmployeeProfile/FixedDeduction/FixedDeductionEditor\";\nimport { EPFClass } from \"./EPFClass\";\nimport { EISClass } from \"./EISClass\";\nimport { SOCSOClass } from \"./SOCSOClass\";\nimport { HRDFClass } from \"./HRDFClass\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeProfileForm {\n    ResignationDate: DateEditor;\n    ResignLeaveDate: DateEditor;\n    TerminateDate: DateEditor;\n    TerminateLeaveDate: DateEditor;\n    EmployeeImg: ImageUploadEditor;\n    EmployeeName: StringEditor;\n    EmployeeID: StringEditor;\n    Sex: EnumEditor;\n    Birthday: DateEditor;\n    EmployeeEmail: StringEditor;\n    EmployeeType: EnumEditor;\n    RecruitmentDate: DateEditor;\n    TelNumber1: StringEditor;\n    TelNumber2: StringEditor;\n    MaritalStatus: EnumEditor;\n    Age: IntegerEditor;\n    RetireDate: DateEditor;\n    Nric: StringEditor;\n    OldNRIC: StringEditor;\n    RaceID: LookupEditor;\n    NationalityID: LookupEditor;\n    StateID: LookupEditor;\n    CityID: LookupEditor;\n    PassedProbation: EnumEditor;\n    ProbationPeriodFrom: DateEditor;\n    ProbationPeriodUntil: DateEditor;\n    WorkingPermit: StringEditor;\n    ArrivalDate: DateEditor;\n    WorkingPermitIssueDate: DateEditor;\n    WorkingPermitExpireDate: DateEditor;\n    WorkingPermitValidFrom: DateEditor;\n    WorkingPermitValidUntil: DateEditor;\n    PassportNumber: StringEditor;\n    PassportIssueDate: DateEditor;\n    PassportValidPeriod: IntegerEditor;\n    PassportExpiryDate: DateEditor;\n    Address: StringEditor;\n    PostalCode: StringEditor;\n    CountryID: LookupEditor;\n    Cp8dID: LookupEditor;\n    DepartmentID: LookupEditor;\n    DivisionID: LookupEditor;\n    SectionID: LookupEditor;\n    JobGradeID: LookupEditor;\n    OccupationID: LookupEditor;\n    CostCentreID: LookupEditor;\n    JobDescription: MultipleImageUploadEditor;\n    EmployeeCareerPath: EmployeeCareerPathEditor;\n    CreateUser: BooleanEditor;\n    GrantHRPrivilege: BooleanEditor;\n    UserName: StringEditor;\n    UserPassword: StringEditor;\n    WorkingSpouse: BooleanEditor;\n    ChildrenInUniversity: IntegerEditor;\n    ChildrenUnderEighteen: IntegerEditor;\n    DisabledChildInUniversity: IntegerEditor;\n    DisabledChild: IntegerEditor;\n    BasicSalary: DecimalEditor;\n    DailyWorkingMinute: IntegerEditor;\n    NightShiftAllowancePerDay: DecimalEditor;\n    BankID: LookupEditor;\n    BankAccountNumber: StringEditor;\n    Cp38Lists: EmployeeCp38Editor;\n    OtPayEntitlement: BooleanEditor;\n    FixedOtRateOption: BooleanEditor;\n    PayByMonth: BooleanEditor;\n    PayByHour: BooleanEditor;\n    PayByDay: BooleanEditor;\n    AllowanceLists: EmployeeAllowanceEditor;\n    FixedDeductionList: FixedDeductionEditor;\n    EpfClass: EnumEditor;\n    EpfAccountNumber: StringEditor;\n    EisClass: EnumEditor;\n    SocsoClass: EnumEditor;\n    SocsoAccountNumber: StringEditor;\n    SsfwEffectiveDate: DateEditor;\n    HRDFClass: EnumEditor;\n    PCBnumber: StringEditor;\n    CalculationDate: DateEditor;\n    WorkingHour: DecimalEditor;\n    WorkingDays: DecimalEditor;\n    DailyRateBase: DecimalEditor;\n    NplRateBase: DecimalEditor;\n    OtRateWeekday: DecimalEditor;\n    OtRateWeekend: DecimalEditor;\n    OtRatePublicHoliday: DecimalEditor;\n}\n\nexport class EmployeeProfileForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.EmployeeProfile';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeProfileForm.init)  {\n            EmployeeProfileForm.init = true;\n\n            var w0 = DateEditor;\n            var w1 = ImageUploadEditor;\n            var w2 = StringEditor;\n            var w3 = EnumEditor;\n            var w4 = IntegerEditor;\n            var w5 = LookupEditor;\n            var w6 = MultipleImageUploadEditor;\n            var w7 = EmployeeCareerPathEditor;\n            var w8 = BooleanEditor;\n            var w9 = DecimalEditor;\n            var w10 = EmployeeCp38Editor;\n            var w11 = EmployeeAllowanceEditor;\n            var w12 = FixedDeductionEditor;\n\n            initFormType(EmployeeProfileForm, [\n                'ResignationDate', w0,\n                'ResignLeaveDate', w0,\n                'TerminateDate', w0,\n                'TerminateLeaveDate', w0,\n                'EmployeeImg', w1,\n                'EmployeeName', w2,\n                'EmployeeID', w2,\n                'Sex', w3,\n                'Birthday', w0,\n                'EmployeeEmail', w2,\n                'EmployeeType', w3,\n                'RecruitmentDate', w0,\n                'TelNumber1', w2,\n                'TelNumber2', w2,\n                'MaritalStatus', w3,\n                'Age', w4,\n                'RetireDate', w0,\n                'Nric', w2,\n                'OldNRIC', w2,\n                'RaceID', w5,\n                'NationalityID', w5,\n                'StateID', w5,\n                'CityID', w5,\n                'PassedProbation', w3,\n                'ProbationPeriodFrom', w0,\n                'ProbationPeriodUntil', w0,\n                'WorkingPermit', w2,\n                'ArrivalDate', w0,\n                'WorkingPermitIssueDate', w0,\n                'WorkingPermitExpireDate', w0,\n                'WorkingPermitValidFrom', w0,\n                'WorkingPermitValidUntil', w0,\n                'PassportNumber', w2,\n                'PassportIssueDate', w0,\n                'PassportValidPeriod', w4,\n                'PassportExpiryDate', w0,\n                'Address', w2,\n                'PostalCode', w2,\n                'CountryID', w5,\n                'Cp8dID', w5,\n                'DepartmentID', w5,\n                'DivisionID', w5,\n                'SectionID', w5,\n                'JobGradeID', w5,\n                'OccupationID', w5,\n                'CostCentreID', w5,\n                'JobDescription', w6,\n                'EmployeeCareerPath', w7,\n                'CreateUser', w8,\n                'GrantHRPrivilege', w8,\n                'UserName', w2,\n                'UserPassword', w2,\n                'WorkingSpouse', w8,\n                'ChildrenInUniversity', w4,\n                'ChildrenUnderEighteen', w4,\n                'DisabledChildInUniversity', w4,\n                'DisabledChild', w4,\n                'BasicSalary', w9,\n                'DailyWorkingMinute', w4,\n                'NightShiftAllowancePerDay', w9,\n                'BankID', w5,\n                'BankAccountNumber', w2,\n                'Cp38Lists', w10,\n                'OtPayEntitlement', w8,\n                'FixedOtRateOption', w8,\n                'PayByMonth', w8,\n                'PayByHour', w8,\n                'PayByDay', w8,\n                'AllowanceLists', w11,\n                'FixedDeductionList', w12,\n                'EpfClass', w3,\n                'EpfAccountNumber', w2,\n                'EisClass', w3,\n                'SocsoClass', w3,\n                'SocsoAccountNumber', w2,\n                'SsfwEffectiveDate', w0,\n                'HRDFClass', w3,\n                'PCBnumber', w2,\n                'CalculationDate', w0,\n                'WorkingHour', w9,\n                'WorkingDays', w9,\n                'DailyRateBase', w9,\n                'NplRateBase', w9,\n                'OtRateWeekday', w9,\n                'OtRateWeekend', w9,\n                'OtRatePublicHoliday', w9\n            ]);\n        }\n    }\n}\n\n[SexType, EmployeeType, MaritalStatus, ProbationClass, EPFClass, EISClass, SOCSOClass, HRDFClass]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum EmployeeType {\n    Local = 1,\n    Foreigner = 2\n}\nDecorators.registerEnumType(EmployeeType, 'HRMSoftware.EmployeeProfile.EmployeeType', 'HumanResource.EmployeeProfile.EmployeeType');", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum MaritalStatus {\n    Single = 0,\n    Married = 1\n}\nDecorators.registerEnumType(MaritalStatus, 'HRMSoftware.EmployeeProfile.MaritalStatus', 'HumanResource.EmployeeProfile.MaritalStatus');", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum ProbationClass {\n    UnderProbation = 0,\n    PassedProbation = 1\n}\nDecorators.registerEnumType(ProbationClass, 'HRMSoftware.EmployeeProfile.ProbationClass', 'HumanResource.EmployeeProfile.ProbationClass');", "import { Decorators } from '@serenity-is/corelib';\nimport {  EmployeeCareerPathColumns, MasterCareerPathRow } from '../../../ServerTypes/EmployeeProfile';\nimport { GridEditorBase } from \"@serenity-is/extensions\";\nimport {  EmployeeCareerPathRow } from '../../../ServerTypes/EmployeeProfile';\nimport { EmployeeCareerPathEditDialog } from './EmployeeCareerPathEditDialog';\r\n\n@Decorators.registerEditor('HRMSoftware.EmployeeProfile.EmployeeCareerPathEditor')\nexport class EmployeeCareerPathEditor extends GridEditorBase<EmployeeCareerPathRow> {\n    protected getColumnsKey() { return EmployeeCareerPathColumns.columnsKey; }\n    protected getDialogType() { return EmployeeCareerPathEditDialog; }\n    protected getLocalTextPrefix() { return EmployeeCareerPathRow.localTextPrefix; }\n    protected getAddButtonCaption() {\n        return \"Add\";\n    }\n    protected validateEntity(row: EmployeeCareerPathRow, id: number) {\n        console.log('haha')\n        if (!super.validateEntity(row, id))\n            return false;\n\n        var itemId = id ?? row[this.getIdProperty()];\n        MasterCareerPathRow.getLookupAsync().then(x => {\n            var item = this.view?.getItemById(itemId);\n            if (item) {\n                console.log(x.itemById[row.CareerPathId])\n                item.CareerPathCode = x.itemById[row.CareerPathId].CareerPathCode;\n                this.view.updateItem(itemId, item);\n            }\n        });\n\n        return true;\n    }\n\n    \n}", "import { Decorators, EditorUtils, EntityDialog } from '@serenity-is/corelib';\nimport {  Category, EmployeeCareerPathForm, EmployeeCareerPathRow, EmployeeCareerPathService, EmployeeProfileService, MasterCareerPathService, MasterCareerPathType } from '../../../ServerTypes/EmployeeProfile';\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\nimport { alertDialog, getHighlightTarget, RetrieveResponse, serviceCall, isEmptyOrNull, getLookup } from '@serenity-is/corelib/q';\nimport { SaveResponse, Select2Editor } from '@serenity-is/corelib';\nimport { DepartmentService, DivisionService, JobGradeService, OccupationService, SectionService } from '../../../ServerTypes/OrganisationHierarchy';\r\n\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.EmployeeCareerPathEditDialog')\nexport class EmployeeCareerPathEditDialog extends GridEditorDialog<EmployeeCareerPathRow> {\n    protected getFormKey() { return EmployeeCareerPathForm.formKey; }\n    protected getRowDefinition() { return EmployeeCareerPathRow; }\n    protected getService() { return EmployeeCareerPathService.baseUrl; }\n    protected getLocalTextPrefix() { return EmployeeCareerPathRow.localTextPrefix; }\n    protected getNameProperty() { return EmployeeCareerPathRow.nameProperty; }\n\n    protected form: EmployeeCareerPathForm = new EmployeeCareerPathForm(this.idPrefix);\n    public currentVal: any;\n    constructor() {\n        super();\n        this.form = new EmployeeCareerPathForm(this.idPrefix);\n\n    }\n    protected onDialogOpen() {\n        super.onDialogOpen()\n        var newBasic\n        var self = this\n        EditorUtils.setReadonly(this.form.Description.element, true);\n        EditorUtils.setReadonly(this.form.EmployeeRowId.element, true);\n        var DivisionID, DepartmentID, SectionID, OccupationID, JobGradeID,BasicSalary;\n        var CareerPathType, CategoryId;\n        var NewValueEditor\n        $('.CategoryId').hide()\n       \n\n\n        var CareerPathIdElement = document.getElementById(`${this.idPrefix}CareerPathId`)\n        $(CareerPathIdElement).on('change', async function () {\n            self.form.Description.value = ''\n            if (isEmptyOrNull(DivisionID)) {\n                EmployeeProfileService.Retrieve({\n                    EntityId: self.form.EmployeeRowId.value\n                }, response => {\n                    DivisionID = response.Entity.DivisionID\n                    DepartmentID = response.Entity.DepartmentID\n                    SectionID = response.Entity.SectionID\n                    OccupationID = response.Entity.OccupationID\n                    JobGradeID = response.Entity.JobGradeID\n                    BasicSalary = response.Entity.BasicSalary\n                    self.form.Description.value = ''\n                    self.form.NewValue.value = null\n                    if (isEmptyOrNull(self.form.CareerPathId.value)) {\n                        $('.select2-container.s-Serenity-Select2Editor').remove()\n                        $('.NewValue .editor').removeClass('s-Serenity-Select2Editor s-Select2Editor select2-offscreen');\n                        $('.NewValue .editor').removeAttr('placeholder'); // Removes the entire placeholder attribute\n                        return\n                    }\n                    MasterCareerPathService.Retrieve({\n                        EntityId: self.form.CareerPathId.value\n                    }, response => {\n                        var NewValueElement = document.getElementById(self.idPrefix + 'NewValue')\n                        CareerPathType = response.Entity.CareerPathType;\n                        CategoryId = response.Entity.CategoryId\n                        if (response.Entity.CareerPathType < 2) {\n                            $('.select2-container.s-Serenity-Select2Editor').remove()\n                            $('.NewValue .editor').removeClass('s-Serenity-Select2Editor s-Select2Editor select2-offscreen');\n                            $('.NewValue .editor').removeAttr('placeholder'); // Removes the entire placeholder attribute\n                            return\n                        }\n                        if (!isEmptyOrNull(NewValueEditor))\n                            NewValueEditor.destroy();\n                        NewValueEditor = new Select2Editor($(NewValueElement))\n\n                        CategoryId = response.Entity.CategoryId\n\n                        if (CategoryId == 0)//division\n                        {\n                            DivisionService.List({\n                            }, response => {\n                                for (var index in response.Entities) {\n                                    if (response.Entities[index].Id != DivisionID)\n                                        NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\n                                }\n                            })\n                        }\n\n                        else if (CategoryId == 1)//department\n                        {\n                            DepartmentService.List({\n                            }, response => {\n                                for (var index in response.Entities) {\n                                    if (response.Entities[index].Id != DepartmentID)\n                                        NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\r\n                                }\n                            })\n                        }\n\n                        else if (CategoryId == 2)//section\n                        {\n                            SectionService.List({\n                            }, response => {\n                                for (var index in response.Entities) {\n                                    if (response.Entities[index].Id != SectionID)\n                                        NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\n                                }\n                            })\n                        }\n\n                        else if (CategoryId == 3)//occupation\n                        {\n                            OccupationService.List({\n                            }, response => {\n                                for (var index in response.Entities) {\n                                    if (response.Entities[index].Id != OccupationID)\n                                        NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\n                                }\n                            })\n                        }\n                        else if (CategoryId == 4)//JobGrade\n                        {\n                            JobGradeService\n                                .List({\n                                }, response => {\n                                    for (var index in response.Entities) {\n                                        if (response.Entities[index].Id != JobGradeID)\n                                            NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\n                                    }\n                                })\n                        }\n\n\n\n                    })\n                })\n\n\n            }\n\n            else {\n                if (isEmptyOrNull(self.form.CareerPathId.value)) {\n                    $('.select2-container.s-Serenity-Select2Editor').remove()\n                    $('.NewValue .editor').removeClass('s-Serenity-Select2Editor s-Select2Editor select2-offscreen');\n                    $('.NewValue .editor').removeAttr('placeholder'); // Removes the entire placeholder attribute\n                    return\n                }\n                MasterCareerPathService.Retrieve({\n                    EntityId: self.form.CareerPathId.value\n                }, response => {\n                    var NewValueElement = document.getElementById(self.idPrefix + 'NewValue')\n                    CareerPathType = response.Entity.CareerPathType;\n                    CategoryId = response.Entity.CategoryId\n                    if (response.Entity.CareerPathType < 2) {\n                        $('.select2-container.s-Serenity-Select2Editor').remove()\n                        $('.NewValue .editor').removeClass('s-Serenity-Select2Editor s-Select2Editor select2-offscreen');\n                        $('.NewValue .editor').removeAttr('placeholder'); // Removes the entire placeholder attribute\n                        return\n                    }\n                    if (!isEmptyOrNull(NewValueEditor))\n                        NewValueEditor.destroy();\n                    NewValueEditor = new Select2Editor($(NewValueElement))\n\n                    CategoryId = response.Entity.CategoryId\n\n                    if (CategoryId == 0)//division\n                    {\n                        DivisionService.List({\n                        }, response => {\n                            for (var index in response.Entities) {\n                                if (response.Entities[index].Id != DivisionID)\n                                    NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\n                            }\n                        })\n                    }\n\n                    else if (CategoryId == 1)//department\n                    {\n                        DepartmentService.List({\n                        }, response => {\n                            for (var index in response.Entities) {\n                                if (response.Entities[index].Id != DepartmentID)\n                                    NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\r\n                            }\n                        })\n                    }\n\n                    else if (CategoryId == 2)//section\n                    {\n                        SectionService.List({\n                        }, response => {\n                            for (var index in response.Entities) {\n                                if (response.Entities[index].Id != SectionID)\n                                    NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\n                            }\n                        })\n                    }\n\n                    else if (CategoryId == 3)//occupation\n                    {\n                        OccupationService.List({\n                        }, response => {\n                            for (var index in response.Entities) {\n                                if (response.Entities[index].Id != OccupationID)\n                                    NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\n                            }\n                        })\n                    }\n                    else if (CategoryId == 4)//JobGrade\n                    {\n                        JobGradeService\n                            .List({\n                            }, response => {\n                                for (var index in response.Entities) {\n                                    if (response.Entities[index].Id != JobGradeID)\n                                        NewValueEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].Name).toString(), });\n                                }\n                            })\n                    }\n\n\n\n                })\n\n            }\n\n\n        })\n        var NewValueElement = document.getElementById(`${this.idPrefix}NewValue`)\n        $(NewValueElement).on('change', async function () {\n          \n            if (isEmptyOrNull(self.form.NewValue.value) || isEmptyOrNull(self.form.CareerPathId.value)) {\n                self.form.Description.value = ''\n                return\n            }\n            if (CareerPathType == MasterCareerPathType.increment)  // increment\n            {\n                newBasic = BasicSalary + self.form.NewValue.value\n                self.form.Description.value = `${self.form.EmployeeRowId.text} will get a increment from ${BasicSalary} to ${newBasic}`\n            }\n            else if (CareerPathType == MasterCareerPathType.decrement) { // decrement\n                newBasic = BasicSalary - self.form.NewValue.value\n                if (newBasic <= 0) {\n                    alertDialog('The salary cannot be smaller than 0');\n                    self.form.Description.value = ''\n                }\n                self.form.Description.value = `${self.form.EmployeeRowId.text} will get a decrement from ${BasicSalary} to ${newBasic}`\n            }\n            else if (CareerPathType == MasterCareerPathType.promotion) { // promotion\n                var Table,searchTarget\n                if (CategoryId == Category.DEPARTMENT) {\n                    Table = getLookup(\"Department.Department\")\n                    searchTarget = DepartmentID\n                    Criteria = \"Department\"\n                }\n                else if (CategoryId == Category.DIVISION) {\n                    Table = getLookup(\"Division.Division\")\n                    searchTarget = DivisionID\n                    Criteria = \"Division\"\n                }\n                else if (CategoryId == Category.JOBGRADE) {\n                    Table = getLookup(\"JobGrade.JobGrade\")\n                    searchTarget = JobGradeID\n                    Criteria = \"Job Grade\"\n                }\n                else if (CategoryId == Category.OCCUPATION) {\n                    Table = getLookup(\"Occupation.Occupation\")\n                    searchTarget = OccupationID\n                    Criteria = \"Occupation\"\n                }\n                else if (CategoryId == Category.SECTION) {\n                    Table = getLookup(\"Section.Section\")\n                    searchTarget = SectionID\n                    Criteria = \"Section\"\n                }\n\n                var OldString,NewString\n                for (var LookupIndex in Table.items) {\n                    if (Table.items[LookupIndex].Id == searchTarget) \n                        OldString = Table.items[LookupIndex].Name\n                    else if (Table.items[LookupIndex].Id == self.form.NewValue.value) \n                        NewString = Table.items[LookupIndex].Name\n                }\n                if (isEmptyOrNull(OldString))\n                    self.form.Description.value = `${self.form.EmployeeRowId.text} is promoted to ${NewString} ${Criteria}`\n                else\n                self.form.Description.value = `${self.form.EmployeeRowId.text} is promoted from ${OldString} ${Criteria} to ${NewString} ${Criteria}`\n            }\n\n            else if (CareerPathType == MasterCareerPathType.demotion) { // demotion\n                var Table, searchTarget, Criteria \n                if (CategoryId == Category.DEPARTMENT) {\n                    Table = getLookup(\"Department.Department\")\n                    searchTarget = DepartmentID\n                    Criteria = \"Department\"\n                }\n                else if (CategoryId == Category.DIVISION) {\n                    Table = getLookup(\"Division.Division\")\n                    searchTarget = DivisionID\n                    Criteria = \"Division\"\n                }\n                else if (CategoryId == Category.JOBGRADE) {\n                    Table = getLookup(\"JobGrade.JobGrade\")\n                    searchTarget = JobGradeID\n                    Criteria = \"Job Grade\"\n                }\n                else if (CategoryId == Category.OCCUPATION) {\n                    Table = getLookup(\"Occupation.Occupation\")\n                    searchTarget = OccupationID\n                    Criteria = \"Occupation\"\n                }\n                else if (CategoryId == Category.SECTION) {\n                    Table = getLookup(\"Section.Section\")\n                    searchTarget = SectionID\n                    Criteria = \"Section\"\n                }\n                var OldString, NewString\n                for (var LookupIndex in Table.items) {\n                    if (Table.items[LookupIndex].Id == searchTarget)\n                        OldString = Table.items[LookupIndex].Name\n                    else if (Table.items[LookupIndex].Id == self.form.NewValue.value)\n                        NewString = Table.items[LookupIndex].Name\n                }\n              \n                self.form.Description.value = `${self.form.EmployeeRowId.text} is demoted from ${OldString} ${Criteria} to ${NewString} ${Criteria}`\n\n            }\n\n\n\n        })\n    }\n}", "import { Decorators } from '@serenity-is/corelib';\nimport { EmployeeAllowanceColumns, EmployeeAllowanceRow, EmployeeCp38Columns, EmployeeCp38Row, MasterAllowanceRow } from '../../../ServerTypes/EmployeeProfile';\nimport { GridEditorBase } from \"@serenity-is/extensions\";\nimport {  EmployeeCp38EditDialog } from './EmployeeCp38EditDialog';\n@Decorators.registerEditor('HRMSoftware.EmployeeProfile.EmployeeCp38Editor')\nexport class EmployeeCp38Editor extends GridEditorBase<EmployeeCp38Row> {\n    protected getColumnsKey() { return EmployeeCp38Columns.columnsKey; }\n    protected getDialogType() { return EmployeeCp38EditDialog; }\n    protected getLocalTextPrefix() { return EmployeeCp38Row.localTextPrefix; }\n    protected getAddButtonCaption() {\n        return \"Add\";\n    }\n    /*\n    protected validateEntity(row: EmployeeAllowanceRow, id: number) {\n        if (!super.validateEntity(row, id))\n            return false;\n\n        var itemId = id ?? row[this.getIdProperty()];\n        MasterAllowanceRow.getLookupAsync().then(x => {\n            var item = this.view?.getItemById(itemId);\n            if (item) {\n                console.log(x.itemById[row.MasterAllowanceId])\n                item.AllowanceCode = x.itemById[row.MasterAllowanceId].AllowanceCode;\n                this.view.updateItem(itemId, item);\n            }\n        });\n\n        return true;\n    }\n*/\n    \n}", "import { Decorators, EditorUtils, EntityDialog } from '@serenity-is/corelib';\nimport { EmployeeAllowanceForm, EmployeeAllowanceRow, EmployeeAllowanceService, EmployeeCp38EditorForm, EmployeeCp38Row, EmployeeCp38Service, MasterAllowanceRow, MasterAllowanceService } from '../../../ServerTypes/EmployeeProfile';\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\nimport { alertDialog, isEmptyOrNull, getHighlightTarget, RetrieveResponse, serviceCall } from '@serenity-is/corelib/q';\n\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.EmployeeCp38EditDialog')\nexport class EmployeeCp38EditDialog extends GridEditorDialog<EmployeeCp38Row> {\n    protected getFormKey() { return EmployeeCp38EditorForm.formKey; }\n    protected getRowDefinition() { return EmployeeCp38Row; }\n    protected getService() { return EmployeeCp38Service.baseUrl; }\n    protected getLocalTextPrefix() { return EmployeeCp38Row.localTextPrefix; }\n    protected getNameProperty() { return EmployeeCp38Row.nameProperty; }\n\n    protected form: EmployeeCp38EditorForm = new EmployeeCp38EditorForm(this.idPrefix);\n    public currentVal: any;\n    constructor() {\n        super();\n        this.form = new EmployeeCp38EditorForm(this.idPrefix);\n\n    }\n\n\n\n\n}", "import { Decorators } from '@serenity-is/corelib';\nimport {FixedDeductionColumns, FixedDeductionRow, MasterDeductionRow } from '../../../ServerTypes/EmployeeProfile';\n\nimport { GridEditorBase } from \"@serenity-is/extensions\";\nimport { FixedDeductionEditDialog } from './FixedDeductionEditDialog';\r\n@Decorators.registerEditor('HRMSoftware.EmployeeProfile.FixedDeductionEditor')\nexport class FixedDeductionEditor extends GridEditorBase<FixedDeductionRow> {\n    protected getColumnsKey() { return FixedDeductionColumns.columnsKey; }\n    protected getDialogType() { return FixedDeductionEditDialog; }\n    protected getLocalTextPrefix() { return FixedDeductionRow.localTextPrefix; }\n    protected getAddButtonCaption() {\n        return \"Add\";\n    }\n    protected validateEntity(row: FixedDeductionRow, id: number) {\r\n        if (!super.validateEntity(row, id))\r\n            return false;\r\n\r\n        var itemId = id ?? row[this.getIdProperty()];\r\n        MasterDeductionRow.getLookupAsync().then(x => {\r\n            var item = this.view?.getItemById(itemId);\r\n            if (item) {\r\n                item.DeductionCode = x.itemById[row.MasterDeductionId].DeductionCode;\r\n                this.view.updateItem(itemId, item);\r\n            }\r\n        });\r\n\r\n        return true;\r\n    }\n\n\n}", "import { Decorators, EditorUtils, EntityDialog } from '@serenity-is/corelib';\nimport { FixedDeductionForm, FixedDeductionRow, FixedDeductionService, MasterDeductionService } from '../../../ServerTypes/EmployeeProfile';\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\nimport { alertDialog, getHighlightTarget, RetrieveResponse, serviceCall } from '@serenity-is/corelib/q';\n\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.FixedDeductionEditDialog')\nexport class FixedDeductionEditDialog extends GridEditorDialog<FixedDeductionRow> {\n    protected getFormKey() { return FixedDeductionForm.formKey; }\n    protected getRowDefinition() { return FixedDeductionRow; }\n    protected getService() { return FixedDeductionService.baseUrl; }\n    protected getLocalTextPrefix() { return FixedDeductionRow.localTextPrefix; }\n    protected getNameProperty() { return FixedDeductionRow.nameProperty; }\n\n    protected form: FixedDeductionForm = new FixedDeductionForm(this.idPrefix);\n\n    constructor() {\n        super();\n        this.form = new FixedDeductionForm(this.idPrefix);\n\n    }\n\n    public onDialogOpen() {\n        super.onDialogOpen()\n        var self = this\n        this.\n        $('.DeductionCode').hide()\n        var MasterDeductionIdElement = document.getElementById(`${this.idPrefix}MasterDeductionId`)\n        $(MasterDeductionIdElement).on('change', async function () {\n            MasterDeductionService.Retrieve({\n                EntityId: self.form.MasterDeductionId.value\n            }, response => {\n                self.form.Amount.value = response.Entity.Amount\n                self.form.Description.value = response.Entity.Description\n \n                self.form.OneTime.value = response.Entity.OneTime\n                self.form.Recurring.value = response.Entity.Recurring\n\n            })\n        })\n\n\n        EditorUtils.setReadonly(this.form.DeductedOneTime.element, true);\n        if (this.form.OneTime.value == true && this.form.DeductedOneTime.value == true)\n            EditorUtils.setReadonly(this.form.DeductedOneTime.element, false);\n        \n\n\n        var RecurringElement = document.getElementById(this.idPrefix + 'Recurring')\n        $(RecurringElement).on('change', async function () {\n            $('.DeductedOneTime').hide()\n\n            if (self.form.OneTime.value == true)\n                self.form.OneTime.value = false\n\n            if (self.form.Recurring.value == true) {\n                self.form.OneTime.value = false\n            }\n        })\n        var OneTimeElement = document.getElementById(this.idPrefix + 'OneTime')\n        $(OneTimeElement).on('change', async function () {\n            $('.DeductedOneTime').hide()\n            if (self.form.Recurring.value == true)\n                self.form.Recurring.value = false\n            if (self.form.OneTime.value == true) {\n                $('.DeductedOneTime').show()\n                self.form.Recurring.value = false\n            }\n\n        })\n        if (self.form.OneTime.value == true) {\n            $('.DeductedOneTime').show()\n            self.form.Recurring.value = false\n        }\n\n    }\n\n    protected save_submitHandler(response): void {\n        if (this.form.Recurring.value == false && this.form.OneTime.value == false) {\n            alertDialog('Please choose the frequency of this deduction')\n            return\n        }\n        this.form.DeductionCode.value = this.form.MasterDeductionId.text\n\n        super.save_submitHandler(response);\n\n    }\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum EPFClass {\n    None = 0,\n    Class_1 = 1,\n    Class_3 = 2,\n    Class_5 = 3,\n    Class_4 = 4,\n    Class_2 = 5\n}\nDecorators.registerEnumType(EPFClass, 'HRMSoftware.EmployeeProfile.EPFClass', 'HumanResource.EmployeeProfile.EPFClass');", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum SOCSOClass {\n    None = 0,\n    Class_1 = 1,\n    Class_2 = 2\n}\nDecorators.registerEnumType(SOCSOClass, 'HRMSoftware.EmployeeProfile.SOCSOClass', 'HumanResource.EmployeeProfile.SOCSOClass');", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum HRDFClass {\n    None = 0,\n    Class_1 = 1\n}\nDecorators.registerEnumType(HRDFClass, 'HRMSoftware.EmployeeProfile.HRDFClass', 'HumanResource.EmployeeProfile.HRDFClass');", "\uFEFFexport class EmployeeResignColumns {\n    static columnsKey = 'EmployeeProfile.EmployeeResign';\n}", "\uFEFFimport { IntegerEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeResignForm {\n    NoticePeriod: IntegerEditor;\n    ResignationDate: DateEditor;\n    ResignLeaveDate: DateEditor;\n}\n\nexport class EmployeeResignForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.EmployeeResign';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeResignForm.init)  {\n            EmployeeResignForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = DateEditor;\n\n            initFormType(EmployeeResignForm, [\n                'NoticePeriod', w0,\n                'ResignationDate', w1,\n                'ResignLeaveDate', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeResignRow {\n    Id?: number;\n    ResignationDate?: string;\n    ResignLeaveDate?: string;\n    NoticePeriod?: number;\n}\n\nexport abstract class EmployeeResignRow {\n    static readonly idProperty = 'Id';\n    static readonly localTextPrefix = 'EmployeeProfile.EmployeeResign';\n    static readonly deletePermission = '*';\n    static readonly insertPermission = '*';\n    static readonly readPermission = '*';\n    static readonly updatePermission = '*';\n\n    static readonly Fields = fieldsProxy<EmployeeResignRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeResignRow } from \"./EmployeeResignRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeResignService {\n    export const baseUrl = 'EmployeeProfile/EmployeeResign';\n\n    export declare function Create(request: SaveRequest<EmployeeResignRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeResignRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeResignRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeResignRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/EmployeeResign/Create\",\n        Update: \"EmployeeProfile/EmployeeResign/Update\",\n        Delete: \"EmployeeProfile/EmployeeResign/Delete\",\n        Retrieve: \"EmployeeProfile/EmployeeResign/Retrieve\",\n        List: \"EmployeeProfile/EmployeeResign/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeeResignService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class FixedDeductionColumns {\n    static columnsKey = 'EmployeeProfile.FixedDeduction';\n}", "\uFEFFimport { LookupEditor, DecimalEditor, DateEditor, TextAreaEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface FixedDeductionForm {\n    MasterDeductionId: LookupEditor;\n    Amount: DecimalEditor;\n    EffectiveFrom: DateEditor;\n    EffectiveUntil: DateEditor;\n    Description: TextAreaEditor;\n    Recurring: BooleanEditor;\n    OneTime: BooleanEditor;\n    DeductedOneTime: BooleanEditor;\n}\n\nexport class FixedDeductionForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.FixedDeduction';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!FixedDeductionForm.init)  {\n            FixedDeductionForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = DecimalEditor;\n            var w2 = DateEditor;\n            var w3 = TextAreaEditor;\n            var w4 = BooleanEditor;\n\n            initFormType(FixedDeductionForm, [\n                'MasterDeductionId', w0,\n                'Amount', w1,\n                'EffectiveFrom', w2,\n                'EffectiveUntil', w2,\n                'Description', w3,\n                'Recurring', w4,\n                'OneTime', w4,\n                'DeductedOneTime', w4\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface FixedDeductionRow {\n    Id?: number;\n    MasterDeductionId?: number;\n    DeductionCode?: string;\n    EmployeeRowId?: number;\n    Description?: string;\n    Amount?: number;\n    EffectiveFrom?: string;\n    EffectiveUntil?: string;\n    Recurring?: boolean;\n    DeductedOneTime?: boolean;\n    OneTime?: boolean;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class FixedDeductionRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Description';\n    static readonly localTextPrefix = 'EmployeeProfile.FixedDeduction';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<FixedDeductionRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { FixedDeductionRow } from \"./FixedDeductionRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace FixedDeductionService {\n    export const baseUrl = 'EmployeeProfile/FixedDeduction';\n\n    export declare function Create(request: SaveRequest<FixedDeductionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<FixedDeductionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<FixedDeductionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<FixedDeductionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/FixedDeduction/Create\",\n        Update: \"EmployeeProfile/FixedDeduction/Update\",\n        Delete: \"EmployeeProfile/FixedDeduction/Delete\",\n        Retrieve: \"EmployeeProfile/FixedDeduction/Retrieve\",\n        List: \"EmployeeProfile/FixedDeduction/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>FixedDeductionService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StatusFormatter } from \"@/HumanResource/PayrollSettings/NoPaidLeave/StatusFormatter\";\n\nexport class MasterAllowanceColumns {\n    static columnsKey = 'EmployeeProfile.MasterAllowance';\n}\n\n[StatusFormatter]; // referenced types", "\uFEFFimport { StringEditor, DecimalEditor, TextAreaEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MasterAllowanceForm {\n    AllowanceCode: StringEditor;\n    Amount: DecimalEditor;\n    Description: TextAreaEditor;\n    Recurring: BooleanEditor;\n    OneTime: BooleanEditor;\n    AllowanceSubjections: BooleanEditor;\n    FullAttendance: BooleanEditor;\n    NoLate: BooleanEditor;\n    NoAbsence: BooleanEditor;\n    NoEarlyLeaving: BooleanEditor;\n    ExemptUnpaidLeave: BooleanEditor;\n    ExemptHospitalisationLeave: BooleanEditor;\n    ExemptSickLeave: BooleanEditor;\n    ExemptAnnualLeave: BooleanEditor;\n    ExemptMaternityLeave: BooleanEditor;\n    ExemptPaternityLeave: BooleanEditor;\n    ExemptMarriageLeave: BooleanEditor;\n    ExemptCompassionateLeave: BooleanEditor;\n    ExemptEmergencyLeave: BooleanEditor;\n    ExemptGatepassLeave: BooleanEditor;\n    SubjectionEis: BooleanEditor;\n    SubjectionEpf: BooleanEditor;\n    SubjectionSocso: BooleanEditor;\n    SubjectionPcb: BooleanEditor;\n    SubjectionHrdf: BooleanEditor;\n    SubjectionOt: BooleanEditor;\n}\n\nexport class MasterAllowanceForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.MasterAllowance';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MasterAllowanceForm.init)  {\n            MasterAllowanceForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DecimalEditor;\n            var w2 = TextAreaEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(MasterAllowanceForm, [\n                'AllowanceCode', w0,\n                'Amount', w1,\n                'Description', w2,\n                'Recurring', w3,\n                'OneTime', w3,\n                'AllowanceSubjections', w3,\n                'FullAttendance', w3,\n                'NoLate', w3,\n                'NoAbsence', w3,\n                'NoEarlyLeaving', w3,\n                'ExemptUnpaidLeave', w3,\n                'ExemptHospitalisationLeave', w3,\n                'ExemptSickLeave', w3,\n                'ExemptAnnualLeave', w3,\n                'ExemptMaternityLeave', w3,\n                'ExemptPaternityLeave', w3,\n                'ExemptMarriageLeave', w3,\n                'ExemptCompassionateLeave', w3,\n                'ExemptEmergencyLeave', w3,\n                'ExemptGatepassLeave', w3,\n                'SubjectionEis', w3,\n                'SubjectionEpf', w3,\n                'SubjectionSocso', w3,\n                'SubjectionPcb', w3,\n                'SubjectionHrdf', w3,\n                'SubjectionOt', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MasterAllowanceRow {\n    Id?: number;\n    AllowanceCode?: string;\n    Amount?: number;\n    SubjectionEis?: boolean;\n    SubjectionEpf?: boolean;\n    SubjectionSocso?: boolean;\n    SubjectionPcb?: boolean;\n    SubjectionHrdf?: boolean;\n    SubjectionOt?: boolean;\n    Description?: string;\n    AllowanceSubjections?: boolean;\n    FullAttendance?: boolean;\n    Recurring?: boolean;\n    OneTime?: boolean;\n    NoLate?: boolean;\n    NoAbsence?: boolean;\n    NoEarlyLeaving?: boolean;\n    ExemptUnpaidLeave?: boolean;\n    ExemptHospitalisationLeave?: boolean;\n    ExemptSickLeave?: boolean;\n    ExemptAnnualLeave?: boolean;\n    ExemptMaternityLeave?: boolean;\n    ExemptPaternityLeave?: boolean;\n    ExemptMarriageLeave?: boolean;\n    ExemptCompassionateLeave?: boolean;\n    ExemptEmergencyLeave?: boolean;\n    ExemptGatepassLeave?: boolean;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class MasterAllowanceRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'AllowanceCode';\n    static readonly localTextPrefix = 'EmployeeProfile.MasterAllowance';\n    static readonly lookupKey = 'MasterAllowance.MasterAllowance';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MasterAllowanceRow>('MasterAllowance.MasterAllowance') }\n    static async getLookupAsync() { return getLookupAsync<MasterAllowanceRow>('MasterAllowance.MasterAllowance') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<MasterAllowanceRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { MasterAllowanceRow } from \"./MasterAllowanceRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace MasterAllowanceService {\n    export const baseUrl = 'EmployeeProfile/MasterAllowance';\n\n    export declare function Create(request: SaveRequest<MasterAllowanceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MasterAllowanceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MasterAllowanceRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MasterAllowanceRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/MasterAllowance/Create\",\n        Update: \"EmployeeProfile/MasterAllowance/Update\",\n        Delete: \"EmployeeProfile/MasterAllowance/Delete\",\n        Retrieve: \"EmployeeProfile/MasterAllowance/Retrieve\",\n        List: \"EmployeeProfile/MasterAllowance/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MasterAllowanceService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum MasterCareerPathType {\n    increment = 0,\n    decrement = 1,\n    promotion = 2,\n    demotion = 3\n}\nDecorators.registerEnumType(MasterCareerPathType, 'HRMSoftware.EmployeeProfile.MasterCareerPathType', 'HumanResource.EmployeeProfile.MasterCareerPathType');", "\uFEFFimport { MasterCareerPathType } from \"./MasterCareerPathType\";\n\nexport class MasterCareerPathColumns {\n    static columnsKey = 'EmployeeProfile.MasterCareerPath';\n}\n\n[MasterCareerPathType]; // referenced types", "\uFEFFimport { MasterCareerPathType } from \"./MasterCareerPathType\";\nimport { EnumEditor, StringEditor, TextAreaEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { Category } from \"./Category\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCareerPathForm {\n    CareerPathType: EnumEditor;\n    CareerPathCode: StringEditor;\n    CategoryId: EnumEditor;\n    Description: TextAreaEditor;\n}\n\nexport class MasterCareerPathForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.MasterCareerPath';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MasterCareerPathForm.init)  {\n            MasterCareerPathForm.init = true;\n\n            var w0 = EnumEditor;\n            var w1 = StringEditor;\n            var w2 = TextAreaEditor;\n\n            initFormType(MasterCareerPathForm, [\n                'CareerPathType', w0,\n                'CareerPathCode', w1,\n                'CategoryId', w0,\n                'Description', w2\n            ]);\n        }\n    }\n}\n\n[MasterCareerPathType, Category]; // referenced types", "\uFEFFimport { MasterCareerPathType } from \"./MasterCareerPathType\";\nimport { Category } from \"./Category\";\nimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCareerPathRow {\n    Id?: number;\n    CareerPathType?: MasterCareerPathType;\n    Description?: string;\n    CareerPathCode?: string;\n    CategoryId?: Category;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class MasterCareerPathRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'CareerPathCode';\n    static readonly localTextPrefix = 'EmployeeProfile.MasterCareerPath';\n    static readonly lookupKey = 'MasterCareerPath.MasterCareerPath';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MasterCareerPathRow>('MasterCareerPath.MasterCareerPath') }\n    static async getLookupAsync() { return getLookupAsync<MasterCareerPathRow>('MasterCareerPath.MasterCareerPath') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<MasterCareerPathRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { MasterCareerPathRow } from \"./MasterCareerPathRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace MasterCareerPathService {\n    export const baseUrl = 'EmployeeProfile/MasterCareerPath';\n\n    export declare function Create(request: SaveRequest<MasterCareerPathRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MasterCareerPathRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MasterCareerPathRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MasterCareerPathRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/MasterCareerPath/Create\",\n        Update: \"EmployeeProfile/MasterCareerPath/Update\",\n        Delete: \"EmployeeProfile/MasterCareerPath/Delete\",\n        Retrieve: \"EmployeeProfile/MasterCareerPath/Retrieve\",\n        List: \"EmployeeProfile/MasterCareerPath/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MasterCareerPathService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class MasterDeductionColumns {\n    static columnsKey = 'EmployeeProfile.MasterDeduction';\n}", "\uFEFFimport { StringEditor, DecimalEditor, TextAreaEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MasterDeductionForm {\n    DeductionCode: StringEditor;\n    Amount: DecimalEditor;\n    Description: TextAreaEditor;\n    Recurring: BooleanEditor;\n    OneTime: BooleanEditor;\n}\n\nexport class MasterDeductionForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.MasterDeduction';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MasterDeductionForm.init)  {\n            MasterDeductionForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DecimalEditor;\n            var w2 = TextAreaEditor;\n            var w3 = BooleanEditor;\n\n            initFormType(MasterDeductionForm, [\n                'DeductionCode', w0,\n                'Amount', w1,\n                'Description', w2,\n                'Recurring', w3,\n                'OneTime', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MasterDeductionRow {\n    Id?: number;\n    DeductionCode?: string;\n    Amount?: number;\n    Description?: string;\n    Recurring?: boolean;\n    OneTime?: boolean;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class MasterDeductionRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'DeductionCode';\n    static readonly localTextPrefix = 'EmployeeProfile.MasterDeduction';\n    static readonly lookupKey = 'MasterDeduction.MasterDeduction';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MasterDeductionRow>('MasterDeduction.MasterDeduction') }\n    static async getLookupAsync() { return getLookupAsync<MasterDeductionRow>('MasterDeduction.MasterDeduction') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<MasterDeductionRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { MasterDeductionRow } from \"./MasterDeductionRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace MasterDeductionService {\n    export const baseUrl = 'EmployeeProfile/MasterDeduction';\n\n    export declare function Create(request: SaveRequest<MasterDeductionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MasterDeductionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MasterDeductionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MasterDeductionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/MasterDeduction/Create\",\n        Update: \"EmployeeProfile/MasterDeduction/Update\",\n        Delete: \"EmployeeProfile/MasterDeduction/Delete\",\n        Retrieve: \"EmployeeProfile/MasterDeduction/Retrieve\",\n        List: \"EmployeeProfile/MasterDeduction/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MasterDeductionService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class TerminateEmployeeColumns {\n    static columnsKey = 'EmployeeProfile.TerminateEmployee';\n}", "\uFEFFimport { IntegerEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface TerminateEmployeeForm {\n    NoticePeriod: IntegerEditor;\n    TerminateDate: DateEditor;\n    TerminateLeaveDate: DateEditor;\n}\n\nexport class TerminateEmployeeForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.TerminateEmployee';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TerminateEmployeeForm.init)  {\n            TerminateEmployeeForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = DateEditor;\n\n            initFormType(TerminateEmployeeForm, [\n                'NoticePeriod', w0,\n                'TerminateDate', w1,\n                'TerminateLeaveDate', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TerminateEmployeeRow {\n    Id?: number;\n    TerminateDate?: string;\n    TerminateLeaveDate?: string;\n    NoticePeriod?: number;\n}\n\nexport abstract class TerminateEmployeeRow {\n    static readonly idProperty = 'Id';\n    static readonly localTextPrefix = 'EmployeeProfile.TerminateEmployee';\n    static readonly deletePermission = '*';\n    static readonly insertPermission = '*';\n    static readonly readPermission = '*';\n    static readonly updatePermission = '*';\n\n    static readonly Fields = fieldsProxy<TerminateEmployeeRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { TerminateEmployeeRow } from \"./TerminateEmployeeRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace TerminateEmployeeService {\n    export const baseUrl = 'EmployeeProfile/TerminateEmployee';\n\n    export declare function Create(request: SaveRequest<TerminateEmployeeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TerminateEmployeeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TerminateEmployeeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TerminateEmployeeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/TerminateEmployee/Create\",\n        Update: \"EmployeeProfile/TerminateEmployee/Update\",\n        Delete: \"EmployeeProfile/TerminateEmployee/Delete\",\n        Retrieve: \"EmployeeProfile/TerminateEmployee/Retrieve\",\n        List: \"EmployeeProfile/TerminateEmployee/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TerminateEmployeeService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class UserCreationColumns {\n    static columnsKey = 'EmployeeProfile.UserCreation';\n}", "\uFEFFimport { LookupEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface UserCreationForm {\n    OccupationList: LookupEditor;\n    DepartmentList: LookupEditor;\n    DivisionList: LookupEditor;\n    JobGradeList: LookupEditor;\n    SectionList: LookupEditor;\n    EmployeeRowList: LookupEditor;\n    AllEmployee: BooleanEditor;\n    EmployeeRowHrPriveledge: LookupEditor;\n}\n\nexport class UserCreationForm extends PrefixedContext {\n    static formKey = 'EmployeeProfile.UserCreation';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!UserCreationForm.init)  {\n            UserCreationForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = BooleanEditor;\n\n            initFormType(UserCreationForm, [\n                'OccupationList', w0,\n                'DepartmentList', w0,\n                'DivisionList', w0,\n                'JobGradeList', w0,\n                'SectionList', w0,\n                'EmployeeRowList', w0,\n                'AllEmployee', w1,\n                'EmployeeRowHrPriveledge', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface UserCreationRow {\n    EmployeeRowHrPriveledge?: number[];\n    EmployeeRowList?: number[];\n    OccupationList?: number[];\n    DepartmentList?: number[];\n    DivisionList?: number[];\n    JobGradeList?: number[];\n    SectionList?: number[];\n    AllEmployee?: boolean;\n    Id?: number;\n    EmployeeName?: string;\n    EmployeeId?: string;\n    Nric?: string;\n    Age?: number;\n    LastPaymentDate?: string;\n    RecruitmentDate?: string;\n    Birthday?: string;\n    EmployeeEmail?: string;\n    EpfAccountNumber?: string;\n    ProbationPeriodEnd?: string;\n    ProbationPeriod?: number;\n    NoticePeriod?: number;\n    Address?: string;\n    TelNumber1?: string;\n    TelNumber2?: string;\n    PassportNumber?: string;\n    PassportIssueDate?: string;\n    PassportValidPeriod?: number;\n    PassportExpiryDate?: string;\n    BonusFactor?: number;\n    BasicSalary?: number;\n    Allowance?: number;\n    InsertDate?: string;\n    UpdateDate?: string;\n    DeleteDate?: string;\n    RaceId?: number;\n    EmployeeType?: number;\n    Sex?: number;\n    DepartmentId?: number;\n    IsActive?: number;\n    InsertUserId?: number;\n    UpdateUserId?: number;\n    DeleteUserId?: number;\n    DivisionId?: number;\n    SectionId?: number;\n    JobGradeId?: number;\n    OccupationId?: number;\n    BankId?: number;\n    BankAccountNumber?: string;\n    CityId?: number;\n    StateId?: number;\n    EmployeeImg?: string;\n    NationalityId?: number;\n    MaritalStatus?: number;\n    GrantHrPrivilege?: number;\n    CreateUser?: number;\n    PayByHour?: number;\n    PayByMonth?: number;\n    PayByDay?: number;\n    OtPayEntitlement?: number;\n    DailyWorkingMinutes?: number;\n    UserPassword?: string;\n    UserRowId?: number;\n    UserName?: string;\n    ResignationDate?: string;\n    LeaveDate?: string;\n    Terminated?: number;\n    Resigned?: number;\n    EpfContribution?: number;\n    WorkingSpouse?: number;\n    ChildrenUnderEighteen?: number;\n    ChildrenInUniversity?: number;\n    PostalCode?: string;\n    CountryId?: number;\n    Race?: string;\n    DepartmentName?: string;\n    DivisionName?: string;\n    SectionName?: string;\n    JobGradeName?: string;\n    OccupationName?: string;\n    BankName?: string;\n    CityName?: string;\n    StateName?: string;\n    NationalityName?: string;\n}\n\nexport abstract class UserCreationRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'EmployeeName';\n    static readonly localTextPrefix = 'EmployeeProfile.UserCreation';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<UserCreationRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { UserCreationRow } from \"./UserCreationRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace UserCreationService {\n    export const baseUrl = 'EmployeeProfile/UserCreation';\n\n    export declare function Create(request: SaveRequest<UserCreationRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<UserCreationRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<UserCreationRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<UserCreationRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/UserCreation/Create\",\n        Update: \"EmployeeProfile/UserCreation/Update\",\n        Delete: \"EmployeeProfile/UserCreation/Delete\",\n        Retrieve: \"EmployeeProfile/UserCreation/Retrieve\",\n        List: \"EmployeeProfile/UserCreation/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>UserCreationService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { Decorators, EditorUtils, EntityDialog } from '@serenity-is/corelib';\nimport { EmployeeAllowanceForm, EmployeeAllowanceRow, EmployeeAllowanceService, MasterAllowanceRow, MasterAllowanceService } from '../../../ServerTypes/EmployeeProfile';\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\nimport { alertDialog, isEmptyOrNull, getHighlightTarget, RetrieveResponse, serviceCall } from '@serenity-is/corelib/q';\n\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.EmployeeAllowanceEditDialog')\nexport class EmployeeAllowanceEditDialog extends GridEditorDialog<EmployeeAllowanceRow> {\n    protected getFormKey() { return EmployeeAllowanceForm.formKey; }\n    protected getRowDefinition() { return EmployeeAllowanceRow; }\n    protected getService() { return EmployeeAllowanceService.baseUrl; }\n    protected getLocalTextPrefix() { return EmployeeAllowanceRow.localTextPrefix; }\n    protected getNameProperty() { return EmployeeAllowanceRow.nameProperty; }\n\n    protected form: EmployeeAllowanceForm = new EmployeeAllowanceForm(this.idPrefix);\n    public currentVal: any;\n    constructor() {\n        super();\n        this.form = new EmployeeAllowanceForm(this.idPrefix);\n\n    }\n    public onDialogOpen() {\n        super.onDialogOpen()\n        var self = this\n        $('.category-links').hide()\n\n        $('.field.SubjectionEis label.caption, .field.SubjectionEpf label.caption, .field.SubjectionHrdf label.caption').removeClass('caption');\n        $('.field.SubjectionPcb label.caption, .field.SubjectionSocso label.caption, .field.SubjectionOt label.caption').removeClass('caption');\n        $('.field.SubjectionEis, .field.SubjectionEpf, .field.SubjectionHrdf, .field.SubjectionPcb, .field.SubjectionSocso,  .field.SubjectionOt').addClass('col-md-2');\r\n      \n\n        var MasterAllowanceIdElement = document.getElementById(`${this.idPrefix}MasterAllowanceId`)\n        $(MasterAllowanceIdElement).on('change', async function () {\n            console.log(self.form.MasterAllowanceId.value)\n\n            if (isEmptyOrNull(self.form.MasterAllowanceId.value)) {\n                self.hideAll()\n\n                self.form.Amount.value = null\n                self.form.Description.value = ''\n                self.form.FullAttendance.value = self.form.AllowanceSubjections.value = false\n                $(FullAttendanceElement).trigger('change')\n                $(AllowanceSubjectionsElement).trigger('change')\n                return\n            }\n            self.showAll()\n            console.log(self.form.MasterAllowanceId.value)\n            MasterAllowanceService.Retrieve({\n                EntityId: self.form.MasterAllowanceId.value\n            }, response => {\n                console.log(response.Entity)\n                self.form.Amount.value = response.Entity.Amount\n                self.form.Description.value = response.Entity.Description\n                self.form.AllowanceSubjections.value = response.Entity.AllowanceSubjections\n                $(AllowanceSubjectionsElement).trigger('change')\n\n                self.form.FullAttendance.value = response.Entity.FullAttendance\n                self.form.NoAbsence.value = response.Entity.NoAbsence\n                self.form.NoEarlyLeaving.value = response.Entity.NoEarlyLeaving\n                self.form.NoLate.value = response.Entity.NoLate\n                $(FullAttendanceElement).trigger('change')\n\n\n\n                self.form.ExemptAnnualLeave.value = response.Entity.ExemptAnnualLeave\n                self.form.ExemptCompassionateLeave.value = response.Entity.ExemptCompassionateLeave\n                self.form.ExemptEmergencyLeave.value = response.Entity.ExemptEmergencyLeave\n                self.form.ExemptGatepassLeave.value = response.Entity.ExemptGatepassLeave\n                self.form.ExemptHospitalisationLeave.value = response.Entity.ExemptHospitalisationLeave\n                self.form.ExemptMarriageLeave.value = response.Entity.ExemptMarriageLeave\n                self.form.ExemptMaternityLeave.value = response.Entity.ExemptMaternityLeave\n                self.form.ExemptPaternityLeave.value = response.Entity.ExemptPaternityLeave\n                self.form.ExemptSickLeave.value = response.Entity.ExemptSickLeave\n                self.form.ExemptUnpaidLeave.value = response.Entity.ExemptUnpaidLeave\n                \n                self.form.OneTime.value = response.Entity.OneTime\n                self.form.Recurring.value = response.Entity.Recurring\n                self.form.SubjectionEpf.value = response.Entity.SubjectionEpf\n                self.form.SubjectionHrdf.value = response.Entity.SubjectionHrdf\n                self.form.SubjectionOt.value = response.Entity.SubjectionOt\n                self.form.SubjectionPcb.value = response.Entity.SubjectionPcb\n                self.form.SubjectionSocso.value = response.Entity.SubjectionSocso\n\n            })\n        })\n\n        EditorUtils.setReadonly(this.form.PaidOneTime.element, true);\n        if (this.form.OneTime.value == true && this.form.PaidOneTime.value == true)\n            EditorUtils.setReadonly(this.form.PaidOneTime.element, false);\n        var AllowanceSubjectionsElement = document.getElementById(this.idPrefix + 'AllowanceSubjections')\n        $(AllowanceSubjectionsElement).on('change', async function () {\n            console.log('fire')\n            if (self.form.AllowanceSubjections.value == true) {\n                $('.FullAttendance').show()\n                $('.NoLate').show()\n                $('.NoAbsence').show()\n                $('.NoEarlyLeaving').show()\n                if (self.form.FullAttendance.value == false) \n                    $('.ExemptUnpaidLeave').parent().hide()\n            }\n            else {\n                self.form.FullAttendance.value = self.form.NoLate.value = self.form.NoAbsence.value = false\n                $('.FullAttendance').hide()\n                $('.NoLate').hide()\n                $('.NoAbsence').hide()\n                $('.NoEarlyLeaving').hide()\n                $('.ExemptUnpaidLeave').parent().hide()\r\n            }\n        })\n\n        \n\n        var FullAttendanceElement = document.getElementById(this.idPrefix + 'FullAttendance')\n        $(FullAttendanceElement).on('change', async function () {\n            console.log('fire')\n            if (self.form.FullAttendance.value == true)\n                $('.ExemptUnpaidLeave').parent().show()\n            else {\n                self.form.ExemptUnpaidLeave.value = self.form.ExemptHospitalisationLeave.value = self.form.ExemptSickLeave.value =\n                    self.form.ExemptAnnualLeave.value = self.form.ExemptMaternityLeave.value = self.form.ExemptPaternityLeave.value =\n                    self.form.ExemptMarriageLeave.value = self.form.ExemptCompassionateLeave.value = self.form.ExemptEmergencyLeave.value =\n                    self.form.ExemptGatepassLeave.value = false\n                $('.ExemptUnpaidLeave').parent().hide()\n            }\n        })\n\n        var RecurringElement = document.getElementById(this.idPrefix + 'Recurring')\n        $(RecurringElement).on('change', async function () {\n            $('.PaidOneTime').hide()\n            console.log('fire')\n\n            if (self.form.OneTime.value == true) \n                self.form.OneTime.value = false\n            \n            if (self.form.Recurring.value == true) {\n                self.form.OneTime.value = false\n            }\n        })\n        var OneTimeElement = document.getElementById(this.idPrefix + 'OneTime')\n        $(OneTimeElement).on('change', async function () {\n            console.log('fire')\n\n            $('.PaidOneTime').hide()\n            if (self.form.Recurring.value == true) \n                self.form.Recurring.value = false\r\n            if (self.form.OneTime.value == true) {\n                $('.PaidOneTime').show()\n                self.form.Recurring.value = false\n            }\n                \n        })\n        if (self.form.OneTime.value == true) {\n            $('.PaidOneTime').show()\n            self.form.Recurring.value = false\n        }\n        this.hideAll()\n        if (!this.isNew()) {\n            $(MasterAllowanceIdElement).trigger('change')\n            console.log('haha')\n        }\n        $('.AllowanceCode').hide()\n\n    }\n    public hideAll() {\n        $('.AllowanceSubjections ').parent().hide()\n        $('.SubjectionEis ').parent().hide()\n        $('.Recurring').parent().hide()\n        $('.ExemptUnpaidLeave').parent().hide()\n        $('.NoLate, .NoAbsence, .NoEarlyLeaving, .FullAttendance').hide()\n    }\n    public showAll() {\n        $('.AllowanceSubjections ').parent().show()\n        $('.SubjectionEis ').parent().show()\n        $('.Recurring').parent().show()\n        $('.NoLate, .NoAbsence, .NoEarlyLeaving, .FullAttendance').show()\n        $('.ExemptUnpaidLeave').parent().show()\n    }\n\n    protected save_submitHandler(response): void {\n\n        if (this.form.Recurring.value == false && this.form.OneTime.value == false) {\n            alertDialog('Please choose the frequency of this allowance')\n            return\n        }\n\n        if (this.form.AllowanceSubjections.value == true &&\n            (this.form.FullAttendance.value == false && this.form.NoAbsence.value == false && this.form.NoEarlyLeaving.value == false && this.form.NoLate.value == false)) {\n            alertDialog('Please choose subjection of this allowance')\n            return\n        }\n        this.form.AllowanceCode.value = this.form.MasterAllowanceId.text\n        super.save_submitHandler(response);\n\n    }\n\n\n\n}"],
  "mappings": "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",
  "names": ["import_corelib", "import_corelib", "Category", "import_corelib", "EISClass", "import_corelib", "StatusFormatter", "ctx", "state", "__name", "__decorateClass", "EmployeeAllowanceColumns", "__name", "import_corelib", "import_q", "_EmployeeAllowanceForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "EmployeeAllowanceForm", "__name", "import_q", "EmployeeAllowanceRow", "__async", "__name", "import_q", "EmployeeAllowanceService", "x", "r", "s", "o", "import_corelib", "MonthFormatter", "ctx", "state", "__name", "__decorateClass", "EmployeeBonusColumns", "__name", "import_corelib", "import_q", "_EmployeeBonusForm", "prefix", "w0", "w1", "w2", "w3", "EmployeeBonusForm", "__name", "import_q", "EmployeeBonusRow", "__name", "import_q", "EmployeeBonusService", "x", "r", "s", "o", "EmployeeCareerPathColumns", "__name", "import_corelib", "import_q", "_EmployeeCareerPathForm", "prefix", "w0", "w1", "w2", "w3", "EmployeeCareerPathForm", "__name", "import_q", "EmployeeCareerPathRow", "__name", "import_q", "EmployeeCareerPathService", "x", "r", "s", "o", "EmployeeCp38Columns", "__name", "import_corelib", "import_q", "_EmployeeCp38EditorForm", "prefix", "w0", "w1", "EmployeeCp38EditorForm", "__name", "import_corelib", "import_q", "_EmployeeCp38Form", "prefix", "w0", "w1", "w2", "EmployeeCp38Form", "__name", "import_q", "EmployeeCp38Row", "__name", "import_q", "EmployeeCp38Service", "x", "r", "s", "o", "EmployeeIncentiveColumns", "__name", "import_corelib", "import_q", "_EmployeeIncentiveForm", "prefix", "w0", "w1", "w2", "w3", "EmployeeIncentiveForm", "__name", "import_q", "EmployeeIncentiveRow", "__name", "import_q", "EmployeeIncentiveService", "x", "r", "s", "o", "EmployeePersonalProfileColumns", "__name", "import_corelib", "import_q", "_EmployeePersonalProfileForm", "prefix", "w0", "w1", "w2", "w3", "EmployeePersonalProfileForm", "__name", "import_q", "EmployeePersonalProfileRow", "__name", "import_q", "EmployeePersonalProfileService", "x", "r", "s", "o", "import_corelib", "SexType", "EmployeeProfileColumns", "__name", "import_corelib", "import_corelib", "EmployeeType", "import_corelib", "MaritalStatus", "import_corelib", "ProbationClass", "import_corelib", "import_extensions", "import_corelib", "import_extensions", "import_q", "import_corelib", "EmployeeCareerPathEditDialog", "EmployeeCareerPathForm", "EmployeeCareerPathRow", "EmployeeCareerPathService", "newBasic", "self", "DivisionID", "DepartmentID", "SectionID", "OccupationID", "JobGradeID", "BasicSalary", "CareerPathType", "CategoryId", "NewValueEditor", "CareerPathIdElement", "__async", "EmployeeProfileService", "response", "MasterCareerPathService", "NewValueElement", "DivisionService", "index", "DepartmentService", "SectionService", "OccupationService", "JobGradeService", "Table", "searchTarget", "Criteria", "OldString", "NewString", "LookupIndex", "__name", "__decorateClass", "EmployeeCareerPathEditor", "EmployeeCareerPathColumns", "EmployeeCareerPathEditDialog", "EmployeeCareerPathRow", "row", "id", "itemId", "MasterCareerPathRow", "x", "_a", "item", "__name", "__decorateClass", "import_corelib", "import_extensions", "import_corelib", "import_extensions", "EmployeeCp38EditDialog", "EmployeeCp38EditorForm", "EmployeeCp38Row", "EmployeeCp38Service", "__name", "__decorateClass", "EmployeeCp38Editor", "EmployeeCp38Columns", "EmployeeCp38EditDialog", "EmployeeCp38Row", "__name", "__decorateClass", "import_corelib", "import_extensions", "import_corelib", "import_extensions", "import_q", "FixedDeductionEditDialog", "FixedDeductionForm", "FixedDeductionRow", "FixedDeductionService", "self", "MasterDeductionIdElement", "__async", "MasterDeductionService", "response", "RecurringElement", "OneTimeElement", "__name", "__decorateClass", "FixedDeductionEditor", "FixedDeductionColumns", "FixedDeductionEditDialog", "FixedDeductionRow", "row", "id", "itemId", "MasterDeductionRow", "x", "_a", "item", "__name", "__decorateClass", "import_corelib", "EPFClass", "import_corelib", "SOCSOClass", "import_corelib", "HRDFClass", "import_q", "_EmployeeProfileForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "w6", "w7", "EmployeeCareerPathEditor", "w8", "w9", "w10", "EmployeeCp38Editor", "w11", "EmployeeAllowanceEditor", "w12", "FixedDeductionEditor", "EmployeeProfileForm", "__name", "EmployeeResignColumns", "__name", "import_corelib", "import_q", "_EmployeeResignForm", "prefix", "w0", "w1", "EmployeeResignForm", "__name", "import_q", "EmployeeResignRow", "__name", "import_q", "EmployeeResignService", "x", "r", "s", "o", "FixedDeductionColumns", "__name", "import_corelib", "import_q", "_FixedDeductionForm", "prefix", "w0", "w1", "w2", "w3", "w4", "FixedDeductionForm", "__name", "import_q", "FixedDeductionRow", "__name", "import_q", "FixedDeductionService", "x", "r", "s", "o", "MasterAllowanceColumns", "__name", "import_corelib", "import_q", "_MasterAllowanceForm", "prefix", "w0", "w1", "w2", "w3", "MasterAllowanceForm", "__name", "import_q", "MasterAllowanceRow", "__async", "__name", "import_q", "MasterAllowanceService", "x", "r", "s", "o", "import_corelib", "MasterCareerPathType", "MasterCareerPathColumns", "__name", "import_corelib", "import_q", "_MasterCareerPathForm", "prefix", "w0", "w1", "w2", "MasterCareerPathForm", "__name", "import_q", "MasterCareerPathRow", "__async", "__name", "import_q", "MasterCareerPathService", "x", "r", "s", "o", "MasterDeductionColumns", "__name", "import_corelib", "import_q", "_MasterDeductionForm", "prefix", "w0", "w1", "w2", "w3", "MasterDeductionForm", "__name", "import_q", "MasterDeductionRow", "__async", "__name", "import_q", "MasterDeductionService", "x", "r", "s", "o", "TerminateEmployeeColumns", "__name", "import_corelib", "import_q", "_TerminateEmployeeForm", "prefix", "w0", "w1", "TerminateEmployeeForm", "__name", "import_q", "TerminateEmployeeRow", "__name", "import_q", "TerminateEmployeeService", "x", "r", "s", "o", "UserCreationColumns", "__name", "import_corelib", "import_q", "_UserCreationForm", "prefix", "w0", "w1", "UserCreationForm", "__name", "import_q", "UserCreationRow", "__name", "import_q", "UserCreationService", "x", "r", "s", "o", "import_extensions", "import_corelib", "import_extensions", "import_q", "EmployeeAllowanceEditDialog", "EmployeeAllowanceForm", "EmployeeAllowanceRow", "EmployeeAllowanceService", "self", "MasterAllowanceIdElement", "__async", "FullAttendanceElement", "AllowanceSubjectionsElement", "MasterAllowanceService", "response", "RecurringElement", "OneTimeElement", "__name", "__decorateClass", "EmployeeAllowanceEditor", "EmployeeAllowanceColumns", "EmployeeAllowanceEditDialog", "EmployeeAllowanceRow", "row", "id", "itemId", "MasterAllowanceRow", "x", "_a", "item", "__name", "__decorateClass"]
}
