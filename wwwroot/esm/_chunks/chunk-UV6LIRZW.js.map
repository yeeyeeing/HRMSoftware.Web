{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/PayrollSettings/Payroll/PayrollDialog.ts", "../../../Modules/HumanResource/PayrollSettings/PayrollGeneratingWizard/PayrollGeneratingWizardDialog.ts"],
  "sourcesContent": ["import {  Criteria, Decorators, EditorUtils, EntityDialog, RetrieveResponse, Select2Editor } from '@serenity-is/corelib';\nimport { EmployeeAllowanceRow, EmployeeAllowanceService, EmployeeBonusRow, EmployeeBonusService, EmployeeCp38Row, EmployeeCp38Service, EmployeeIncentiveRow, EmployeeIncentiveService, EmployeeProfileService, EmployeeType, EPFClass, FixedDeductionRow, FixedDeductionService, MaritalStatus } from '../../../ServerTypes/EmployeeProfile';\nimport { EisSubjectionService, EmployerContributionsRow, EpfSubjectionService, HrdfSubjectionService, NoPaidLeaveRow, NoPaidLeaveService, PayrollDeductionsRow, PayrollDeductionsService, PayrollEarningsRow, PayrollEarningsService, PayrollForm, PayrollRow, PayrollService, PayrollSettingsService, PayslipDeductedOneTimeDeductionsRow, PayslipPaidMoneyClaimingRow, PayslipPaidOneTimeAllowanceRow, PcbSubjectionService, SocsoSubjectionService } from '../../../ServerTypes/PayrollSettings';\nimport { ListResponse, serviceCall, Authorization } from '@serenity-is/corelib/q';\nimport { OTApplicationRow, OTApplicationService } from '../../../ServerTypes/OTApplication';\nimport { alertDialog, isEmptyOrNull } from '@serenity-is/corelib/q';\nimport { MoneyClaimApplicationRow, MoneyClaimApplicationService } from '../../../ServerTypes/MoneyClaimApplication';\nimport { data } from 'jquery';\nimport { EmployeeEarlyLeavingRow, EmployeeEarlyLeavingService } from '../../../ServerTypes/EmployeeEarlyLeaving';\nimport { CompanySettingsService } from '../../../ServerTypes/CompanySettings';\nimport { EmployeeLateRow, EmployeeLateService } from '../../../ServerTypes/EmployeeLate';\nimport { LeaveApplicationRow, LeaveApplicationService } from '../../../ServerTypes/LeaveApplication';\nimport { confirmDialog, confirm, notifySuccess, notifyError, notifyInfo } from '@serenity-is/corelib/q';\nimport { PermissionKeys } from '../../../ServerTypes/Administration';\nimport { AnnouncementWizardService } from '../../../ServerTypes/Announcement';\n\nexport interface Subjection {\n    id: number;\n    name: string;\n    subjection: number;\n}\n/*\nsubjection format\n(X,X,X,X)\n(EPF,EIS,HRDF,SOCSO)\nExample:(0,1,1,0)\nThe external earning subjected to eis and socso\n*/\n@Decorators.registerClass('HRMSoftware.PayrollSettings.PayrollDialog')\nexport class PayrollDialog extends EntityDialog<PayrollRow, any> {\n    protected getFormKey() { return PayrollForm.formKey; }\n    protected getRowDefinition() { return PayrollRow; }\n    protected getService() { return PayrollService.baseUrl; }\n    public AnnualizedIncentive: boolean;\n    public SeperateIncentive: boolean;\n    public AnnualizedBonus: boolean;\n    public SeperateBonus: boolean;\n\n    protected form = new PayrollForm(this.idPrefix);\n    public ExternalEarnings: string[] = [];\n    public ExternalDeductions: string[] = [];\n    public ExternalEarning: string;\n    public ExternalDeduction: string;\n    public EarningsString: string[] = []\n    public DeductionsString: string[] = []\n    public FinalEarnings: string[] = []\n    public FinalDeductions: string[] = []\n    public EmployerContributions: string[] = []\n\n\n    public EmployeeType: number; // check whether local or not\n    public EpfSubjection: number;\n\n    public NettDeductions: number;\n    public NettEarnings: number;\n    public NettEmployerContributions: number;\n\n    public EmployeeRowId: number;\n\n    public ListOfEpfSubjection: Subjection[] = [];\n    public ListOfEisSubjection: Subjection[] = [];\n    public ListOfHrdfSubjection: Subjection[] = [];\n    public ListOfSocsoSubjection: Subjection[] = [];\n    public ListOfPcbSubjection: Subjection[] = [];\n\n    public EpfAmount: number;\n    public EisAmount: number;\n    public PcbAmount: number;\n    public SocsoAmount: number;\n    public HrdfAmount: number;\n\n\n    public EmployeeEpf: number;\n    public EmployeeEis: number;\n    public EmployeePcb: number;\n    public EmployeeSocso: number;\n\n\n\n    public EmployerEpf: number;\n    public EmployerEis: number;\n    public EmployerSocso: number;\n    public EmployerHrdf: number;\n\n\n    public ListOfCriteria: string[] = [];\n\n\n\n    public NoPaidLeaveId: number[] = [];\n    public MoneyClaimingId: number[] = [];\n    public OtPayId: number[] = [];\n    public LateArrivalId: number[] = [];\n    public EarlyLeavingId: number[] = [];\n\n\n\n\n    public ReadOnly: boolean;\n    public PayDate: number;\n\n    public DeductEarlyLeaving: boolean;\n    public DeductLateArrival: boolean;\n\n    public listOfDicts: Item[] = [];\n    public dateString: string;\n    public AllowanceId: number[] = [];\n    public DeductionId: number[] = [];\n    public WizEmployeeRowId: number;\n    public PayYear: number;\n    public PayMonth: number;\n    public PayDateWiz: string;\n    public PayPeriodStart: string;\n    public PayPeriodEnd: string;\n    public ListOfPayrollData: any[];\n\n\n    constructor(Wiz,WizEmployeeRowId, PayYear, PayMonth, PayDateWiz, PayPeriodStart, PayPeriodEnd) {\n        super();\n        var self = this\n        this.Wiz = Wiz\n        this.WizEmployeeRowId = WizEmployeeRowId\n        this.PayYear = PayYear\n        this.PayMonth = PayMonth\n        this.PayDateWiz = PayDateWiz\n        this.PayPeriodStart = PayPeriodStart\n        this.PayPeriodEnd = PayPeriodEnd\n        var self = this\n        this.ReadOnly = false\n        PayrollService.List({\n        }, response => {\n            self.ListOfPayrollData = response.Entities\n        })\n    }\n\n    public dialogClose(): void {\n\n        $(\"#NewEarningsCategory\").remove();\n        super.dialogClose()\n    }\n  \n    protected getDialogOptions() {\n        let opt = super.getDialogOptions()\n        opt.width = opt.width + 550\n        return opt\n    }\n    public ResetTable(): void {\n        $('#AllowanceDeductionBody, #EarningDeductionBody, #MoneyClaimingBody').empty()\n        $(`#EarlyLeavingRate, #LateArrivalRate, #EarlyLeavingSubtotal, #LateArrivalSubtotal,\n        #NplDayRate, #totalOt, #NplHrRate, #AbsentDayRate, #PC38`).text(0)\n        $(`#${this.idPrefix}Bonus`).val(null)\n        $(`#${this.idPrefix}Incentive`).val(null)\n\n        var ot = document.getElementById(\"Ot1.0x\")\n        if (ot)\n            ot.textContent = \"0\"\n\n        ot = document.getElementById(\"Ot1.5x\")\n        if (ot)\n            ot.textContent = \"0\"\n\n        ot = document.getElementById(\"Ot2.0x\")\n        if (ot)\n            ot.textContent = \"0\"\n        \n        ot = document.getElementById(\"Ot1.0xValueTotal\")\n        if (ot)\n            ot.textContent = \"0\"\n        ot = document.getElementById(\"Ot1.5xValueTotal\")\n        if (ot)\n            ot.textContent = \"0\"\n        ot = document.getElementById(\"Ot2.0xValueTotal\")\n        if (ot)\n            ot.textContent = \"0\"\n        $(`#OtOnePointFiveTime, #OtTwoTime, #OtOneTime, #TotalSOCSO, #TotalEPF, #Deduction,\n        #Allowance, #TotalEIS, #TotalHRD, #TotalTaxableWage, #GrossWage, #EmployerEPF, #EmployeeEPF,\n        #EmployerSOCSO, #EmployeeSOCSO, #EmployerEIS, #EmployeeEIS, #HRD, #PCB, #TotalAllowance, #TotalDeduction,\n        #EarlyLeavingMinutes,  #LateArrivalMinutes, #GrossWage, #NettWage, #GrossWage, #totalEmployerContribution,\n        #totalEmployeeContribution, #CP38`).val(0)\n        $(`.Bonus, .Incentive`).hide()\n    }\n    public Setup(): void {\n        var self = this\n        $('.HrdfWages').hide()\n        $('.PcbWages').hide()\n        $('.EisWages').hide()\n        $('.SocsoWages').hide()\n        $('.EpfWages').hide()\n\n        var tabId = this.idPrefix + \"PropertyGrid\"\n        var node3 = document.getElementById(tabId);\n        var divNode = document.createElement('DIV')\n        divNode.classList.add('category-title')\n        divNode.setAttribute(\"id\", \"PayRoll-Description\")\n        divNode.style.display = 'flex'; // Make the container a flex container to display tables side by side\n        node3.appendChild(divNode)\n        var node4 = document.createElement(\"a\");\n        node4.classList.add(\"category-anchor\");\n        var textnode = document.createTextNode(\"Employee Payroll\");\n        node4.appendChild(textnode);\n        document.getElementById(\"PayRoll-Description\").append(node4);\n        var node5 = document.getElementById(\"PayRoll-Description\");\n        node5.insertAdjacentHTML('afterend', '<div class=\"DataGrid\" id=\"PayRollGrid\"></div>');\n        var PayRollGrid = document.getElementById(\"PayRollGrid\");\n        PayRollGrid.style.display = 'flex'; // Make the container a flex container to display tables side by side\n\n        var TableNode = document.createElement('TABLE');\n        TableNode.style.width = \"66%\";\n        TableNode.id = 'PayrollTable'\n        TableNode.className = 'table'\n\n        var TableHead = document.createElement('thead');\n        TableHead.className = \"thead-dark\"\n        TableHead.id = 'PayrollTableHeader'\n\n        var TableBody = document.createElement('tbody')\n        TableBody.id = 'PayrollTableBody'\n\n        var theadnode = document.createElement('tr')\n        var TableFoot = document.createElement('tfoot')\n        TableFoot.id = 'PayrollTableFoot'\n\n\n\n\n        var header1 = document.createElement('TH');\n        var header2 = document.createElement('TH');\n        var header3 = document.createElement('TH');\n        var header4 = document.createElement('TH');\n        header1.style.width = \"25%\";\n        header2.style.width = \"25%\";\n        header3.style.width = \"25%\";\n        header4.style.width = \"25%\";\n        var textnode1 = document.createTextNode(\"Description\");\n        var textnode2 = document.createTextNode(\"Earnings\");\n        var textnode3 = document.createTextNode(\"Description\");\n        var textnode4 = document.createTextNode(\"Deductions\");\n        header1.appendChild(textnode1);\n        header2.appendChild(textnode2);\n        header3.appendChild(textnode3);\n        header4.appendChild(textnode4);\n\n        var EmployerContributionsNode = document.createElement('TABLE');\n        //EmployerContributionsNode.style.width = \"33%\";\n        EmployerContributionsNode.style.height = \"55%\";\n        EmployerContributionsNode.id = 'EmployerContributionsTable'\n\n        var EmployerContributionsTableHead = document.createElement('thead');\n        EmployerContributionsTableHead.className = \"thead-dark\"\n        EmployerContributionsTableHead.id = 'EmployerContributionsHeader'\n\n        var EmployerContributionsTableBody = document.createElement('tbody')\n        EmployerContributionsTableBody.id = 'EmployerContributionsBody'\n\n        var EmployerContributionsTableFoot = document.createElement('tfoot')\n        EmployerContributionsTableFoot.id = 'EmployerContributionsFoot'\n\n\n\n\n\n\n        var EmployerContributionsDescriptionNode = document.createElement('TR');\n        var EmployerContributionsHeader1 = document.createElement('TH');\n        var EmployerContributionsHeader2 = document.createElement('TH');\n\n        EmployerContributionsHeader1.style.width = \"50%\";\n        EmployerContributionsHeader2.style.width = \"50%\";\n        var EmployerContributionstextnode1 = document.createTextNode(\"Description\");\n        var EmployerContributionstextnode2 = document.createTextNode(\"Employer Contributions\");\n        EmployerContributionsHeader1.appendChild(EmployerContributionstextnode1);\n        EmployerContributionsHeader2.appendChild(EmployerContributionstextnode2);\n\n\n        theadnode.appendChild(header1)\n        theadnode.appendChild(header2)\n        theadnode.appendChild(header3)\n        theadnode.appendChild(header4)\n\n        TableHead.appendChild(theadnode)\n        TableNode.appendChild(TableHead)\n        TableNode.appendChild(TableBody)\n        TableNode.appendChild(TableFoot)\n\n        EmployerContributionsDescriptionNode.appendChild(EmployerContributionsHeader1)\n        EmployerContributionsDescriptionNode.appendChild(EmployerContributionsHeader2)\n        EmployerContributionsTableHead.appendChild(EmployerContributionsDescriptionNode)\n\n\n        EmployerContributionsNode.appendChild(EmployerContributionsTableHead)\n        EmployerContributionsNode.appendChild(EmployerContributionsTableBody)\n        EmployerContributionsNode.appendChild(EmployerContributionsTableFoot)\n\n\n        var div1 = document.createElement('div')\n        div1.className = 'col-md-6'\n        div1.id = 'left'\n        var NplAbsentTableContainer = document.createElement('div')\n        NplAbsentTableContainer.id = 'NplAbsentTableContainer'\n        div1.appendChild(NplAbsentTableContainer)\n        var OvertimeTableContainer = document.createElement('div')\n        OvertimeTableContainer.id = 'OvertimeTableContainer'\n        div1.appendChild(OvertimeTableContainer)\n\n        var EarlyLeavingTableContainer = document.createElement('div')\n        EarlyLeavingTableContainer.id = 'EarlyLeavingTableContainer'\n        div1.appendChild(EarlyLeavingTableContainer)\n\n\n\n\n        var NplAbsentTable = document.createElement(\"table\");\n        NplAbsentTable.id = 'NplAbsentTable'\n\n        var NplAbsentTableHead = document.createElement(\"thead\");\n        NplAbsentTableHead.innerHTML = `\n      <tr>\n        <th rowspan=\"2\">NPL/Absent</th>\n        <th colspan=\"3\" id=\"totalNplAbsentDeduction\">\n            <span>Total:</span> <span id=\"totalNplAbsent\">0</span>\n        </th>\n      </tr>\n      `;\n        NplAbsentTable.appendChild(NplAbsentTableHead);\n        var tableData = [\n            { label: \"NPL Day\", id: \"NplDayRate\", inputId: \"NplDay\", valueId: \"NplDayValue\", value: 0, total: 0, adjustment: 0 },\n            { label: \"NPL Hourly\", id: \"NplHrRate\", inputId: \"NplHr\", valueId: \"NplHrValue\", value: 0, total: 0, adjustment: 0 },\n            { label: \"Absent Day\", id: \"AbsentDayRate\", inputId: \"AbsentDay\", valueId: \"AbsentDayValue\", value: 0, total: 0, adjustment: 0 },\n        ];\n\n        const NplAbsentTableBody = document.createElement(\"tbody\");\n        NplAbsentTableBody.id = 'NplAbsentTableBody'\n        tableData.forEach(row => {\n            const tr = document.createElement(\"tr\");\n            tr.innerHTML = `\n        <td class=\"Description\">${row.label}</td>\n        <td class=\"rates\"> <span class=\"ratesValue\" id = ${row.id} > ${row.value} </span> </td>\n        <td class =\"numberInputContainer\"> <input id = ${row.inputId} min=\"0\" class=\"nplDates numberInput\" type=\"number\" value=\"${row.total.toFixed(2)}\" ></td>\n        <td class =\"subTotalContainer\">  <span id = ${row.valueId} class=\"subTotal\">0.00</span> </td>\n      `;\n            NplAbsentTableBody.appendChild(tr);\n        });\n        NplAbsentTable.appendChild(NplAbsentTableBody);\n        NplAbsentTableContainer.appendChild(NplAbsentTable);\n\n\n\n\n\n\n\n\n\n        var OvertimeTable = document.createElement(\"table\");\n        OvertimeTable.id = 'OvertimeTable'\n\n        var OvertimeTableHead = document.createElement(\"thead\");\n        OvertimeTableHead.innerHTML = `\n      <tr>\n        <th rowspan=\"2\">Overtime</th>\n        <th colspan=\"3\" id=\"OvertimeAddition\">\n            <span>Total:</span> <span id=\"totalOt\">0</span>\n        </th>\n      </tr>\n      `;\n\n        OvertimeTable.appendChild(OvertimeTableHead);\n        var OtData = [\n            { label: \"OT1.0x\", descId:\"flatOtDesc\",id: \"Ot1.0x\", valueId: \"Ot1.0xValue\", inputId: \"OtOneTime\", value: 0, total: 0, adjustment: 0 },\n            { label: \"OT1.5x\", descId: \"OnePointFiveOtDesc\",id: \"Ot1.5x\", valueId: \"Ot1.5xValue\", inputId: \"OtOnePointFiveTime\", value: 0, total: 0, adjustment: 0 },\n            { label: \"OT2.0x\", descId: \"TwoOtDesc\",id: \"Ot2.0x\", valueId: \"Ot2.0xValue\", inputId: \"OtTwoTime\", value: 0, total: 0, adjustment: 0 },\n        ];\n      \n\n        const OvertimeTableBody = document.createElement(\"tbody\");\n        OvertimeTableBody.id = 'OvertimeTableBody'\n        OtData.forEach(row => {\n            const tr = document.createElement(\"tr\");\n            tr.innerHTML = `\n        <td class=\"Description\" id=${row.descId}>${row.label}</td>\n        <td class=\"rates\"> <span class=\"ratesValue\" id=${row.id}> ${row.value} </span> </td>\n        <td class =\"numberInputContainer\"> <input id=${row.inputId} min=\"0\" class=\"overtime numberInput\" type=\"number\" value=\"${row.total.toFixed(2)}\" ></td>\n        <td>  <span class=\"subTotal\" id=${row.valueId}Total>0.00</span> </td>\n      `;\n            OvertimeTableBody.appendChild(tr);\n        });\n        OvertimeTable.appendChild(OvertimeTableBody);\n        OvertimeTableContainer.appendChild(OvertimeTable);\n\n\n\n\n\n\n\n\n\n\n\n\n        var EarlyLeavingTable = document.createElement(\"table\");\n        EarlyLeavingTable.id = 'EarlyLeavingTable'\n\n        var EarlyLeavingTableHead = document.createElement(\"thead\");\n        EarlyLeavingTableHead.innerHTML = `\n      <tr>\n        <th rowspan=\"2\">Time Deduction</th>\n        <th colspan=\"3\" id=\"ShiftAddition\">\n            <span>Total:</span> <span id=\"totalTimeDeduction\">0</span>\n        </th>\n      </tr>\n      `;\n\n        EarlyLeavingTable.appendChild(EarlyLeavingTableHead);\n        var ShiftData = [\n            { label: \"Early Leaving\", Minutes: \"EarlyLeavingMinutes\", RateId: \"EarlyLeavingRate\", SubtotalId: \"EarlyLeavingSubtotal\", total: 0, adjustment: 0 },\n            { label: \"Late Arrival\", Minutes: \"LateArrivalMinutes\", RateId: \"LateArrivalRate\", SubtotalId: \"LateArrivalSubtotal\", total: 0, adjustment: 0 }\n        ];\n\n        const EarlyLeavingTableBody = document.createElement(\"tbody\");\n        EarlyLeavingTableBody.id = 'EarlyLeavingTableBody'\n        ShiftData.forEach(row => {\n            const tr = document.createElement(\"tr\");\n            tr.innerHTML = `\n        <td class=\"Description\">${row.label}</td>\n        <td class=\"rates\"> <span id=${row.RateId} class=\"ratesValue\">0</span> </td>\n        <td class =\"numberInputContainer\"> <input min=\"0\" id=${row.Minutes} class=\"time numberInput\" type=\"number\" value=\"${row.total.toString()}\" ></td>\n        <td>  <span class=\"subTotal\"  id=${row.SubtotalId} >0.00</span> </td>\n      `;\n            EarlyLeavingTableBody.appendChild(tr);\n        });\n        EarlyLeavingTable.appendChild(EarlyLeavingTableBody);\n        EarlyLeavingTableContainer.appendChild(EarlyLeavingTable);\n\n\n\n\n\n\n\n\n\n\n        var div2 = document.createElement('div')\n        div2.className = 'col-md-4'\n        div2.id = 'center'\n        var AllowanceDeductionContainer = document.createElement('div')\n        AllowanceDeductionContainer.id = 'AllowanceDeductionContainer'\n        div2.appendChild(AllowanceDeductionContainer)\n\n        var AllowanceDeductionTable = document.createElement(\"table\");\n        AllowanceDeductionTable.id = 'AllowanceDeductionTable'\n\n        var AllowanceDeductionHead = document.createElement(\"thead\");\n        AllowanceDeductionHead.innerHTML = `\n      <tr>\n        <th colspan=\"3\">Allowance/Deduction</th>\n      </tr>\n      <tr>\n        <th>Code</th>\n        <th>Description</th>\n        <th>Amount</th>\n      </tr>\n      `;\n\n        AllowanceDeductionTable.appendChild(AllowanceDeductionHead);\n\n        const AllowanceDeductionBody = document.createElement(\"tbody\");\n        AllowanceDeductionBody.id = 'AllowanceDeductionBody'\n        AllowanceDeductionTable.appendChild(AllowanceDeductionBody);\n        AllowanceDeductionContainer.appendChild(AllowanceDeductionTable);\n\n\n\n\n\n\n\n\n\n\n\n\n        var MoneyClaimingContainer = document.createElement('div')\n        MoneyClaimingContainer.id = 'MoneyClaimingContainer'\n        div2.appendChild(MoneyClaimingContainer)\n\n        var MoneyClaimingTable = document.createElement(\"table\");\n        MoneyClaimingTable.id = 'MoneyClaimingTable'\n\n        var MoneyClaimingHead = document.createElement(\"thead\");\n        MoneyClaimingHead.innerHTML = `\n      <tr>\n        <th colspan=\"3\">Money Claiming</th>\n      </tr>\n      <tr>\n        <th>Category</th>\n        <th>Description</th>\n        <th>Amount</th>\n      </tr>\n      `;\n\n        MoneyClaimingTable.appendChild(MoneyClaimingHead);\n        const MoneyClaimingBody = document.createElement(\"tbody\");\n        MoneyClaimingBody.id = 'MoneyClaimingBody'\n        MoneyClaimingTable.appendChild(MoneyClaimingBody);\n        MoneyClaimingContainer.appendChild(MoneyClaimingTable);\n\n\n\n\n\n\n\n\n\n\n\n        var EarningDeductionContainer = document.createElement('div')\n        EarningDeductionContainer.id = 'EarningDeductionContainer'\n        div2.appendChild(EarningDeductionContainer)\n\n        var EarningDeductionTable = document.createElement(\"table\");\n        EarningDeductionTable.id = 'EarningDeductionTable'\n\n        var EarningDeductionHead = document.createElement(\"thead\");\n        EarningDeductionHead.innerHTML = `\n      <tr>\n        <th colspan=\"3\">Extra Earnings/Deductions</th>\n      </tr>\n      <tr>\n        <th>Code</th>\n        <th>Description</th>\n        <th>Amount</th>\n      </tr>\n      `;\n\n        EarningDeductionTable.appendChild(EarningDeductionHead);\n        const EarningDeductionBody = document.createElement(\"tbody\");\n        EarningDeductionBody.id = 'EarningDeductionBody'\n        EarningDeductionTable.appendChild(EarningDeductionBody);\n        EarningDeductionContainer.appendChild(EarningDeductionTable);\n\n\n\n\n\n\n\n\n\n\n\n\n        var div3 = document.createElement('div')\n        div3.className = 'col-md-2 section'\n        div3.id = 'right'\n        const htmlContent1 = `\n      <h3>Statutory Contribution</h3>\n      <table class = \"StatutoryContribution\">\n\n        <tr>\n          <td></td>\n          <td>Employer</td>\n          <td>Employee</td>\n        </tr>\n\n        <tr>\n          <td>EPF</td>\n          <td><input class=\"govPayment\" id=\"EmployerEPF\" type=\"number\" value=\"0.0\" ></td>\n          <td><input class=\"govPayment\" id=\"EmployeeEPF\" type=\"number\" value=\"0.0\" ></td>\n        </tr>\n\n        \n        <tr>\n          <td>SOCSO </td>\n          <td><input class=\"govPayment\" id=\"EmployerSOCSO\" type=\"number\" value=\"0.0\" ></td>\n          <td><input class=\"govPayment\" id=\"EmployeeSOCSO\" type=\"number\" value=\"0.0\" ></td>\n        </tr>\n\n        <tr>\n          <td>EIS </td>\n          <td><input class=\"govPayment\" id=\"EmployerEIS\" type=\"number\" value=\"0.0\" ></td>\n          <td><input class=\"govPayment\" id=\"EmployeeEIS\" type=\"number\" value=\"0.0\" ></td>\n        </tr>\n\n        <tr>\n          <td>HRD</td>\n          <td><input class=\"govPayment\" id=\"HRD\" type=\"number\" value=\"0.0\" ></td>\n          <td></td>\n        </tr>\n\n        <tr>\n          <td>PCB</td>\n           <td></td>\n          <td><input class=\"govPayment\" id=\"PCB\" type=\"number\" value=\"0.0\" ></td>\n        </tr>\n          <tr>\n          <td>CP38</td>\n           <td></td>\n          <td><input class=\"govPayment\" id=\"CP38\" type=\"number\" value=\"0.0\" ></td>\n        </tr>\n        <tr>\n          <td>Total</td>\n          <td><input class=\"govPayment\" id=\"totalEmployerContribution\" type=\"number\" value=\"0.0\" readonly></td>\n          <td><input class=\"govPayment\" id=\"totalEmployeeContribution\" type=\"number\" value=\"0.0\" readonly></td>\n        </tr>\n\n\n      </table>\n    `;\n        const htmlContent2 = `\n      <h3>Total Wages</h3>\n      <table class = \"TotalWages\" >\n        <tr>\n          <td>Total Allowance</td>\n          <td><input id=\"TotalAllowance\" type=\"number\" value=\"0.0\" readonly></td>\n        </tr>\n        <tr>\n          <td>Total Deduction</td>\n          <td><input id=\"TotalDeduction\" type=\"number\" value=\"0.00\" readonly></td>\n        </tr>\n        <tr>\n          <td>EPF Wage</td>\n          <td><input id=\"TotalEPF\" type=\"number\" value=\"0.0\" readonly></td>\n        </tr>\n        <tr>\n          <td>HRD Wage</td>\n          <td><input id=\"TotalHRD\" type=\"number\" value=\"0.0\" readonly></td>\n        </tr>\n\n\n\n        <tr>\n          <td>SOCSO Wage</td>\n          <td><input id=\"TotalSOCSO\" type=\"number\" value=\"0.0\" readonly></td>\n        </tr>\n        <tr>\n          <td>EIS Wage</td>\n          <td><input id=\"TotalEIS\" type=\"number\" value=\"0.0\" readonly></td>\n        </tr>\n        <tr>\n          <td>Total Taxable Wage</td>\n          <td><input id=\"TotalTaxableWage\" type=\"number\" value=\"0.0\" readonly></td>\n        </tr>\n        <tr>\n          <td>Gross Wage</td>\n          <td><input id=\"GrossWage\"  type=\"number\" value=\"0.0\" readonly></td>\n        </tr>\n        <tr>\n          <td>Nett Wage</td>\n          <td><input id=\"NettWage\" type=\"number\" value=\"0.0\" readonly></td>\n        </tr>\n      </table>\n    `\n\n        var AllowanceDeductionContainer = document.createElement('div')\n        AllowanceDeductionContainer.id = 'AllowanceDeductionContainer'\n        AllowanceDeductionContainer.className = 'section'\n        AllowanceDeductionContainer.innerHTML = htmlContent1\n        div3.appendChild(AllowanceDeductionContainer)\n\n\n        var Container2 = document.createElement('div')\n        Container2.id = 'Container2'\n        Container2.className = 'section'\n        Container2.innerHTML = htmlContent2\n        div3.appendChild(Container2)\n\n\n        document.getElementById(\"PayRollGrid\").append(div1);\n        document.getElementById(\"PayRollGrid\").append(div2);\n        document.getElementById(\"PayRollGrid\").append(div3);\n\n\n        var govPayment = document.getElementsByClassName('govPayment');\n        $(govPayment).on('change', async function (e) {\n            self.updateWages()\n        })\n\n\n        var nplDates = document.getElementsByClassName('numberInput');\n        $(nplDates).on('change', async function (e) {\n            self.updateTotals()\n        })\n\n    }\n    public onDialogOpen() {\n        super.onDialogOpen()\n        var self = this\n        PcbSubjectionService.List({\n        }, response => {\n        \n            for (var index in response.Entities) {\n                if (response.Entities[index].IsActive == 1) {\n                    var dict = response.Entities[index]\n                    var keys = Object.keys(dict);\n                    for (var j = 0; j < keys.length; j++) {\n                        var key = keys[j];\n                        if (key.toLowerCase() == 'id' || key.toLowerCase() == 'isactive')\n                            continue\n                        if (dict[key] != true && dict[key] != false && dict[key] !== undefined)\n                            continue\n                        var NewKey = key.replace(/([A-Z])/g, ' $1').trim();\n                        // Access each key here\n                        this.ListOfPcbSubjection.push({\n                            id: j,\n                            name: NewKey,\n                            subjection: dict[key],\n                        })\n                    }\n                    break\n                }\n            }\n            EpfSubjectionService.List({\n            }, response => {\n                for (var index in response.Entities) {\n                    if (response.Entities[index].IsActive == 1) {\n                        var dict = response.Entities[index]\n                        var keys = Object.keys(dict);\n                        for (var j = 0; j < keys.length; j++) {\n                            var key = keys[j];\n                            if (key.toLowerCase() == 'id' || key.toLowerCase() == 'isactive')\n                                continue\n                            if (dict[key] != true && dict[key] != false && dict[key] !== undefined)\n                                continue\n                            var NewKey = key.replace(/([A-Z])/g, ' $1').trim();\n\n                            // Access each key here\n                            this.ListOfEpfSubjection.push({\n                                id: j,\n                                name: NewKey,\n                                subjection: dict[key],\n                            })\n                        }\n                        break\n                    }\n                }\n                var BufferDict = this.ListOfEpfSubjection\n                var keys = Object.keys(BufferDict);\n                for (var j = 0; j < keys.length; j++) {\n                    var key = keys[j];\n                    this.ListOfCriteria.push(BufferDict[key].name)\n                }\n                EisSubjectionService.List({\n                }, response => {\n                    for (var index in response.Entities) {\n                        if (response.Entities[index].IsActive == 1) {\n                            var dict = response.Entities[index]\n                            var keys = Object.keys(dict);\n\n                            for (var j = 0; j < keys.length; j++) {\n                                var key = keys[j];\n                                if (key.toLowerCase() == 'id' || key.toLowerCase() == 'isactive')\n                                    continue\n                                if (dict[key] != true && dict[key] != false && dict[key] !== undefined)\n                                    continue\n                                // Access each key here\n                                var NewKey = key.replace(/([A-Z])/g, ' $1').trim();\n\n                                this.ListOfEisSubjection.push({\n                                    id: j,\n                                    name: NewKey,\n                                    subjection: dict[key],\n                                })\n                            }\n                            break\n                        }\n                    }\n                    HrdfSubjectionService.List({\n                    }, response => {\n                        for (var index in response.Entities) {\n                            if (response.Entities[index].IsActive == 1) {\n                                var dict = response.Entities[index]\n                                var keys = Object.keys(dict);\n                                for (var j = 0; j < keys.length; j++) {\n                                    var key = keys[j];\n                                    if (key.toLowerCase() == 'id' || key.toLowerCase() == 'isactive')\n                                        continue\n                                    if (dict[key] != true && dict[key] != false && dict[key] !== undefined)\n                                        continue\n                                    // Access each key here\n                                    var NewKey = key.replace(/([A-Z])/g, ' $1').trim();\n\n                                    this.ListOfHrdfSubjection.push({\n                                        id: j,\n                                        name: NewKey,\n                                        subjection: dict[key],\n                                    })\n                                }\n                                break\n                            }\n                        }\n                        SocsoSubjectionService.List({\n                        }, response => {\n                            for (var index in response.Entities) {\n                                if (response.Entities[index].IsActive == 1) {\n                                    var dict = response.Entities[index]\n                                    var keys = Object.keys(dict);\n                                    for (var j = 0; j < keys.length; j++) {\n                                        var key = keys[j];\n                                        if (key.toLowerCase() == 'id' || key.toLowerCase() == 'isactive')\n                                            continue\n\n                                        if (dict[key] != true && dict[key] != false && dict[key] !== undefined)\n                                            continue\n\n                                        // Access each key here\n                                        var NewKey = key.replace(/([A-Z])/g, ' $1').trim();\n\n                                        this.ListOfSocsoSubjection.push({\n                                            id: j,\n                                            name: NewKey,\n                                            subjection: dict[key],\n                                        })\n                                    }\n                                    break\n                                }\n                            }\n\n\n                            if (this.isNew()) {\n                                var Overtime = 'Overtime Payments'\n                                var Eis = this.CheckSubjection(this.ListOfEisSubjection, Overtime)\n                                var Epf = this.CheckSubjection(this.ListOfEpfSubjection, Overtime)\n                                var Hrdf = this.CheckSubjection(this.ListOfHrdfSubjection, Overtime)\n                                var Pcb = this.CheckSubjection(this.ListOfPcbSubjection, Overtime)\n                                var Socso = this.CheckSubjection(this.ListOfSocsoSubjection, Overtime)\n                                self.form.OtSubjectEis.value = Eis == 1 ? true : false\n                                self.form.OtSubjectEpf.value = Epf == 1 ? true : false\n                                self.form.OtSubjectHrdf.value = Hrdf == 1 ? true : false\n                                self.form.OtSubjectPcb.value = Pcb == 1 ? true : false\n                                self.form.OtSubjectSocso.value = Socso == 1 ? true : false\n\n                                $('#totalOt').attr('eis', Eis)\n                                $('#totalOt').attr('epf', Epf)\n                                $('#totalOt').attr('hrdf', Hrdf)\n                                $('#totalOt').attr('pcb', Pcb)\n                                $('#totalOt').attr('socso', Socso)\n                            }\n\n                        });\n\n                    });\n\n                });\n\n            });\n\n        });\n        if (this.isNew()) {\n            PayrollSettingsService.List({\n            }, response => {\n                self.AnnualizedIncentive = self.SeperateIncentive = self.AnnualizedBonus = self.SeperateBonus = false;\n                self.form.IncentiveSubjectEpf.value = response.Entities[0].IncentiveSubjectEpf;\n                self.form.IncentiveSubjectEis.value = response.Entities[0].IncentiveSubjectEis;\n                self.form.IncentiveSubjectHrdf.value = response.Entities[0].IncentiveSubjectHrdf;\n                self.form.IncentiveSubjectPcb.value = response.Entities[0].IncentiveSubjectPcb;\n                self.form.IncentiveSubjectSocso.value = response.Entities[0].IncentiveSubjectSocso;\n\n\n                self.form.BonusSubjectHrdf.value = response.Entities[0].BonusSubjectHrdf;\n                self.form.BonusSubjectSocso.value = response.Entities[0].BonusSubjectSocso;\n                self.form.BonusSubjectPcb.value = response.Entities[0].BonusSubjectPcb;\n                self.form.BonusSubjectEpf.value = response.Entities[0].BonusSubjectEpf;\n                self.form.BonusSubjectEis.value = response.Entities[0].BonusSubjectEis;\n                self.form.AnnualizedBonus.value = response.Entities[0].AnnualizedBonus;\n                self.form.SeperateIncentive.value = response.Entities[0].SeperateIncentive;\n                self.form.AnnualizedIncentive.value = response.Entities[0].AnnualizedIncentive;\n                self.form.SeperateBonus.value = response.Entities[0].SeperateBonus;\n\n                self.AnnualizedIncentive = response.Entities[0].AnnualizedIncentive;\n                self.SeperateIncentive = response.Entities[0].SeperateIncentive;\n                self.AnnualizedBonus = response.Entities[0].AnnualizedBonus;\n                self.SeperateBonus = response.Entities[0].SeperateBonus;\n\n            })\n\n        }\n    }\n    public WeekdayMultiplier: number;\n    public WeekendMultiplier: number;\n    public PublicHolidayMultiplier: number;\n\n    public calculateAge(): number {\n        const today = new Date(this.dateString);\n        const birthday = new Date(this.form.BirthDay.value);\n        const age = today.getFullYear() - birthday.getFullYear();\n        const lastBirthday = new Date(today.getFullYear(), birthday.getMonth(), birthday.getDate());\n        if (today < lastBirthday) \n            lastBirthday.setFullYear(lastBirthday.getFullYear() - 1);\n        const timeSinceLastBirthday = today.getTime() - lastBirthday.getTime();\n        const nextBirthday = new Date(lastBirthday);\n        nextBirthday.setFullYear(nextBirthday.getFullYear() + 1);\n        const yearLengthInMilliseconds = nextBirthday.getTime() - lastBirthday.getTime();\n        const fractionalAge = timeSinceLastBirthday / yearLengthInMilliseconds;\n        return age + fractionalAge;\n    }\n    public dialogOpen(asPanel?: boolean): void {\n        $('.field.BasicPay, .field.DailyPay, .field.DailyRate, .field.DaysWorked, .field.HourlyRate, .field.BirthDay, .field.Age').addClass('col-md-2');\n        $(` .field.WorkingSpouse`).addClass('col-md-1');\n        $(`.field.HrdfClass`).addClass('col-md-2');\n        $(`.field.Bonus, .field.Incentive`).addClass('col-md-4');\n        $(` .field.ChildrenUnderEighteen, .field.ChildrenInUniversity, .field.DisabledChildInUniversity, .field.DisabledChild`).addClass('col-md-2');\n        $(`.field.MaritalStatus`).addClass('col-md-3');\n        $(`.field.MaritalStatus label.caption, .field.WorkingSpouse label.caption, .field.ChildrenUnderEighteen label.caption, .field.ChildrenInUniversity label.caption,\n        .field.DisabledChildInUniversity label.caption, .field.DisabledChild label.caption, .field.Age label.caption, .field.BirthDay label.caption, .field.HrdfClass label.caption`).removeClass('caption');\n \n        this.ResetTable();\n        $('.field.EisClass').addClass('col-md-2');\n        $('.field.SocsoClass').addClass('col-md-6');\n        $('.field.EpfClass').addClass('col-md-3');\n        $('.field.TaxClass').addClass('col-md-1');\n        $(`.field.BasicPay label.caption, .field.DailyPay label.caption, .field.DailyRate label.caption, .field.DaysWorked label.caption,\n        .field.HourlyRate label.caption, .field.EisClass label.caption, .field.SocsoClass label.caption, .field.EpfClass label.caption, .field.HrdfClass label.caption, .field.TaxClass label.caption `).removeClass('caption');\n        EditorUtils.setReadonly(this.form.BasicPay.element, true);\n        EditorUtils.setReadonly(this.form.Bonus.element, true);\n        EditorUtils.setReadonly(this.form.Incentive.element, true);\n\n        EditorUtils.setReadonly(this.form.DaysWorked.element, true);\n        EditorUtils.setReadonly(this.form.HourlyRate.element, true);\n        EditorUtils.setReadonly(this.form.DailyRate.element, true);\n        EditorUtils.setReadonly(this.form.TaxClass.element, true);\n        EditorUtils.setReadonly(this.form.Age.element, true);\n        EditorUtils.setReadonly(this.form.BirthDay.element, true);\n        this.form.EpfClass.value = EPFClass.Class_1.valueOf().toString()\n        $(`.DeductedEarlyLeavingList, .OneTimeDeductionList, .DeductedNoPaidLeaveList,\n        .DeductedLateArrivalList, .OneTimeAllowanceList, .PaidMoneyClaimingList, .PaidOtList, .EarlyLeavingRate, .LateArrivalRate, .EarlyLeaving,\n        .LateArrival, .FlatOt, .OtOne, .OtOnePointFive, .OtTwo, .NPLHourlyRate, .NPLDailyRate, .NPLHourly, .NPLDaily, .AbsentDailyRate, .AbsentDaily,\n        .OtSubjectEpf, .OtSubjectEis, .OtSubjectPcb, .OtSubjectSocso, .OtSubjectHrdf, .AllowanceList, .DeductionList, .OtOnePointFiveRate, .OtTwoRate, .HrdfClass, .Bonus, .Incentive`).hide()\n        function isValidDate(dateStr: string): string {\n            const date = new Date(dateStr);\n            if (!isNaN(date.getTime()))// not valid\n            {\n                date.setDate(28)\n                const year = date.getFullYear();\n                const month = ('0' + (date.getMonth() + 1)).slice(-2); // Months are zero based\n                const day = ('0' + date.getDate()).slice(-2);\n                return `${year}-${month}-${day}`\n            }\n            else\n                return dateStr\n        }\n        var self = this\n        var gettingDatestring = true\n        serviceCall<ListResponse<any>>({\n            service: AnnouncementWizardService.baseUrl + '/GetTodayDateTime',\n            method: \"GET\",\n            data: {\n            },\n            async: false,\n            onSuccess: (response) => {\n                self.dateString = response\n                gettingDatestring = false\n            }\n        })\n\n        while (gettingDatestring == true);\n\n        CompanySettingsService.List({\n        }, response => {\n            for (var index in response.Entities) {\n                if (response.Entities[index].IsActive == 1) {\n                    this.DeductEarlyLeaving = response.Entities[index].DeductSalaryIfEarlyLeaving\n                    this.DeductLateArrival = response.Entities[index].DeductSalaryIfLate\n                    this.PayDate = response.Entities[index].PayDay\n                    self.PublicHolidayMultiplier = (response.Entities[index].PublicHolidayOnePointFive == true ? 1.5 : 2)\n                    self.WeekendMultiplier = (response.Entities[index].WeekendOnePointFive == true ? 1.5 : 2)\n                    self.WeekdayMultiplier = (response.Entities[index].WeekdayOnePointFive == true ? 1.5 : 2)\n                    break\n                }\n            }\n            var today = new Date(self.dateString)\n            var todayMonth = today.getMonth()\n            var todayYear = today.getFullYear()\n            var dateFormat = todayYear.toString() + '-' + todayMonth.toString().padStart(2, '0') + '-' + this.PayDate.toString().padStart(2, '0')\n            dateFormat = isValidDate(dateFormat)\n            var DateObj = new Date(todayYear, todayMonth, this.PayDate)\n            var DateObjYear = DateObj.getFullYear().toString()\n            var DateObjMonth = (DateObj.getMonth() + 1).toString()\n            var DateObjDay = DateObj.getDate().toString()\n\n\n\n            todayMonth = todayMonth - 1\n            var LastMonth = new Date(todayYear, todayMonth, this.PayDate)\n            LastMonth.setDate(LastMonth.getDate() + 1);\n\n            var LastMonthObjYear = LastMonth.getFullYear().toString()\n            var LastMonthObjMonth = (LastMonth.getMonth() + 1).toString()\n            var LastMonthObjDay = LastMonth.getDate().toString()\n\n            var LatestDateFormat = DateObjMonth.padStart(2, '0') + '/' + DateObjDay.padStart(2, '0') + '/' + DateObjYear\n            var LastMonthFormat = LastMonthObjMonth.padStart(2, '0') + '/' + LastMonthObjDay.padStart(2, '0') + '/' + LastMonthObjYear\n\n            if (this.isNew()) {\n                self.form.PayDate.value = LatestDateFormat\n                self.form.PayPeriodEnd.value = LatestDateFormat\n                self.form.PayPeriodStart.value = LastMonthFormat\n            }\n\n        });\n\n        super.dialogOpen(asPanel);\n        \n        if (self.isNew())\n        this.applyChangesButton.hide()\n        EditorUtils.setReadonly(this.form.EmployeeName.element, true);\n        var EmployeeRowIdValue = this.form.EmployeeRowId.value\n        let ElementsArray: string[] = ['Deduction', 'Earnings', 'Nett', 'EmployeeEIS', 'EmployeeEPF', 'EmployeeSOCSO', 'EmployeePCB', 'PayrollTable', 'EmployerTable', 'EmployerHRDF', 'EmployerEPF', 'EmployerEIS', 'EmployerSOCSO']\n        for (var index in ElementsArray)\n            $('.' + ElementsArray[index]).hide();\n        this.Setup()\n        EmployeeProfileService.List({\n        }, response => {\n            var PayPeriodStartElement = document.getElementById(this.idPrefix + 'PayPeriodStart')\n            var PayPeriodEndElement = document.getElementById(this.idPrefix + 'PayPeriodEnd')\n\n            var EmployeeRowIdElement = document.getElementById(this.idPrefix + 'EmployeeRowId')\n            var PayMonthElement = document.getElementById(this.idPrefix + 'PayMonth')\n            var PayYearElement = document.getElementById(this.idPrefix + 'PayYear')\n\n            var HrdfClass = document.getElementById(this.idPrefix + 'HrdfClass')\n\n            var EisClass = document.getElementById(this.idPrefix + 'EisClass')\n            var SocsoClass = document.getElementById(this.idPrefix + 'SocsoClass')\n            var EpfClass = document.getElementById(this.idPrefix + 'EpfClass')\n            var MaritalStatusElement = document.getElementById(this.idPrefix + 'MaritalStatus')\n            var WorkingSpouse = document.getElementById(this.idPrefix + 'WorkingSpouse')\n            var ChildrenUnderEighteen = document.getElementById(this.idPrefix + 'ChildrenUnderEighteen')\n            var ChildrenInUniversity = document.getElementById(this.idPrefix + 'ChildrenInUniversity')\n            var DisabledChild = document.getElementById(this.idPrefix + 'DisabledChild')\n            var DisabledChildInUniversity = document.getElementById(this.idPrefix + 'DisabledChildInUniversity')\n\n            let PayMonthEditor = new Select2Editor($(PayMonthElement))\n            let PayYearEditor = new Select2Editor($(PayYearElement))\n            const months: string[] = [\n                'January',   // 0\n                'February',  // 1\n                'March',     // 2\n                'April',     // 3\n                'May',       // 4\n                'June',      // 5\n                'July',      // 6\n                'August',    // 7\n                'September', // 8\n                'October',   // 9\n                'November',  // 10\n                'December'   // 11\n            ];\n            var today = new Date(self.dateString)\n            var todayYear = today.getFullYear()\n\n            var todayMonth = today.getMonth()\n            // Example usage:\n            for (let i = 0; i < months.length; i++)\n                PayMonthEditor.addItem({ id: (i).toString(), text: (months[i]).toString(), }); // 8am - 6pm , will consider lates\n\n            if (self.isNew())\n                PayMonthEditor.set_value(todayMonth.toString())\n            for (let i = -1; i < 2; i++)\n                PayYearEditor.addItem({ id: (todayYear + i).toString(), text: (todayYear + i).toString(), }); // 8am - 6pm , will consider lates\n\n            if (self.isNew())\n                PayYearEditor.set_value(todayYear.toString())\n            let EmployeeRowIdEditor = new Select2Editor($(EmployeeRowIdElement))\n            interface Item {\n                id: number;\n                name: string;\n                BasicPay: number;\n                Allowance: number;\n                type: number;\n                EisClass: number;\n                EpfClass: number;\n                SocsoClass: number;\n                HrdfClass: number;\n                MaritalStatus: number;\n                WorkingSpouse: boolean;\n                ChildrenUnderEighteen: number;\n                ChildrenInUniversity: number;\n                DisabledChildInUniversity: number;\n                DisabledChild: number;\n                Birthday: string;\n            }\n\n\n            let listOfDicts: Item[] = [];\n            for (var index in response.Entities) {\n                EmployeeRowIdEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].EmployeeID).toString(), }); // 8am - 6pm , will consider lates\n                listOfDicts.push({\n                    id: response.Entities[index].Id, name: response.Entities[index].EmployeeName, BasicPay:\n                        response.Entities[index].BasicSalary, Allowance: response.Entities[index].Allowance, type: response.Entities[index].EmployeeType,\n                    'EisClass': response.Entities[index].EisClass,\n                    'EpfClass': response.Entities[index].EpfClass, 'SocsoClass': response.Entities[index].SocsoClass,\n                    'MaritalStatus': response.Entities[index].MaritalStatus, 'WorkingSpouse': response.Entities[index].WorkingSpouse,\n                    'ChildrenUnderEighteen': response.Entities[index].ChildrenUnderEighteen, 'ChildrenInUniversity': response.Entities[index].ChildrenInUniversity,\n                    'DisabledChildInUniversity': response.Entities[index].DisabledChildInUniversity, 'DisabledChild': response.Entities[index].DisabledChild,\n                    'Birthday': response.Entities[index].Birthday, 'HrdfClass': response.Entities[index].HRDFClass\n                });\n            }\n            this.listOfDicts = listOfDicts\n            if (self.isNew())\n            $(EmployeeRowIdElement).on('change', async function (e) {\n                e.stopImmediatePropagation()\n                self.GeneratePayrollTable(1)\n            })\n\n            if (self.Wiz!=1)\n            { \n            $(EisClass).on('change', async function (e) {\n                e.stopImmediatePropagation()\n                self.updatePayroll()\n            })\n\n            $(SocsoClass).on('change', async function (e) {\n                e.stopImmediatePropagation()\n                self.updatePayroll()\n            })\n            $(HrdfClass).on('change', async function (e) {\n                e.stopImmediatePropagation()\n                self.updatePayroll()\n            })\n\n            $(EpfClass).on('change', async function (e) {\n                e.stopImmediatePropagation()\n                self.updatePayroll()\n            })\n\n            $(WorkingSpouse).on('change', async function (e) {\n                console.log('haha')\n                e.stopImmediatePropagation()\n                self.updatePayroll()\n            })\n            $(ChildrenUnderEighteen).on('change', async function (e) {\n                e.stopImmediatePropagation()\n                self.updatePayroll()\n            })\n            $(MaritalStatusElement).on('change', async function (e) {\n                console.log('hhaa')\n                if (parseInt(self.form.MaritalStatus.value) == MaritalStatus.Married.valueOf())\n                    $('.WorkingSpouse, .ChildrenUnderEighteen, .ChildrenInUniversity, .DisabledChild, .DisabledChildInUniversity').show()\n\n                else if (parseInt(self.form.MaritalStatus.value) == MaritalStatus.Single.valueOf())\n                    $('.WorkingSpouse, .ChildrenUnderEighteen, .ChildrenInUniversity, .DisabledChild, .DisabledChildInUniversity').hide()\n\n            })\n            $(ChildrenInUniversity).on('change', async function (e) {\n                e.stopImmediatePropagation()\n                self.updatePayroll()\n            })\n\n            $(DisabledChild).on('change', async function (e) {\n                e.stopImmediatePropagation()\n                self.updatePayroll()\n            })\n            $(DisabledChildInUniversity).on('change', async function (e) {\n                e.stopImmediatePropagation()\n                self.updatePayroll()\n            })\n        }\n            if (this.isNew()) {\n\n                $(PayMonthElement).on('change', async function (e) {\n                    e.stopImmediatePropagation()\n                    self.GeneratePayrollTable(1)\n                })\n                $(PayYearElement).on('change', async function (e) {\n                    e.stopImmediatePropagation()\n                    self.GeneratePayrollTable(1)\n                })\n                $(PayPeriodStartElement).on('change', async function (e) {\n                    if (self.form.PayPeriodStart.valueAsDate > self.form.PayPeriodEnd.valueAsDate) {\n                        alertDialog('Pay period start cannot be ahead of pay period end')\n                        self.form.PayPeriodStart.value = ''\n                        return\n                    }\n                    self.GeneratePayrollTable(0)\n\n                })\n                $(PayPeriodEndElement).on('change', async function (e) {\n                    if (self.form.PayPeriodStart.valueAsDate > self.form.PayPeriodEnd.valueAsDate) {\n                        alertDialog('Pay period start cannot be ahead of pay period end')\n                        self.form.PayPeriodEnd.value = ''\n                        return\n                    }\n                    self.GeneratePayrollTable(0)\n                })\n                $(`.field.MaritalStatus, .field.WorkingSpouse, .field.ChildrenUnderEighteen, .field.ChildrenInUniversity,\n        .field.DisabledChildInUniversity, .field.DisabledChild,  .field.DaysWorked, .field.BasicPay, .field.DailyRate,\n        .field.HourlyRate, .field.EisClass, .field.SocsoClass, .field.EpfClass, .field.TaxClass, .field.HrdfClass, .field.addEarnings, .field.addDeductions,\n        .field.BirthDay, .field.Age,  .addEarnings, .addDeductions`).hide();\n            }\n            else if (!this.isNew()) {\n                EditorUtils.setReadonly(this.form.PayMonth.element, true);\n                EditorUtils.setReadonly(this.form.PayYear.element, true);\n                EditorUtils.setReadonly(this.form.PayDate.element, true);\n                EditorUtils.setReadonly(this.form.PayPeriodEnd.element, true);\n                EditorUtils.setReadonly(this.form.PayPeriodStart.element, true);\n                $(PayYearElement).val(this.form.PayYear.value).trigger('change')\n                $(PayMonthElement).val(this.form.PayMonth.value).trigger('change')\n                for (var index in listOfDicts) {\n                    if (listOfDicts[index].id == parseInt(EmployeeRowIdValue))\n                        this.EmployeeType = listOfDicts[index].type\n                }\n                $(EmployeeRowIdElement).val(EmployeeRowIdValue.toString()).trigger('change');\n                $('.HrdfClass').show()\n                EditorUtils.setReadonly(this.form.EmployeeRowId.element, true);\n                $(\"#PCB\").val(this.form.EmployeePCB.value)\n                $(\"#EmployeeEIS\").val(this.form.EmployeeEIS.value)\n                $(\"#EmployeeEPF\").val(this.form.EmployeeEPF.value) \n                $(\"#EmployeeSOCSO\").val(this.form.EmployeeSOCSO.value) \n                $(\"#EmployerEIS\").val(this.form.EmployerEIS.value) \n                $(\"#EmployerEPF\").val(this.form.EmployerEPF.value) \n                $(\"#HRD\").val(this.form.EmployerHRDF.value) \n                $(\"#EmployerSOCSO\").val(this.form.EmployerSOCSO.value) \n                $(\"#NplDayRate\").text(this.form.NPLDailyRate.value)\n                $(\"#NplHrRate\").text(this.form.NPLHourlyRate.value) \n                $(\"#AbsentDayRate\").text(this.form.AbsentDailyRate.value) \n                $(\"#NplDay\").val(this.form.NPLDaily.value)\n                $(\"#NplHr\").val(this.form.NPLHourly.value)\n                $(\"#AbsentDay\").val(this.form.AbsentDaily.value)\n                document.getElementById('Ot1.0x').textContent = this.form.FlatOt.value.toString()\n                document.getElementById('Ot1.5x').textContent = this.form.OtOnePointFiveRate.value.toString()\n                document.getElementById('Ot2.0x').textContent = this.form.OtTwoRate.value.toString()\n                $('#OtOneTime').val(this.form.OtOne.value)\n                $('#OtOnePointFiveTime').val(this.form.OtOnePointFive.value)\n                $('#OtTwoTime').val(this.form.OtTwo.value)\n                $(\"#EarlyLeavingRate\").text(this.form.EarlyLeavingRate.value)\n                $(\"#LateArrivalRate\").text(this.form.LateArrivalRate.value)\n                $('#EarlyLeavingMinutes').val(this.form.EarlyLeaving.value)\n                $('#LateArrivalMinutes').val(this.form.LateArrival.value)\n                $('#totalOt').attr('eis', self.form.OtSubjectEis.value.toString())\n                $('#totalOt').attr('epf', self.form.OtSubjectEpf.value.toString())\n                $('#totalOt').attr('hrdf', self.form.OtSubjectHrdf.value.toString())\n                $('#totalOt').attr('pcb', self.form.OtSubjectPcb.value.toString())\n                $('#totalOt').attr('socso', self.form.OtSubjectSocso.value.toString())\n                let i = 0;\n                for (i = 0; i < this.form.AllowanceList.value.length;i++) {\n                    var rowBuffer = document.createElement('tr')\n                    rowBuffer.innerHTML = `<td>${this.form.AllowanceList.value[i].code}</td><td>${this.form.AllowanceList.value[i].Description}</td>\n                                            <td class = \"AllowanceAmount\" eis =  ${this.form.AllowanceList.value[i].SubjectionEis.toString()} epf =  ${this.form.AllowanceList.value[i].SubjectionEpf.toString()}\n                                            hrdf =  ${this.form.AllowanceList.value[i].SubjectionHrdf.toString()} pcb =  ${this.form.AllowanceList.value[i].SubjectionPcb.toString()}\n                                                socso =  ${this.form.AllowanceList.value[i].SubjectionSocso.toString()} \n                                            >${this.form.AllowanceList.value[i].AllowanceAmount}</td>`\n                    $('#AllowanceDeductionBody').append(rowBuffer)\n                }\n                for (i = 0; i < this.form.DeductionList.value.length; i++) {\n                    var rowBuffer = document.createElement('tr')\n                    rowBuffer.innerHTML = `<td>${this.form.DeductionList.value[i].code}</td><td>${this.form.DeductionList.value[i].Description}</td><td class = \"DeductionAmount\">${this.form.DeductionList.value[i].DeductionAmount}</td>`\n                    $('#AllowanceDeductionBody').append(rowBuffer)\n                }\n                for (i = 0; i < this.form.PaidMoneyClaimingList.value.length; i++) {\n                    var rowBuffer = document.createElement('tr')\n                    rowBuffer.innerHTML = `<td>${this.form.PaidMoneyClaimingList.value[i].ClaimingCategory}</td><td>${this.form.PaidMoneyClaimingList.value[i].Description}</td>\n                                            <td  eis =  ${this.form.PaidMoneyClaimingList.value[i].SubjectionEis.toString()} epf =  ${this.form.PaidMoneyClaimingList.value[i].SubjectionEpf.toString()}\n                                            hrdf =  ${this.form.PaidMoneyClaimingList.value[i].SubjectionHrdf.toString()} pcb =  ${this.form.PaidMoneyClaimingList.value[i].SubjectionPcb.toString()}\n                                                socso =  ${this.form.PaidMoneyClaimingList.value[i].SubjectionSocso.toString()} \n                                            >${this.form.PaidMoneyClaimingList.value[i].ClaimAmount}</td>`\n                    $('#MoneyClaimingBody').append(rowBuffer)\n\n                }\n                for (i = 0; i < this.form.PayrollEarnings.value.length; i++) {\n                    var info = this.form.PayrollEarnings.value[i]\n                    var bufferRow = document.createElement('tr')\n                    var bufferRow = document.createElement('tr')\n                    bufferRow.innerHTML = `<td> <span>${info.EarningCode}</span>           <button class=\"remove\">\u00D7</button>\n                            </td><td>${info.Description}</td><td> <input class = numberInput type=\"number\" min=\"0\" eis = ${info.SubjectionToEis} epf = ${info.SubjectionToEpf} hrdf = ${info.SubjectionToHrdf}\n                             pcb = ${info.SubjectionToPcb} socso = ${info.SubjectionToSocso}  value = ${info.Amount} ></input>           </td>`\n                    $('#EarningDeductionBody').append(bufferRow)\n                }\n                for (i = 0; i < this.form.PayrollDeductions.value.length; i++) \n                {\n                    info = this.form.PayrollDeductions.value[i]\n                    var bufferRow = document.createElement('tr')\n                    bufferRow.innerHTML = `<td>${info.DeductionCode}  <button class=\"remove\">\u00D7</button>\n                            </td><td>${info.Description}</td><td> <input class = numberInput type=\"number\" max=\"0\"  value = \"${info.Amount}\" ></input>           </td>`\n                    $('#EarningDeductionBody').append(bufferRow)\n\n                }\n                $('.remove').on('click', async function (e) {\n                    $(this).closest('tr').remove(); // Remove the row\n                    self.updatePayroll()\n                })\n                $('.numberInput').on('change', async function (e) {\n                    self.updatePayroll()\n                })\n                self.updateTotals()\n                self.updatePayroll()\n            }\n            if (self.Wiz == 1) {\n                self.form.EmployeeRowId.value = self.WizEmployeeRowId.toString()\n                self.form.PayMonth.value = self.PayMonth\n                self.form.PayYear.value = self.PayYear\n                self.form.PayPeriodStart.value = self.PayPeriodStart\n                self.form.PayPeriodEnd.value = self.PayPeriodEnd\n                self.form.PayDate.value = self.PayDateWiz\n            }\n       \n        });\n    }\n    public Wiz: number;\n    public extraEarningDeduction: number;\n    public updatePayroll(): void {\n       \n        var self = this\n        this.extraEarningDeduction = 0\n        if (isEmptyOrNull(self.form.EpfClass.value) || isEmptyOrNull(self.form.EisClass.value) ||\n            isEmptyOrNull(self.form.SocsoClass.value) || isEmptyOrNull(self.form.WorkingSpouse.value) ||\n            isEmptyOrNull(self.form.ChildrenUnderEighteen.value) || isEmptyOrNull(self.form.ChildrenInUniversity.value) ||\n            isEmptyOrNull(self.form.DisabledChild.value) || isEmptyOrNull(self.form.DisabledChildInUniversity.value))\n            return\n\n        var BasicPay = this.form.BasicPay.value\n        var totalNplAbsent = parseFloat(document.getElementById('totalNplAbsent').innerHTML)\n        var totalTimeDeduction = parseFloat(document.getElementById('totalTimeDeduction').innerHTML)\n        var OtElement = document.getElementById('totalOt')\n        var totalOt = parseFloat(OtElement.innerHTML)\n        let totalNplTimeDeduction = totalNplAbsent + totalTimeDeduction\n        let totalAllowance = 0;\n        let totalDeductions = 0;\n\n        let subjectEis = 0;\n        let subjectEpf = 0;\n        let subjectHrdf = 0;\n        let subjectPcb = 0;\n        let subjectSocso = 0;\n\n        let BonusEis = 0;\n        let BonusEpf = 0;\n        let BonusHrdf = 0;\n        let BonusPcb = 0;\n        let BonusSocso = 0;\n        let IncentiveEis = 0;\n        let IncentiveEpf = 0;\n        let IncentiveHrdf = 0;\n        let IncentivePcb = 0;\n        let IncentiveSocso = 0;\n\n\n        if (self.form.Bonus.value > 0) \n            $('.Bonus').show()\n        if (self.form.Incentive.value > 0) \n            $('.Incentive').show()\n        let PcbOffset = 0\n        if (self.form.IncentiveSubjectEis.value == true) {\n            if (self.form.SeperateIncentive.value == true)\n                IncentiveEis += self.form.Incentive.value\n            else\n                subjectEis += self.form.Incentive.value\n        }\n            \n        if (self.form.IncentiveSubjectEpf.value == true)\n        {\n            if (self.form.SeperateIncentive.value == true)\n                IncentiveEpf += self.form.Incentive.value\n            else\n                subjectEpf += self.form.Incentive.value\n        }\n\n        if (self.form.IncentiveSubjectHrdf.value == true)\n        {\n            if (self.form.SeperateIncentive.value == true)\n                IncentiveHrdf += self.form.Incentive.value\n            else\n                subjectHrdf += self.form.Incentive.value\n        }\n        if (self.form.IncentiveSubjectPcb.value == true)\n        {\n            if (self.form.SeperateIncentive.value == true)\n                IncentivePcb += self.form.Incentive.value\n\n            else\n                subjectPcb += self.form.Incentive.value\n        }\n        if (self.form.IncentiveSubjectSocso.value == true)\n        {\n\n            if (self.form.SeperateIncentive.value == true)\n                IncentiveSocso += self.form.Incentive.value\n            else\n                subjectSocso += self.form.Incentive.value\n        }\n\n\n        if (self.form.BonusSubjectEis.value == true)\n        {\n            if (self.form.SeperateBonus.value == true)\n                BonusEis += self.form.Bonus.value\n            else\n                subjectEis += self.form.Bonus.value\n        }\n        if (self.form.BonusSubjectEpf.value == true)\n        {\n            if (self.form.SeperateBonus.value == true)\n                BonusEpf += self.form.Bonus.value\n            else\n                subjectEpf += self.form.Bonus.value\n        }\n\n        if (self.form.BonusSubjectHrdf.value == true)\n        {\n            if (self.form.SeperateBonus.value == true)\n                BonusHrdf += self.form.Bonus.value\n            else\n                subjectHrdf += self.form.Bonus.value\n        }\n\n        if (self.form.BonusSubjectPcb.value == true)\n        {\n            if (self.form.SeperateBonus.value == true)\n                BonusPcb += self.form.Bonus.value\n            else\n                subjectPcb += self.form.Bonus.value\n        }\n\n\n        if (self.form.BonusSubjectSocso.value == true)\n        {\n            if (self.form.SeperateBonus.value == true)\n                BonusSocso += self.form.Bonus.value\n            else\n                subjectSocso += self.form.Bonus.value\n        }\n\n        let AllowanceDeductionBody = document.getElementById(\"AllowanceDeductionBody\");\n       if (AllowanceDeductionBody) {\n            Array.from(AllowanceDeductionBody.rows).forEach(row => {\n                let amountCell = row.cells[2];  // Third column: Allowance amount cell\n                let amount = parseFloat(amountCell.innerText.trim()) || 0; // Parse the amount\n                if (amount > 0)\n                    totalAllowance += amount\n                else if (amount < 0)\n                    totalDeductions += amount\n\n                if (amountCell.getAttribute(\"eis\") === \"true\") subjectEis += amount;\n                if (amountCell.getAttribute(\"epf\") === \"true\") subjectEpf += amount;\n                if (amountCell.getAttribute(\"hrdf\") === \"true\") subjectHrdf += amount;\n                if (amountCell.getAttribute(\"pcb\") === \"true\") subjectPcb += amount;\n                if (amountCell.getAttribute(\"socso\") === \"true\") subjectSocso += amount;\n            });\n        }\n\n        $('#TotalAllowance').val(totalAllowance)\n        $('#TotalDeduction').val(totalDeductions)\n        let MoneyClaimingBody = document.getElementById(\"MoneyClaimingBody\");\n        if (MoneyClaimingBody) {\n            Array.from(MoneyClaimingBody.rows).forEach(row => {\n                let amountCell = row.cells[2];  // Third column: Allowance amount cell\n                let amount = parseFloat(amountCell.innerText.trim()) || 0; // Parse the amount\n                self.extraEarningDeduction += amount\n                // Check and add the amount to respective sums if the attribute is \"true\"\n                if (amountCell.getAttribute(\"eis\") === \"true\") subjectEis += amount;\n                if (amountCell.getAttribute(\"epf\") === \"true\") subjectEpf += amount;\n                if (amountCell.getAttribute(\"hrdf\") === \"true\") subjectHrdf += amount;\n                if (amountCell.getAttribute(\"pcb\") === \"true\") subjectPcb += amount;\n                if (amountCell.getAttribute(\"socso\") === \"true\") subjectSocso += amount;\n            });\n        }\n\n        let EarningDeductionBody = document.getElementById('EarningDeductionBody')\n        if (EarningDeductionBody){\n            Array.from(EarningDeductionBody.rows).forEach(row => {\n                console.log(row)\n                let amountCell = row.querySelector('input.numberInput');  // Third column: Allowance amount cell\n                let amount = parseFloat(amountCell.value) || 0; // Parse the amount\n                self.extraEarningDeduction += amount\n                // Check and add the amount to respective sums if the attribute is \"true\"\n                if (amountCell.getAttribute(\"eis\") === \"true\") subjectEis += amount;\n                if (amountCell.getAttribute(\"epf\") === \"true\") subjectEpf += amount;\n                if (amountCell.getAttribute(\"hrdf\") === \"true\") subjectHrdf += amount;\n                if (amountCell.getAttribute(\"pcb\") === \"true\") subjectPcb += amount;\n                if (amountCell.getAttribute(\"socso\") === \"true\") subjectSocso += amount;\n            });\n        }\n\n        // Iterate through each row in the table body\n        if (OtElement.getAttribute(\"eis\") === \"true\") subjectEis += totalOt;\n        if (OtElement.getAttribute(\"epf\") === \"true\") subjectEpf += totalOt;\n        if (OtElement.getAttribute(\"hrdf\") === \"true\") subjectHrdf += totalOt;\n        if (OtElement.getAttribute(\"pcb\") === \"true\") subjectPcb += totalOt;\n        if (OtElement.getAttribute(\"socso\") === \"true\") subjectSocso += totalOt;\n        subjectEis += BasicPay;\n        subjectEpf += BasicPay;\n        subjectHrdf += BasicPay;\n        subjectPcb += BasicPay;\n        subjectSocso += BasicPay;\n        subjectEis -= totalNplTimeDeduction;\n        subjectEpf -= totalNplTimeDeduction;\n        subjectHrdf -= totalNplTimeDeduction;\n        subjectPcb -= totalNplTimeDeduction;\n        subjectSocso -= totalNplTimeDeduction;\n        $('#TotalEPF').val(subjectEpf.toFixed(2))\n        $('#TotalHRD').val(subjectHrdf.toFixed(2))\n        $('#TotalSOCSO').val(subjectSocso.toFixed(2))\n        $('#TotalEIS').val(subjectEis.toFixed(2))\n        $('#TotalTaxableWage').val(subjectPcb.toFixed(2))\n        \n        var WorkSpouse = self.form.WorkingSpouse.value == true ? 1 : 0\n        var calculatingGovPayment = 0\n        let EmployeeEPF = 0\n        let EmployeeEIS = 0\n        let EmployeePCB = 0\n        let EmployeeSOCSO = 0\n        let EmployerEPF = 0\n        let EmployerEIS = 0\n        let EmployerHRDF = 0\n        let EmployerSOCSO = 0\n   \n        if (self.form.SeperateBonus.value == true) {\n            calculatingGovPayment = 0\n            serviceCall<ListResponse<any>>({\n                service: PayrollService.baseUrl + '/CalculateGovernmentPaymentBonus',\n                method: \"GET\",\n                data: {\n                    \"EisCategory\": self.form.EisClass.value,\n                    \"EpfCategory\": self.form.EpfClass.value,\n                    \"SocsoCategory\": self.form.SocsoClass.value,\n\n                    \"HrdfCategory\": self.form.HrdfClass.value,\n                    \"EpfAmount\": subjectEpf,\n                    \"EisAmount\": subjectEis,\n                    \"SocsoAmount\": subjectSocso,\n                    \"PcbAmount\": subjectPcb,\n                    \"HrdfAmount\": subjectHrdf,\n                    \"PcbOffset\": 0,\n\n                    \"Bonus\": self.form.Bonus.value,\n\n                    \"WorkingSpouse\": WorkSpouse,\n                    \"ChildrenUnderEighteen\": self.form.ChildrenUnderEighteen.value,\n                    \"ChildrenInUniversity\": self.form.ChildrenInUniversity.value,\n                    \"NumberOfDisabledChild\": self.form.DisabledChild.value,\n                    \"NumberOfDisabledChildInUni\": self.form.DisabledChildInUniversity.value,\n                },\n                async: false,\n                onSuccess: (response) => {\n                    EmployeeEPF += response.Entities[0].EmployeeEPF\n                    EmployerEPF += response.Entities[0].EmployerEPF\n\n\n                    EmployeeEIS += response.Entities[0].EmployeeEIS\n                    EmployeePCB += response.Entities[0].EmployeePCB\n                    EmployeeSOCSO += response.Entities[0].EmployeeSOCSO\n                    EmployerEIS += response.Entities[0].EmployerEIS\n                    EmployerHRDF += response.Entities[0].EmployerHRDF\n                    EmployerSOCSO += response.Entities[0].EmployerSOCSO\n\n                    console.log(response.Entities[0])\n                    calculatingGovPayment = 1;\n                }\n            })\n            while (calculatingGovPayment == 0) { };\n        }\n        else if (self.form.SeperateIncentive.value == true) {\n            calculatingGovPayment = 0\n            serviceCall<ListResponse<any>>({\n                service: PayrollService.baseUrl + '/CalculateGovernmentPaymentSpecial',\n                method: \"GET\",\n                data: {\n                    \"EisCategory\": self.form.EisClass.value,\n                    \"EpfCategory\": self.form.EpfClass.value,\n                    \"SocsoCategory\": self.form.SocsoClass.value,\n\n                    \"HrdfCategory\": self.form.HrdfClass.value,\n                    \"EpfAmount\": IncentiveEpf,\n                    \"EisAmount\": IncentiveEis,\n                    \"SocsoAmount\": IncentiveSocso,\n                    \"PcbAmount\": IncentivePcb,\n                    \"HrdfAmount\": IncentiveHrdf,\n                    \"PcbOffset\": 0,\n\n\n                    \"WorkingSpouse\": WorkSpouse,\n                    \"ChildrenUnderEighteen\": self.form.ChildrenUnderEighteen.value,\n                    \"ChildrenInUniversity\": self.form.ChildrenInUniversity.value,\n                    \"NumberOfDisabledChild\": self.form.DisabledChild.value,\n                    \"NumberOfDisabledChildInUni\": self.form.DisabledChildInUniversity.value,\n                },\n                async: false,\n                onSuccess: (response) => {\n                    EmployeeEPF += response.Entities[0].EmployeeEPF\n                    EmployeeEIS += response.Entities[0].EmployeeEIS\n                    EmployeePCB += response.Entities[0].EmployeePCB\n                    EmployeeSOCSO += response.Entities[0].EmployeeSOCSO\n                    EmployerEPF += response.Entities[0].EmployerEPF\n                    EmployerEIS += response.Entities[0].EmployerEIS\n                    EmployerHRDF += response.Entities[0].EmployerHRDF\n                    EmployerSOCSO += response.Entities[0].EmployerSOCSO\n\n                    calculatingGovPayment = 1;\n                }\n            })\n            while (calculatingGovPayment == 0) { };\n        }\n        else {\n            serviceCall<ListResponse<any>>({\n                service: PayrollService.baseUrl + '/CalculateGovernmentPaymentSpecial',\n                method: \"GET\",\n                data: {\n                    \"EisCategory\": self.form.EisClass.value,\n                    \"EpfCategory\": self.form.EpfClass.value,\n                    \"SocsoCategory\": self.form.SocsoClass.value,\n\n                    \"HrdfCategory\": self.form.HrdfClass.value,\n                    \"EpfAmount\": subjectEpf,\n                    \"EisAmount\": subjectEis,\n                    \"SocsoAmount\": subjectSocso,\n                    \"PcbAmount\": subjectPcb,\n                    \"HrdfAmount\": subjectHrdf,\n                    \"PcbOffset\": 0,\n\n\n                    \"WorkingSpouse\": WorkSpouse,\n                    \"ChildrenUnderEighteen\": self.form.ChildrenUnderEighteen.value,\n                    \"ChildrenInUniversity\": self.form.ChildrenInUniversity.value,\n                    \"NumberOfDisabledChild\": self.form.DisabledChild.value,\n                    \"NumberOfDisabledChildInUni\": self.form.DisabledChildInUniversity.value,\n                },\n                async: false,\n                onSuccess: (response) => {\n                    self.EmployerContributions.length = 0\n                    self.form.TaxClass.value = response.Entities[0].TaxClass\n                    EmployeeEPF += response.Entities[0].EmployeeEPF\n                    EmployeeEIS += response.Entities[0].EmployeeEIS\n                    EmployeePCB += response.Entities[0].EmployeePCB\n                    EmployeeSOCSO += response.Entities[0].EmployeeSOCSO\n                    EmployerEPF += response.Entities[0].EmployerEPF\n                    EmployerEIS += response.Entities[0].EmployerEIS\n                    EmployerHRDF += response.Entities[0].EmployerHRDF\n                    EmployerSOCSO += response.Entities[0].EmployerSOCSO\n                    console.log(response.Entities[0])\n\n                    calculatingGovPayment = 1;\n                }\n            })\n\n            while (calculatingGovPayment == 0) { };\n\n        }\n        $('#EmployeeEPF').val(EmployeeEPF.toFixed(2))\n        $('#EmployeeEIS').val(EmployeeEIS.toFixed(2))\n        $('#PCB').val(EmployeePCB.toFixed(2))\n        $('#EmployeeSOCSO').val(EmployeeSOCSO.toFixed(2))\n        $('#EmployerEPF').val(EmployerEPF.toFixed(2))\n        $('#EmployerEIS').val(EmployerEIS.toFixed(2))\n        $('#HRD').val(EmployerHRDF.toFixed(2))\n        $('#EmployerSOCSO').val(EmployerSOCSO.toFixed(2))\n        self.updateWages()\n    }\n    public updateTotals() {\n    // NPL/Absent totals\n    const NplDayRate = parseFloat(document.getElementById('NplDayRate').textContent);\n    const NplHrRate = parseFloat(document.getElementById('NplHrRate').textContent);\n    const AbsentDayRate = parseFloat(document.getElementById('AbsentDayRate').textContent);\n\n    const NplDay = parseFloat(document.getElementById('NplDay').value) || 0;\n    const NplHr = parseFloat(document.getElementById('NplHr').value) || 0;\n    const AbsentDay = parseFloat(document.getElementById('AbsentDay').value) || 0;\n\n    // Calculate subtotal for each row\n    document.getElementById('NplDayValue').textContent = (NplDayRate * NplDay).toFixed(2);\n    document.getElementById('NplHrValue').textContent = (NplHrRate * NplHr).toFixed(2);\n    document.getElementById('AbsentDayValue').textContent = (AbsentDayRate * AbsentDay).toFixed(2);\n\n    // Update the total NPL/Absent\n    const totalNplAbsent = (NplDayRate * NplDay) + (NplHrRate * NplHr) + (AbsentDayRate * AbsentDay);\n    document.getElementById('totalNplAbsent').textContent = totalNplAbsent.toFixed(2);\n\n    // Overtime totals\n    const Ot1xRate = parseFloat(document.getElementById('Ot1.0x').textContent);\n    const Ot1_5xRate = parseFloat(document.getElementById('Ot1.5x').textContent);\n    const Ot2xRate = parseFloat(document.getElementById('Ot2.0x').textContent);\n\n    const OtOneTime = parseFloat(document.getElementById('OtOneTime').value) || 0;\n    const OtOnePointFiveTime = parseFloat(document.getElementById('OtOnePointFiveTime').value) || 0;\n    const OtTwoTime = parseFloat(document.getElementById('OtTwoTime').value) || 0;\n\n    // Calculate subtotal for each overtime row\n    document.getElementById('Ot1.0xValueTotal').textContent = (Ot1xRate * OtOneTime).toFixed(2);\n    document.getElementById('Ot1.5xValueTotal').textContent = (Ot1_5xRate * OtOnePointFiveTime).toFixed(2);\n    document.getElementById('Ot2.0xValueTotal').textContent = (Ot2xRate * OtTwoTime).toFixed(2);\n\n    // Update the total overtime\n    const totalOt = (Ot1xRate * OtOneTime) + (Ot1_5xRate * OtOnePointFiveTime) + (Ot2xRate * OtTwoTime);\n    document.getElementById('totalOt').textContent = totalOt.toFixed(2);\n\n    // Early Leaving/Late Arrival totals\n    const EarlyLeavingRate = parseFloat(document.getElementById('EarlyLeavingRate').textContent);\n    const LateArrivalRate = parseFloat(document.getElementById('LateArrivalRate').textContent);\n\n    const EarlyLeavingMinutes = parseFloat(document.getElementById('EarlyLeavingMinutes').value) || 0;\n    const LateArrivalMinutes = parseFloat(document.getElementById('LateArrivalMinutes').value) || 0;\n\n    // Calculate subtotal for each time deduction row\n    document.getElementById('EarlyLeavingSubtotal').textContent = (EarlyLeavingRate * EarlyLeavingMinutes).toFixed(2);\n    document.getElementById('LateArrivalSubtotal').textContent = (LateArrivalRate * LateArrivalMinutes).toFixed(2);\n\n    // Update the total time deduction\n    const totalTimeDeduction = (EarlyLeavingRate * EarlyLeavingMinutes) + (LateArrivalRate * LateArrivalMinutes);\n    document.getElementById('totalTimeDeduction').textContent = totalTimeDeduction.toFixed(2);\n}\n    public updateWages(): void {\n        var BasicPay = this.form.BasicPay.value\n        var Bonus = this.form.Bonus.value\n        var Incentive = this.form.Incentive.value\n\n        var TotalAllowance = parseFloat($('#TotalAllowance').val())\n        var TotalDeduction = parseFloat($('#TotalDeduction').val())\n        var TotalOt = parseFloat($('#totalOt').text())\n        var totalNplAbsent = 0;\n        if (document.getElementById('totalNplAbsent'))\n            totalNplAbsent = parseFloat(document.getElementById('totalNplAbsent').innerHTML);\n        var totalTimeDeduction = 0\n        if (document.getElementById('totalTimeDeduction'))\n            totalTimeDeduction = parseFloat(document.getElementById('totalTimeDeduction').innerHTML)\n\n        var GrossWages = BasicPay + TotalAllowance + TotalOt + this.extraEarningDeduction\n            - TotalDeduction - totalNplAbsent - totalTimeDeduction;\n        if (!isEmptyOrNull(Bonus))\n            GrossWages += Bonus\n        if (!isEmptyOrNull(Incentive))\n            GrossWages += Incentive\n\n        $('#GrossWage').val(GrossWages.toFixed(2))\n        let totalEmployeeContrib = parseFloat($('#EmployeeEPF').val()) + parseFloat($('#EmployeeSOCSO').val())\n            + parseFloat($('#EmployeeEIS').val()) + parseFloat($('#PCB').val()) + parseFloat($('#CP38').val())\n        let totalEmployerContrib = parseFloat($('#EmployerEPF').val()) + parseFloat($('#EmployerEIS').val()) + parseFloat($('#EmployerSOCSO').val())\n            + parseFloat($('#HRD').val())\n        $('#totalEmployeeContribution').val(totalEmployeeContrib.toFixed(2))\n        $('#totalEmployerContribution').val(totalEmployerContrib.toFixed(2))\n        let NettWage = GrossWages - totalEmployeeContrib\n        $('#NettWage').val(NettWage.toFixed(2))\n        if (this.Wiz == 1)\n            this.saveAndCloseButton.click()\n\n    }\n    public FixedOtRateOption: any;\n\n    public GeneratePayrollTable(setDate): void {\n        var self = this\n        function isOverlap(start1, end1, start2, end2) {\n            // Convert strings to Date objects if needed\n            const startDate1 = new Date(start1);\n            const endDate1 = new Date(end1);\n            const startDate2 = new Date(start2);\n            const endDate2 = new Date(end2);\n\n            // Check for overlap\n            return startDate1 <= endDate2 && startDate2 <= endDate1;\n        }\n        if (self.Wiz != 1)\n            self.ResetTable()    \n        var PayrollEarningsNode = document.getElementById('PayrollTable')\n        var EmployeeRowIdElement = document.getElementById(this.idPrefix + 'EmployeeRowId')\n        var PayMonthElement = document.getElementById(this.idPrefix + 'PayMonth')\n        var PayYearElement = document.getElementById(this.idPrefix + 'PayYear')\n        var PersonNameElement = document.getElementById(this.idPrefix + 'EmployeeName')\n        var ExternalDeductions = this.ExternalDeductions\n        var ExternalEarnings = this.ExternalEarnings\n        var EarningsString = this.EarningsString\n        var DeductionsString = this.DeductionsString\n        var listOfDicts = self.listOfDicts\n\n\n        if (!isEmptyOrNull($(EmployeeRowIdElement).val())) {\n            for (var index in listOfDicts) {\n                if (listOfDicts[index].id == $(EmployeeRowIdElement).val())\n                    $(PersonNameElement).val(listOfDicts[index].name)\n            }\n        }\n        else \n            self.form.EmployeeName.value = ``\n\n        if (isEmptyOrNull($(EmployeeRowIdElement).val()) || isEmptyOrNull($(PayMonthElement).val()) || isEmptyOrNull($(PayYearElement).val())) {\n\n            $(`.field.MaritalStatus, .field.WorkingSpouse, .field.ChildrenUnderEighteen, .field.ChildrenInUniversity,\n        .field.DisabledChildInUniversity, .field.DisabledChild,  .field.DaysWorked, .field.BasicPay, .field.DailyRate,\n        .field.HourlyRate, .field.EisClass, .field.SocsoClass, .field.HrdfClass, .field.EpfClass, .field.TaxClass, .addEarnings, .addDeductions,\n        .field.BirthDay, .field.Age`).hide();\n            return\n        }\n        else {\n            /*\n            for (var index in self.ListOfPayrollData) {\n                var CurrentRecordMonth = self.ListOfPayrollData[index].PayMonth\n                var CurrentRecordYear = self.ListOfPayrollData[index].PayYear\n                if (self.form.PayMonth.value == CurrentRecordMonth\n                    && self.form.PayYear.value == CurrentRecordYear\n                    && self.form.EmployeeRowId.value == self.ListOfPayrollData[index].EmployeeRowId) {\n                    self.form.EmployeeRowId.value = \"\"\n                    notifyError('The employee already have payslip for current month')\n                    return\n                }\n            }\n            */\n\n            if (setDate == 1) {\n                var todayYear = self.form.PayYear.value\n                var todayMonth = self.form.PayMonth.value\n\n                var DateObj = new Date(todayYear, todayMonth, this.PayDate)\n                var DateObjYear = DateObj.getFullYear().toString()\n                var DateObjMonth = (DateObj.getMonth() + 1).toString()\n                var DateObjDay = DateObj.getDate().toString()\n\n\n                todayMonth = todayMonth - 1\n                var LastMonth = new Date(todayYear, todayMonth, this.PayDate)\n                LastMonth.setDate(LastMonth.getDate() + 1);\n\n                var LastMonthObjYear = LastMonth.getFullYear().toString()\n                var LastMonthObjMonth = (LastMonth.getMonth() + 1).toString()\n                var LastMonthObjDay = LastMonth.getDate().toString()\n\n                var LatestDateFormat = DateObjMonth.padStart(2, '0') + '/' + DateObjDay.padStart(2, '0') + '/' + DateObjYear\n                var LastMonthFormat = LastMonthObjMonth.padStart(2, '0') + '/' + LastMonthObjDay.padStart(2, '0') + '/' + LastMonthObjYear\n\n                self.form.PayDate.value = LatestDateFormat\n                self.form.PayPeriodEnd.value = LatestDateFormat\n                self.form.PayPeriodStart.value = LastMonthFormat\n            }\n\n            var FullAttendance = true\n            var HaveUnpaidLeave = false\n            var HaveHospitalisationLeave = false\n            var HaveSickLeave = false\n            var HaveAnnualLeave = false\n            var HaveMaternityLeave = false\n            var HavePaternityLeave = false\n            var HaveMarriageLeave = false\n            var HaveCompassionateLeave = false\n            var HaveEmergencyLeave = false\n            var HaveGatepassLeave = false\n\n            var NoLate = true\n            var NoAbsence = true\n            var NoEarlyLeaving = true\n\n            self.NoPaidLeaveId.length = 0\n            self.MoneyClaimingId.length = 0\n            self.OtPayId.length = 0\n            self.EmployerContributions.length = 0\n            ExternalDeductions.length = 0\n            ExternalEarnings.length = 0\n            EarningsString.length = 0\n            DeductionsString.length = 0\n            self.FinalDeductions.length = 0\n            self.FinalEarnings.length = 0\n            self.NettEarnings = 0\n            self.NettDeductions = 0\n\n            self.AllowanceId.length = 0\n            self.DeductionId.length = 0\n\n            if (isEmptyOrNull($(PayMonthElement).val()) && isEmptyOrNull($(PayYearElement).val())) {\n                self.form.PayPeriodEnd.valueAsDate = new Date(self.form.PayYear.value, self.form.PayMonth.value, self.PayDate)\n                self.form.PayDate.valueAsDate = new Date(self.form.PayYear.value, self.form.PayMonth.value, self.PayDate)\n                var LastMonth = self.form.PayPeriodEnd.valueAsDate\n                LastMonth.setMonth(LastMonth.getMonth() - 1);\n                LastMonth.setDate(LastMonth.getDate() - 1);\n                self.form.PayPeriodStart.valueAsDate = LastMonth\n            }\n            var PayrollDate = `${self.form.PayYear.value}/${self.form.PayMonth.value + 1}/${1}`\n            /*\n            serviceCall<ListResponse<any>>({\n                service: EmployeeProfileService.baseUrl + '/CalculateWorkingHourAndDayWithDate',\n                method: \"GET\",\n                data: {\n                    \"EmployeeRowID\": parseInt($(EmployeeRowIdElement).val()),\n                    \"Date\": PayrollDate\n                },\n                async: false,\n                onSuccess: (response) => {\n                    var totalWorkingHour = response.Entities[0].TotalWorkingTimeInMinutes/60\n                    var meanDailyWorkingHour = totalWorkingHour / self.form.DaysWorked.value\n                    self.meanDailyWorkingHour = meanDailyWorkingHour\n                }\n            })\n            */\n            var wait = 0\n            serviceCall<ListResponse<any>>({\n                service: PayrollService.baseUrl + '/CalculateNplAbsentOtSpecial',\n                method: \"GET\",\n                data: {\n                    \"EmployeeRowID\": parseInt($(EmployeeRowIdElement).val()),\n                    \"Date\": PayrollDate\n                },\n                async: false,\n                onSuccess: (response) => {\n                    wait = 1\n                    self.form.DaysWorked.value = response.Entities[0].NumberOfWorkingDays\n                    $(\"#NplDayRate\").html(response.Entities[0].NPLDaily.toFixed(2));\n                    $(\"#NplHrRate\").html(response.Entities[0].NPLHourly.toFixed(2));\n                    $(\"#AbsentDayRate\").html(response.Entities[0].AbsentDaily.toFixed(2));\n                    $(\"#EarlyLeavingRate\").html(response.Entities[0].EarlyLeavingRate.toFixed(2));\n                    $(\"#LateArrivalRate\").html(response.Entities[0].LateArrivalRate.toFixed(2));\n                    self.form.DailyRate.value = response.Entities[0].DailyRate.toFixed(2)\n                    self.form.HourlyRate.value = response.Entities[0].HourlyRate.toFixed(2)\n\n                }\n            })\n            while (wait == 0);\n            var criteria: any;\n            EmployeeCp38Service.List({\n                Criteria: Criteria.and(criteria,\n                    [\n                        [EmployeeCp38Row.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()],\n                    [[EmployeeCp38Row.Fields.EffectiveFrom], '<=', self.form.PayPeriodEnd.valueAsDate],\n                    [self.form.PayPeriodStart.valueAsDate, '<=', [EmployeeCp38Row.Fields.EffectiveUntil]\n                    ],\n                )\n            }, response => {\n                let TotalCp38 = 0;\n                for (var res in response.Entities) {\n                    if (isOverlap(response.Entities[res].EffectiveFrom, response.Entities[res].EffectiveUntil, self.form.PayPeriodStart, self.form.PayPeriodEnd))\n                        TotalCp38 += response.Entities[res].Cp38Amount\n                }\n                $('#CP38').val(TotalCp38)\n                var criteria: any;\n                EmployeeBonusService.List({\n                    Criteria: Criteria.and(criteria,\n                        [[EmployeeBonusRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()],\n                        [[EmployeeBonusRow.Fields.PayMonth], '=', self.form.PayMonth.value],\n                        [[EmployeeBonusRow.Fields.PayYear], '=', self.form.PayYear.value],\n                    )\n                }, response => {\n                    let TotalBonus = 0;\n                    for (var res in response.Entities)\n                        TotalBonus += response.Entities[res].BonusAmount\n                    if (TotalBonus > 0)\n                        self.form.Bonus.value = TotalBonus\n                    var criteria: any;\n\n                    EmployeeIncentiveService.List({\n                        Criteria: Criteria.and(criteria,\n                            [[EmployeeIncentiveRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()],\n                            [[EmployeeIncentiveRow.Fields.PayMonth], '=', self.form.PayMonth.value],\n                            [[EmployeeIncentiveRow.Fields.PayYear], '=', self.form.PayYear.value],\n                        )\n                    }, response => {\n                        var criteria: any;\n                        let TotalIncentive = 0;\n                        for (var res in response.Entities)\n                            TotalIncentive += response.Entities[res].IncentiveAmount\n                        if (TotalIncentive > 0)\n                            self.form.Incentive.value = TotalIncentive\n                        LeaveApplicationService.List({\n                            Criteria: Criteria.and(criteria, [[LeaveApplicationRow.Fields.Status], '=', '1'],\n                                [[LeaveApplicationRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()],\n                                [[LeaveApplicationRow.Fields.StartDate], '<=', self.form.PayPeriodEnd.get_value()],\n                                [[LeaveApplicationRow.Fields.EndDate], '>=', self.form.PayPeriodStart.get_value()],\n                            )\n                        }, response => {\n                            response.Entities.length > 0 ? FullAttendance = false : ''\n                            var criteria: any;\n                            for (var res in response.Entities) {\n                                var leaveReasonId = response.Entities[res].LeaveReasonId;\n\n                                switch (leaveReasonId) {\n                                    case 1:\n                                        HaveUnpaidLeave = true;\n                                        break;\n                                    case 2:\n                                        HaveHospitalisationLeave = true;\n                                        break;\n                                    case 3:\n                                        HaveSickLeave = true;\n                                        break;\n                                    case 4:\n                                        HaveAnnualLeave = true;\n                                        break;\n                                    case 5:\n                                        HaveMaternityLeave = true;\n                                        break;\n                                    case 6:\n                                        HavePaternityLeave = true;\n                                        break;\n                                    case 7:\n                                        HaveMarriageLeave = true;\n                                        break;\n                                    case 8:\n                                        HaveCompassionateLeave = true;\n                                        break;\n                                    case 10:\n                                        HaveEmergencyLeave = true;\n                                        break;\n                                    case 11:\n                                        HaveGatepassLeave = true;\n                                        break;\n                                }\n                            }\n\n\n                            for (var index in listOfDicts) {\n                                if (listOfDicts[index].id == $(EmployeeRowIdElement).val()) {\n                                    self.form.PayrollEarnings.value.length = 0\n                                    self.form.PayrollDeductions.value.length = 0\n\n                                    $('.addEarnings, .addDeductions').show()\n                                    $(`.field.MaritalStatus, .field.WorkingSpouse, .field.ChildrenUnderEighteen, .field.ChildrenInUniversity,\n                            .field.DisabledChildInUniversity, .field.DisabledChild,  .field.DaysWorked, .field.BasicPay, .field.DailyRate,\n                            .field.HourlyRate, .field.EisClass, .field.SocsoClass, .field.EpfClass, .field.TaxClass, .field.BirthDay, .field.Age`).show();\n\n                                    $(`.HrdfClass`).show();\n                                    var wait = 0\n                                    serviceCall<RetrieveResponse<any>>({\n                                        service: EmployeeProfileService.baseUrl + '/CalculateOtRate',\n                                        data: {\n                                            \"EmployeeRowID\": self.form.EmployeeRowId.value,\n                                            \"Date\": PayrollDate\n                                        },\n                                        method: \"GET\",\n                                        async: false,\n                                        onSuccess: (response) => {\n                                            if (document.getElementById('PayRoll-Description').children.length == 0)\n                                                self.Setup()\n\n                                            console.log(response.Entities[0])\n                                            self.FixedOtRateOption = response.Entities[0].FixedOtRateOption\n                                            if (self.FixedOtRateOption == false) {\n                                                self.form.FlatOt.value = response.Entities[0].OtRate\n                                                let roundedOtRate = parseFloat(response.Entities[0].OtRate.toFixed(2));\n                                                // Calculate 1.5x and 2.0x multipliers\n                                                let otRate1_5x = (roundedOtRate * 1.5).toFixed(2);\n                                                let otRate2_0x = (roundedOtRate * 2).toFixed(2);\n                                                document.getElementById(\"flatOtDesc\").innerHTML = \"OT1.0x\"\n                                                document.getElementById(\"OnePointFiveOtDesc\").innerHTML = \"OT1.5x\"\n                                                document.getElementById(\"TwoOtDesc\").innerHTML = \"OT2.0x\"\n\n                                                document.getElementById(\"Ot1.0x\").textContent = roundedOtRate.toFixed(2);\n                                                document.getElementById(\"Ot1.5x\").textContent = otRate1_5x\n                                                document.getElementById(\"Ot2.0x\").textContent = otRate2_0x\n                                            }\n                                            else {\n                                                document.getElementById(\"flatOtDesc\").innerHTML = \"Weekday\"\n                                                document.getElementById(\"OnePointFiveOtDesc\").innerHTML = \"Weekend\"\n                                                document.getElementById(\"TwoOtDesc\").innerHTML = \"Public Holiday\"\n\n                                                document.getElementById(\"Ot1.0x\").textContent = response.Entities[0].OtRateWeekday;\n                                                document.getElementById(\"Ot1.5x\").textContent = response.Entities[0].OtRateWeekend;\n                                                document.getElementById(\"Ot2.0x\").textContent = response.Entities[0].OtRatePublicHoliday\n\n\n                                            }\n                                            wait = 1\n                                        }\n                                    })\n                                    while (wait == 0);\n                                    self.form.BirthDay.value = listOfDicts[index].Birthday\n                                    self.form.Age.value = self.calculateAge()\n                                    self.form.MaritalStatus.value = listOfDicts[index].MaritalStatus.toString()\n                                    self.form.WorkingSpouse.value = listOfDicts[index].WorkingSpouse\n                                    self.form.ChildrenUnderEighteen.value = listOfDicts[index].ChildrenUnderEighteen\n                                    self.form.ChildrenInUniversity.value = listOfDicts[index].ChildrenInUniversity\n                                    self.form.DisabledChildInUniversity.value = listOfDicts[index].DisabledChildInUniversity\n                                    self.form.DisabledChild.value = listOfDicts[index].DisabledChild\n\n                                    self.form.BasicPay.value = listOfDicts[index].BasicPay\n                                    self.EmployeeType = listOfDicts[index].type\n                                    self.EpfSubjection = listOfDicts[index].EpfSubjection\n                                    self.form.EisClass.value = listOfDicts[index].EisClass.toString()\n                                    self.form.EpfClass.value = listOfDicts[index].EpfClass.toString()\n                                    self.form.SocsoClass.value = listOfDicts[index].SocsoClass.toString()\n                                    self.form.HrdfClass.value = listOfDicts[index].HrdfClass\n                                    var EmployeeName = listOfDicts[index].name\n                                    var criteria: any;\n                                    EmployeeAllowanceService.List({\n                                        Criteria: Criteria.and(criteria, [[EmployeeAllowanceRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()]\n                                            , [self.form.PayPeriodStart.get_value(), '>=', [EmployeeAllowanceRow.Fields.EffectiveFrom]])\n                                    }, response => {\n                                        console.log(response.Entities)\n                                        $('#AllowanceDeductionBody').empty()\n                                        var TotalAllowance = 0\n                                        for (var index in response.Entities) {\n                                            if (!isEmptyOrNull(response.Entities[index].EffectiveUntil)) {\n                                                var timestamp = response.Entities[index].EffectiveUntil;\n                                                var date = new Date(timestamp);\n                                                if (self.form.PayPeriodStart.valueAsDate > date)\n                                                    continue\n                                            }\n\n                                            if (response.Entities[index].OneTime == true) {\n                                                if (response.Entities[index].PaidOneTime == true)\n                                                    continue\n                                            }\n                                            if (response.Entities[index].FullAttendance == true) {\n                                                if (\n                                                    response.Entities[index].ExemptAnnualLeave == false &&\n                                                    response.Entities[index].ExemptCompassionateLeave == false &&\n                                                    response.Entities[index].ExemptEmergencyLeave == false &&\n                                                    response.Entities[index].ExemptUnpaidLeave == false &&\n                                                    response.Entities[index].ExemptSickLeave == false &&\n                                                    response.Entities[index].ExemptPaternityLeave == false &&\n                                                    response.Entities[index].ExemptMaternityLeave == false &&\n                                                    response.Entities[index].ExemptMarriageLeave == false &&\n                                                    response.Entities[index].ExemptHospitalisationLeave == false &&\n                                                    response.Entities[index].ExemptGatepassLeave == false\n                                                ) {\n                                                    if (FullAttendance == false)\n                                                        continue\n                                                }\n                                                else {\n                                                    if (response.Entities[index].ExemptAnnualLeave == true && HaveAnnualLeave == true)\n                                                        continue\n\n                                                    if (response.Entities[index].ExemptCompassionateLeave == true && HaveCompassionateLeave == true)\n                                                        continue\n\n                                                    if (response.Entities[index].ExemptEmergencyLeave == true && HaveEmergencyLeave == true)\n                                                        continue\n\n                                                    if (response.Entities[index].ExemptUnpaidLeave == true && HaveUnpaidLeave == true)\n                                                        continue\n                                                    if (response.Entities[index].ExemptSickLeave == true && HaveSickLeave == true)\n                                                        continue\n                                                    if (response.Entities[index].ExemptPaternityLeave == true && HavePaternityLeave == true)\n                                                        continue\n                                                    if (response.Entities[index].ExemptMaternityLeave == true && HaveMaternityLeave == true)\n                                                        continue\n                                                    if (response.Entities[index].ExemptMarriageLeave == true && HaveMarriageLeave == true)\n                                                        continue\n                                                    if (response.Entities[index].ExemptHospitalisationLeave == true && HaveHospitalisationLeave == true)\n                                                        continue\n                                                    if (response.Entities[index].ExemptGatepassLeave == true && HaveGatepassLeave == true)\n                                                        continue\n                                                }\n                                            }\n                                            else if (response.Entities[index].NoAbsence == true && NoAbsence == false)\n                                                continue\n                                            else if (response.Entities[index].NoEarlyLeaving == true && NoEarlyLeaving == false)\n                                                continue\n                                            else if (response.Entities[index].NoLate == true && NoLate == false)\n                                                continue\n                                            var rowBuffer = document.createElement('tr')\n\n                                            rowBuffer.innerHTML = `<td>${response.Entities[index].AllowanceCode}</td><td>${response.Entities[index].Description}</td>\n                                            <td class = \"AllowanceAmount\" eis =  ${response.Entities[index].SubjectionEis.toString()} epf =  ${response.Entities[index].SubjectionEpf.toString()}\n                                            hrdf =  ${response.Entities[index].SubjectionHrdf.toString()} pcb =  ${response.Entities[index].SubjectionPcb.toString()}\n                                                socso =  ${response.Entities[index].SubjectionSocso.toString()} \n                                            >${response.Entities[index].Amount}</td>`\n                                            $('#AllowanceDeductionBody').append(rowBuffer)\n                                            self.AllowanceId.push(response.Entities[index].Id)\n                                            TotalAllowance += response.Entities[index].Amount\n                                        }\n                                        $('#TotalAllowance').val(TotalAllowance)\n                                        $(PersonNameElement).val(EmployeeName)\n                                        if (PayrollEarningsNode) {\n                                            var rows = PayrollEarningsNode.getElementsByTagName('TR');\n                                            var numRows = rows.length;\n                                            for (var i = numRows - 1; i > 0; i--)\n                                                rows[i].parentNode.removeChild(rows[i]);\n                                        }\n                                        var criteria: any;\n\n                                        OTApplicationService.List({\n                                            Criteria: Criteria.and(criteria, [[OTApplicationRow.Fields.Status], '=', '1'], [[OTApplicationRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()],\n                                                [[OTApplicationRow.Fields.OtDate], '>=', self.form.PayPeriodStart.get_value()],\n                                                [[OTApplicationRow.Fields.OtDate], '<=', self.form.PayPeriodEnd.get_value()])\n                                        }, response => {\n                                            let WeekendTime = 0\n                                            let WeekdayTime = 0\n                                            let PublicHolidayTime = 0\n                                            let TwoTimes = 0\n                                            let OnePointFiveTimes = 0\n                                            response.Entities.forEach(data => {\n                                                if (data.WeekendOt)\n                                                    WeekendTime += data.OtMinute;\n                                                else if (data.WeekdayOt)\n                                                    WeekdayTime += data.OtMinute;\n                                                else if (data.PublicHolidayOt)\n                                                    PublicHolidayTime += data.OtMinute;\n                                            })\n                                            if (self.FixedOtRateOption == false) {\n                                                self.PublicHolidayMultiplier == 2.0 ? TwoTimes += PublicHolidayTime : OnePointFiveTimes += PublicHolidayTime\n                                                self.WeekendMultiplier == 2.0 ? TwoTimes += WeekendTime : OnePointFiveTimes += WeekendTime\n                                                self.WeekdayMultiplier == 2.0 ? TwoTimes += WeekdayTime : OnePointFiveTimes += WeekdayTime\n\n                                                TwoTimes = TwoTimes / 60\n                                                OnePointFiveTimes = OnePointFiveTimes / 60\n\n                                                $('#OtOnePointFiveTime').val(OnePointFiveTimes)\n                                                $('#OtTwoTime').val(TwoTimes)\n                                            }\n                                            else {\n                                                WeekdayTime = WeekdayTime / 60;\n                                                WeekendTime = WeekendTime / 60;\n                                                PublicHolidayTime = PublicHolidayTime / 60;\n\n                                                $('#OtOneTime').val(WeekdayTime)\n                                                $('#OtOnePointFiveTime').val(WeekendTime)\n                                                $('#OtTwoTime').val(PublicHolidayTime)\n                                            }\n                                            $('#OtTwoTime').trigger('change')\n\n                                            var criteria: any;\n                                            NoPaidLeaveService.List({\n                                                Criteria: Criteria.and(criteria, [[NoPaidLeaveRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()],\n                                                    [[NoPaidLeaveRow.Fields.LeaveDate], '>=', self.form.PayPeriodStart.get_value()],\n                                                    [[NoPaidLeaveRow.Fields.LeaveDate], '<=', self.form.PayPeriodEnd.get_value()]\n                                                )\n                                            }, response => {\n                                                let NoPaidLeaveDays = 0\n\n                                                for (var index in response.Entities) {\n                                                    if (!isEmptyOrNull(response.Entities[index].Deductions)) {\n                                                        self.NoPaidLeaveId.push(response.Entities[index].Id)\n                                                        NoPaidLeaveDays += response.Entities[index].HalfDay ? 0.5 : 1\n                                                    }\n                                                }\n                                                var criteria: any;\n                                                FixedDeductionService.List({\n                                                    Criteria: Criteria.and(criteria, [[FixedDeductionRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()]\n                                                        , [self.form.PayPeriodStart.get_value(), '>=', [FixedDeductionRow.Fields.EffectiveFrom]])\n                                                }, response => {\n                                                    var TotalDeductions = 0\n                                                    for (var index in response.Entities) {\n                                                        if (response.Entities[index].OneTime == true) {\n                                                            if (response.Entities[index].DeductedOneTime == true)\n                                                                continue\n                                                        }\n                                                        if (!isEmptyOrNull(response.Entities[index].EffectiveUntil)) {\n                                                            var timestamp = response.Entities[index].EffectiveUntil;\n                                                            var date = new Date(timestamp);\n                                                            if (self.form.PayPeriodStart.valueAsDate > date)\n                                                                continue\n                                                        }\n                                                        var row = document.createElement('tr')\n                                                        row.innerHTML = `<td>${response.Entities[index].DeductionCode}</td><td>${response.Entities[index].Description}</td><td class = \"DeductionAmount\">-${response.Entities[index].Amount}</td>`\n\n\n                                                        $('#AllowanceDeductionBody').append(row)\n                                                        self.DeductionId.push(response.Entities[index].Id)\n                                                        TotalDeductions += response.Entities[index].Amount\n                                                    }\n                                                    $('.remove').on('click', async function (e) {\n                                                        console.log('haha')\n                                                        $(this).closest('tr').remove(); // Remove the row\n                                                        self.updatePayroll()\n                                                    })\n                                                    $('.numberInput').on('change', async function (e) {\n                                                        self.updatePayroll()\n                                                    })\n                                                    $('#TotalDeduction').val(TotalDeductions)\n                                                    var criteria: any;\n                                                    MoneyClaimApplicationService.List({\n                                                        Criteria: Criteria.and(criteria, [[MoneyClaimApplicationRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()]\n                                                            , [[MoneyClaimApplicationRow.Fields.Paid], '=', '0'], [[MoneyClaimApplicationRow.Fields.Status], '=', '1'],\n                                                            [[MoneyClaimApplicationRow.Fields.ClaimingDate], '>=', self.form.PayPeriodStart.get_value()],\n                                                            [[MoneyClaimApplicationRow.Fields.ClaimingDate], '<=', self.form.PayPeriodEnd.get_value()])\n                                                    }, response => {\n                                                        $('#MoneyClaimingBody').empty()\n                                                        for (var index in response.Entities) {\n                                                            var rowBuffer = document.createElement('tr')\n                                                            rowBuffer.innerHTML = `<td>${response.Entities[index].ClaimingCategory}</td><td>${response.Entities[index].Description}</td>\n                                            <td  eis =  ${response.Entities[index].SubjectionEis.toString()} epf =  ${response.Entities[index].SubjectionEpf.toString()}\n                                            hrdf =  ${response.Entities[index].SubjectionHrdf.toString()} pcb =  ${response.Entities[index].SubjectionPcb.toString()}\n                                                socso =  ${response.Entities[index].SubjectionSocso.toString()} \n                                            >${response.Entities[index].ClaimAmount}</td>`\n                                                            $('#MoneyClaimingBody').append(rowBuffer)\n\n\n                                                        }\n\n                                                        var criteria: any;\n                                                        EmployeeEarlyLeavingService.List({\n                                                            Criteria: Criteria.and(criteria, [[EmployeeEarlyLeavingRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()],\n                                                                [[EmployeeEarlyLeavingRow.Fields.Date], '>=', self.form.PayPeriodStart.get_value()],\n                                                                [[EmployeeEarlyLeavingRow.Fields.Date], '<=', self.form.PayPeriodEnd.get_value()]\n                                                            )\n\n                                                        }, response => {\n                                                            response.Entities.length > 0 ? NoEarlyLeaving = false : ''\n                                                            let EarlyLeavingMinutes = 0\n                                                            for (var index in response.Entities) {\n                                                                if (response.Entities[index].Deducted == 0) {\n                                                                    EarlyLeavingMinutes += response.Entities[index].EarlyMins\n                                                                    self.EarlyLeavingId.push(response.Entities[index].Id)\n                                                                }\n                                                            }\n                                                            $('#EarlyLeavingMinutes').val(EarlyLeavingMinutes)\n                                                            var criteria: any;\n                                                            EmployeeLateService.List({\n                                                                Criteria: Criteria.and(criteria, [[EmployeeLateRow.Fields.EmployeeRowId], '=', $(EmployeeRowIdElement).val()],\n                                                                    [[EmployeeLateRow.Fields.Date], '>=', self.form.PayPeriodStart.get_value()],\n                                                                    [[EmployeeLateRow.Fields.Date], '<=', self.form.PayPeriodEnd.get_value()]\n                                                                )\n                                                            }, response => {\n                                                                var LateMinutes = 0\n                                                                response.Entities.length > 0 ? NoLate = false : ''\n                                                                for (var index in response.Entities) {\n                                                                    if (response.Entities[index].Deducted == 0) {\n                                                                        if (!isEmptyOrNull(response.Entities[index].Deductions)) {\n                                                                            LateMinutes += response.Entities[index].LateMins\n                                                                            self.LateArrivalId.push(response.Entities[index].Id)\n                                                                        }\n                                                                    }\n                                                                }\n                                                                $('#LateArrivalMinutes').val(LateMinutes)\n                                                                self.updatePayroll()\n                                                                //self.updateWages()\n\n                                                            })\n                                                        })\n\n\n                                                    })\n\n                                                })\n\n\n                                            })\n                                        })\n                                    })\n\n                                    break\n                                }\n                            }\n\n                        })\n                    })\n                })\n\n\n            })\n\n\n        \n           \n        }\n    }\n\n    public CheckSubjection(arrayOfDict, input): number {\n        var extractedText = input.match(/\\((.*?)\\)/);\n        var trimmedString;\n        // Check if text inside parentheses is found\n        if (extractedText && extractedText.length > 1)\n            trimmedString = extractedText[1]; // Extracted text is at index 1\n        else\n            trimmedString = input; // If no parentheses found, set trimmed string to original string\n\n        if (trimmedString == 'Others')\n            return 0\n        for (var i = 0; i < arrayOfDict.length; i++) {\n            var dict = arrayOfDict[i];\n            for (var key in dict) {\n                if (dict[key] == trimmedString)\n                    return dict['subjection']\n            }\n        }\n\n        return 0\n    }\n    protected getToolbarButtons() {\n        var buttons = super.getToolbarButtons();\n        var CssLink = document.createElement('style')\n        CssLink.textContent =\n            `\n\n    .section {\n      margin: 20px 0;\n      padding: 20px;\n      border: 1px solid #ccc;\n      background-color: #f9f9f9;\n      border-radius: 8px;\n    }\n\n    .section h3 {\n      margin-bottom: 15px;\n      font-size: 18px;\n      color: #333;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n    }\n\n    table td {\n      padding: 8px;\n      text-align: left;\n      vertical-align: middle;\n    }\n\n    table td input[type=\"number\"] {\n      width: 100%;\n      text-align: right;\n      padding: 5px;\n      font-size: 14px;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background-color: #f9f9f9;\n    }\n\n\n\n\n\n\n\n\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin: 20px 0;\n    }\n\n    th, td {\n      border: 1px solid #ccc;\n      padding: 10px;\n      text-align: center;\n    }\n\n    th {\n      background-color: #d9e9f9; /* Light blue for headers */\n      font-weight: bold;\n    }\n\n    td:nth-child(3), td:nth-child(5) {\n      background-color: #fde8f1; /* Light pink for specific columns */\n    }\n\n    tr:nth-child(even) {\n      background-color: #f9f9f9; /* Alternating row colors */\n    }\n\n    tr {\n    position: sticky;\n    }\n        \n    tr:hover {\n      background-color: #f1f1f1; /* Hover effect for rows */\n    }\n\n    .numberInput {\n      text-align: right; /* Align text consistently */\n      width: 100%;\n      border: none;\n      background-color: transparent;\n    }\n\n    .Description {\n    text-align: left; /* Align text consistently */\n    width: 50px; /* Ensures consistent width for all spans */\n\n    }\n\n    .numberInputContainer {\n    text-align: left; /* Align text consistently */\n    width: 100px; /* Ensures consistent width for all spans */\n    }\n\n\n    .rates {\n    text-align: right; /* Align text consistently */\n    width: 100px; /* Ensures consistent width for all spans */\n    }\n    \n\n    #PayRollGrid {\n    display: flex;\n    gap: 5px; /* Adds a 20px gap between #left, #center, and #right */\n}\n\n#left,\n#center,\n#right {\n    flex: 1; /* Ensures each section takes equal space (optional) */\n}\n\n            `\n        document.head.appendChild(CssLink)\n\n\n        \n        // *** Create Dropdown-Button ***\n        var self = this\n\n        buttons.push(\n            {\n                title: \"Add Earnings\",\t// *** Get button text from translation\n                cssClass: 'text-bg-success p-2 addEarnings',\n                icon: 'fa-plus text-green',\n                onClick: () => {\n                    const addButton = $('.PayrollEarnings .add-button');\n                    addButton.click()\n                    var PrevLength = self.form.PayrollEarnings.value.length\n                    $('.s-HRMSoftware-PayrollSettings-PayrollEarningsEditDialog').on(\"dialogclose\", function () {\n                        if (PrevLength != self.form.PayrollEarnings.value.length) {\n                            var info = self.form.PayrollEarnings.value[self.form.PayrollEarnings.value.length - 1]\n                            var bufferRow = document.createElement('tr')\n                            bufferRow.innerHTML = `<td> <span>${info.EarningCode}</span>           <button class=\"remove\">\u00D7</button>\n                            </td><td>${info.Description}</td><td> <input class = numberInput type=\"number\" min=\"0\" eis = ${info.SubjectionToEis} epf = ${info.SubjectionToEpf} hrdf = ${info.SubjectionToHrdf}\n                             pcb = ${info.SubjectionToPcb} socso = ${info.SubjectionToSocso}  value = ${info.Amount} ></input>           </td>`\n                        \n                            $('#EarningDeductionBody').append(bufferRow)\n                            $('.remove').on('click', async function (e) {\n                                $(this).closest('tr').remove(); // Remove the row\n                                self.updatePayroll()\n                            })\n                            $('.numberInput').on('change', async function (e) {\n                                self.updatePayroll()\n                            })\n\n                            self.updatePayroll()\n                        }\n\n                    })\n                },\n            }\n        );\n        buttons.push(\n            {\n                title: \"Add Deductions\",\t// *** Get button text from translation\n                cssClass: 'text-bg-danger p-2 addDeductions',\n                icon: 'fa-minus text-red',\n                onClick: () => {\n                    const addButton = $('.PayrollDeductions .add-button');\n                    addButton.click()\n                    var PrevLength = self.form.PayrollDeductions.value.length\n                    $('.s-HRMSoftware-PayrollSettings-PayrollDeductionsEditDialog').on(\"dialogclose\", function () {\n                        if (PrevLength != self.form.PayrollDeductions.value.length) {\n                            var info = self.form.PayrollDeductions.value[self.form.PayrollDeductions.value.length - 1]\n                            var bufferRow = document.createElement('tr');\n                            bufferRow.innerHTML = `<td>   <span>${info.DeductionCode}</span>  <button class=\"remove\">\u00D7</button>\n                            </td><td>${info.Description}</td><td> <input class = numberInput type=\"number\" max=\"0\"  value = \"-${info.Amount}\" ></input>           </td>`\n                            $('#EarningDeductionBody').append(bufferRow)\n                            $('.remove').on('click', async function (e) {\n                                $(this).closest('tr').remove(); // Remove the row\n                                self.updatePayroll()\n                            })\n                            $('.numberInput').on('change', async function (e) {\n                                self.updatePayroll()\n                            })\n                            self.updatePayroll()\n\n                        }\n                    })\n                },\n            }\n        );\n        return buttons;\n    }\n    protected save_submitHandler(response): void {\n        let i = 0;\n        let ExtraEarningDeductionBody = document.getElementById(\"EarningDeductionBody\");\n        let ExtraEarningDeductionRows = ExtraEarningDeductionBody.querySelectorAll(\"tr\");\n        if (ExtraEarningDeductionRows.length) {\n            let ExtraEarningList: any[] = [];\n            let ExtraDeductionList: any[] = [];\n            let ExtraEarningDeductionData = Array.from(ExtraEarningDeductionRows).map(row => {\n                let cells = row.querySelectorAll(\"td\");\n                return {\n                    code: cells[0].querySelector(\"span\").textContent,          // e.g., \"111\"\n                    description: cells[1].innerText,    // e.g., \"Director Fee\"\n                    amount: cells[2].querySelector(\".numberInput\").value,       // e.g., \"100\"\n                    eis: cells[2].querySelector(\".numberInput\").getAttribute(\"eis\"), // e.g., \"false\"\n                    epf: cells[2].querySelector(\".numberInput\").getAttribute(\"epf\"), // e.g., \"false\"\n                    hrdf: cells[2].querySelector(\".numberInput\").getAttribute(\"hrdf\"), // e.g., \"false\"\n                    pcb: cells[2].querySelector(\".numberInput\").getAttribute(\"pcb\"), // e.g., \"false\"\n                    socso: cells[2].querySelector(\".numberInput\").getAttribute(\"socso\") // e.g., \"false\"\n                };\n            });\n            for (i = 0; i < ExtraEarningDeductionData.length; i++) {\n                var AllowanceDeductionRow\n                if (parseFloat(ExtraEarningDeductionData[i].amount) > 0) {\n                    AllowanceDeductionRow = new ConcretePayrollEarningsRow()\n                    AllowanceDeductionRow.Amount = parseFloat(ExtraEarningDeductionData[i].amount)\n                    AllowanceDeductionRow.Description = ExtraEarningDeductionData[i].description\n                    AllowanceDeductionRow.SubjectionToPcb = toBoolean(ExtraEarningDeductionData[i].pcb)\n                    AllowanceDeductionRow.SubjectionToEis = toBoolean(ExtraEarningDeductionData[i].eis)\n                    AllowanceDeductionRow.SubjectionToHrdf = toBoolean(ExtraEarningDeductionData[i].hrdf)\n                    AllowanceDeductionRow.SubjectionToSocso = toBoolean(ExtraEarningDeductionData[i].socso)\n                    AllowanceDeductionRow.SubjectionToEpf = toBoolean(ExtraEarningDeductionData[i].epf)\n                    AllowanceDeductionRow.EarningCode = ExtraEarningDeductionData[i].code\n\n                    ExtraEarningList.push(AllowanceDeductionRow)\n                }\n                else if (parseFloat(ExtraEarningDeductionData[i].amount) < 0) {\n                    AllowanceDeductionRow = new ConcretePayrollDeductionsRow()\n                    AllowanceDeductionRow.Amount = parseFloat(ExtraEarningDeductionData[i].amount)\n                    AllowanceDeductionRow.Description = ExtraEarningDeductionData[i].description\n                    AllowanceDeductionRow.DeductionCode = ExtraEarningDeductionData[i].code\n                    ExtraDeductionList.push(AllowanceDeductionRow)\n                }\n            }\n            this.form.PayrollEarnings.value = ExtraEarningList\n            this.form.PayrollDeductions.value = ExtraDeductionList\n        }\n        this.form.EpfWages.value = $('#TotalEPF').val()\n        this.form.HrdfWages.value = $('#TotalHRD').val()\n        this.form.SocsoWages.value = $('#TotalSOCSO').val()\n        this.form.EisWages.value = $('#TotalEIS').val()\n        this.form.EmployeeCp38.value = $('#Cp38').val()\n        this.form.NPLDaily.value = $(\"#NplDay\").val()\n        this.form.NPLHourly.value = $(\"#NplHr\").val()\n        this.form.AbsentDaily.value = $(\"#AbsentDay\").val()\n        this.form.OtOne.value = $('#OtOneTime').val()\n        this.form.OtOnePointFive.value = $('#OtOnePointFiveTime').val()\n        this.form.OtTwo.value = $('#OtTwoTime').val()\n        this.form.EarlyLeaving.value = $('#EarlyLeavingMinutes').val()\n        this.form.LateArrival.value = $('#LateArrivalMinutes').val()\n        this.form.FlatOt.value = parseFloat(document.getElementById('Ot1.0x').textContent)\n        this.form.OtOnePointFiveRate.value = parseFloat(document.getElementById('Ot1.5x').textContent)\n        this.form.OtTwoRate.value = parseFloat(document.getElementById('Ot2.0x').textContent)\n\n        var self = this\n        function toBoolean(value) {\n            return value === \"true\";\n        }\n\n        if (this.isNew()) {\n            this.form.SeperateBonus.value = this.SeperateBonus\n            this.form.SeperateIncentive.value = this.SeperateBonus\n            this.form.AnnualizedBonus.value = this.AnnualizedBonus\n            this.form.AnnualizedIncentive.value = this.AnnualizedIncentive\n        }\n\n        this.form.EmployeePCB.value = $(\"#PCB\").val()\n        this.form.EmployeeEIS.value = $(\"#EmployeeEIS\").val()\n        this.form.EmployeeEPF.value = $(\"#EmployeeEPF\").val()\n        this.form.EmployeeSOCSO.value = $(\"#EmployeeSOCSO\").val()\n        this.form.EmployerEIS.value = $(\"#EmployerEIS\").val()\n        this.form.EmployerEPF.value = $(\"#EmployerEPF\").val()\n        this.form.EmployerHRDF.value = $(\"#HRD\").val()\n        this.form.EmployerSOCSO.value = $(\"#EmployerSOCSO\").val()\n        this.form.NPLDailyRate.value = parseFloat($(\"#NplDayRate\").text())\n        this.form.NPLHourlyRate.value = parseFloat($(\"#NplHrRate\").text())\n        this.form.AbsentDailyRate.value = parseFloat($(\"#AbsentDayRate\").text())\n\n\n\n        this.form.EarlyLeavingRate.value = parseFloat($(\"#EarlyLeavingRate\").text())\n        this.form.LateArrivalRate.value = parseFloat($(\"#LateArrivalRate\").text())\n\n\n        let MoneyClaimingBody = document.getElementById(\"MoneyClaimingBody\");\n        let MoneyClaimingRows = MoneyClaimingBody.querySelectorAll(\"tr\");\n        if (MoneyClaimingRows.length) {\n            let MoneyClaimingList: any[] = [];\n            let MoneyClaimingData = Array.from(MoneyClaimingRows).map(row => {\n                let cells = row.querySelectorAll(\"td\");\n                return {\n                    ClaimingCategory: cells[0].innerText,    // e.g., \"Director Fee\"\n                    description: cells[1].innerText,          // e.g., \"111\"\n                    amount: cells[2].innerText,       // e.g., \"100\"\n                    eis: cells[2].getAttribute(\"eis\"), // e.g., \"false\"\n                    epf: cells[2].getAttribute(\"epf\"), // e.g., \"false\"\n                    hrdf: cells[2].getAttribute(\"hrdf\"), // e.g., \"false\"\n                    pcb: cells[2].getAttribute(\"pcb\"), // e.g., \"false\"\n                    socso: cells[2].getAttribute(\"socso\") // e.g., \"false\"\n                };\n            });\n\n            for (i = 0; i < MoneyClaimingData.length; i++) {\n                var MoneyClaimingRow = new ConcreteMoneyClaimApplicationRow()\n                MoneyClaimingRow.ClaimAmount = parseFloat(MoneyClaimingData[i].amount)\n                MoneyClaimingRow.Description = MoneyClaimingData[i].description\n                MoneyClaimingRow.ClaimingCategory = MoneyClaimingData[i].ClaimingCategory\n                MoneyClaimingRow.SubjectionPcb = toBoolean(MoneyClaimingData[i].pcb)\n                MoneyClaimingRow.SubjectionEis = toBoolean(MoneyClaimingData[i].eis)\n                MoneyClaimingRow.SubjectionHrdf = toBoolean(MoneyClaimingData[i].hrdf)\n                MoneyClaimingRow.SubjectionSocso = toBoolean(MoneyClaimingData[i].socso)\n                MoneyClaimingRow.SubjectionEpf = toBoolean(MoneyClaimingData[i].epf)\n                MoneyClaimingList.push(MoneyClaimingRow)\n            }\n            this.form.PaidMoneyClaimingList.value = MoneyClaimingList\n\n        }\n\n        let AllowanceDeductionBody = document.getElementById(\"AllowanceDeductionBody\");\n        let AllowanceDeductionRows = AllowanceDeductionBody.querySelectorAll(\"tr\");\n        if (AllowanceDeductionRows.length) {\n            let AllowanceList: any[] = [];\n            let DeductionList: any[] = [];\n\n            let AllowanceDeductionData = Array.from(AllowanceDeductionRows).map(row => {\n                let cells = row.querySelectorAll(\"td\");\n                return {\n                    code: cells[0].innerText,          // e.g., \"111\"\n                    description: cells[1].innerText,    // e.g., \"Director Fee\"\n                    amount: cells[2].innerText,       // e.g., \"100\"\n                    eis: cells[2].getAttribute(\"eis\"), // e.g., \"false\"\n                    epf: cells[2].getAttribute(\"epf\"), // e.g., \"false\"\n                    hrdf: cells[2].getAttribute(\"hrdf\"), // e.g., \"false\"\n                    pcb: cells[2].getAttribute(\"pcb\"), // e.g., \"false\"\n                    socso: cells[2].getAttribute(\"socso\") // e.g., \"false\"\n                };\n            });\n            let allowanceIndex = 0, deductionIndex = 0\n            for (i = 0; i < AllowanceDeductionData.length; i++) {\n                var AllowanceDeductionRow\n                if (parseFloat(AllowanceDeductionData[i].amount) > 0) {\n                    AllowanceDeductionRow = new ConcreteEmployeeAllowanceRow()\n                    AllowanceDeductionRow.AllowanceId = self.AllowanceId[allowanceIndex]\n                    AllowanceDeductionRow.AllowanceAmount = parseFloat(AllowanceDeductionData[i].amount)\n                    AllowanceDeductionRow.Description = AllowanceDeductionData[i].description\n                    AllowanceDeductionRow.SubjectionPcb = toBoolean(AllowanceDeductionData[i].pcb)\n                    AllowanceDeductionRow.SubjectionEis = toBoolean(AllowanceDeductionData[i].eis)\n                    AllowanceDeductionRow.SubjectionHrdf = toBoolean(AllowanceDeductionData[i].hrdf)\n                    AllowanceDeductionRow.SubjectionSocso = toBoolean(AllowanceDeductionData[i].socso)\n                    AllowanceDeductionRow.SubjectionEpf = toBoolean(AllowanceDeductionData[i].epf)\n                    AllowanceDeductionRow.code = AllowanceDeductionData[i].code\n                    allowanceIndex+=1\n                    AllowanceList.push(AllowanceDeductionRow)\n                }\n                else if (parseFloat(AllowanceDeductionData[i].amount) < 0) {\n                    AllowanceDeductionRow = new ConcreteFixedDeductionRow()\n                    AllowanceDeductionRow.DeductionId = self.DeductionId[deductionIndex]\n\n                    AllowanceDeductionRow.DeductionAmount = parseFloat(AllowanceDeductionData[i].amount)\n                    AllowanceDeductionRow.Description = AllowanceDeductionData[i].description\n                    AllowanceDeductionRow.code = AllowanceDeductionData[i].code\n                    DeductionList.push(AllowanceDeductionRow)\n                    deductionIndex+=1\n                }\n            }\n            this.form.AllowanceList.value = AllowanceList\n            this.form.DeductionList.value = DeductionList\n        }\n        self.form.Nett.value = $('#NettWage').val()\n        self.form.Earnings.value = $('#GrossWage').val()\n        self.form.Deduction.value = self.form.Earnings.value - self.form.Nett.value \n\n        super.save_submitHandler(response)\n        \n    }\n\n}\n\nclass ConcreteMoneyClaimApplicationRow extends PayslipPaidMoneyClaimingRow {\n    constructor() {\n        super();\n    }\n}\n\nclass ConcretePayrollDeductionsRow extends PayrollDeductionsRow {\n    constructor() {\n        super();\n    }\n}\nclass ConcretePayrollEarningsRow extends PayrollEarningsRow {\n    constructor() {\n        super();\n    }\n}\nclass ConcreteEmployeeAllowanceRow extends PayslipPaidOneTimeAllowanceRow {\n    constructor() {\n        super();\n    }\n}\nclass ConcreteFixedDeductionRow extends PayslipDeductedOneTimeDeductionsRow {\n    constructor() {\n        super();\n    }\n}\n", "import { Decorators, EntityDialog, EditorUtils, ListResponse, Criteria } from '@serenity-is/corelib';\nimport { PayrollGeneratingWizardForm, PayrollGeneratingWizardRow, PayrollGeneratingWizardService, PayrollService } from '../../../ServerTypes/PayrollSettings';\nimport { alertDialog, isEmptyOrNull } from '@serenity-is/corelib/q';\nimport { confirm, serviceCall, notifySuccess, notifyError } from '@serenity-is/corelib/q';\nimport {  Select2Editor } from '@serenity-is/corelib';\nimport { EmployeeProfileRow, EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\nimport { PayrollDialog } from '../Payroll/PayrollDialog';\nimport { PayrollWizDialog } from '../PayrollWiz/PayrollWizDialog';\nimport { PayrollWizardDialog } from '../PayrollWizard/PayrollWizardDialog';\nimport { CompanySettingsService } from '../../../ServerTypes/CompanySettings';\nimport { AnnouncementWizardService } from '../../../ServerTypes/Announcement';\n\n@Decorators.registerClass('HRMSoftware.PayrollSettings.PayrollGeneratingWizardDialog')\nexport class PayrollGeneratingWizardDialog extends EntityDialog<PayrollGeneratingWizardRow, any> {\n    protected getFormKey() { return PayrollGeneratingWizardForm.formKey; }\n    protected getRowDefinition() { return PayrollGeneratingWizardRow; }\n    protected getService() { return PayrollGeneratingWizardService.baseUrl; }\n    public EmployeeData: any[];\n    public PayrollData: any[];\n\n    public dateString: string;\n    constructor() {\n        super();\n        var criteria: any;\n\n        EmployeeProfileService.List({\n            Criteria: Criteria.and(criteria, [[EmployeeProfileRow.Fields.Retired], '=', '0'],\n                [[EmployeeProfileRow.Fields.Terminated], '=', '0'],\n                [[EmployeeProfileRow.Fields.Resigned], '=', '0']\n            )\n        }, response => {\n            this.EmployeeData = response.Entities\n        })\n\n\n\n    }\n    protected form = new PayrollGeneratingWizardForm(this.idPrefix);\n    public SearchCallback(): void {\n        var self = this\n        var PayMonthElement = document.getElementById(this.idPrefix + 'PayMonth');\n        var PayYearElement = document.getElementById(this.idPrefix + 'PayYear');\n        var OccupationListElement = document.getElementById(this.idPrefix + 'OccupationList');\n        var DepartmentListElement = document.getElementById(this.idPrefix + 'DepartmentList');\n        var DivisionListElement = document.getElementById(this.idPrefix + 'DivisionList');\n        var JobGradeListElement = document.getElementById(this.idPrefix + 'JobGradeList');\n        var SectionListElement = document.getElementById(this.idPrefix + 'SectionList');\n        if (isEmptyOrNull($(PayMonthElement).val()) || isEmptyOrNull($(PayYearElement).val())) {\n            this.form.EmployeeRowList.value = this.form.EmployeeRowListBuffer.value = ''\n            return\n        }\n        function parseListFromElement(element) {\n            const valueStr = $(element).val();\n            return valueStr.length\n                ? valueStr.split(',').map(number => parseInt(number, 10))\n                : [];\n        }\n        // Use the utility function for each list\n        const JobGradeList = parseListFromElement(JobGradeListElement);\n        const DivisionList = parseListFromElement(DivisionListElement);\n        const DepartmentList = parseListFromElement(DepartmentListElement);\n        const OccupationList = parseListFromElement(OccupationListElement);\n        const SectionList = parseListFromElement(SectionListElement);\n        // Convert the lists to Sets for faster lookup\n        const jobGradeSet = new Set(JobGradeList);\n        const divisionSet = new Set(DivisionList);\n        const departmentSet = new Set(DepartmentList);\n        const occupationSet = new Set(OccupationList);\n        const sectionSet = new Set(SectionList);\n\n        for (let employee of self.EmployeeData) {\n            const { JobGradeID, DivisionID, DepartmentID, OccupationID, SectionID, Id } = employee;\n            console.log(employee)\n\n            // Check if the employee matches any criteria\n            const found =\n                jobGradeSet.has(JobGradeID) ||\n                divisionSet.has(DivisionID) ||\n                departmentSet.has(DepartmentID) ||\n                occupationSet.has(OccupationID) ||\n                sectionSet.has(SectionID);\n\n            let employeeRowListBuffer = self.form.EmployeeRowListBuffer.value;\n            let employeeRowList = employeeRowListBuffer ? employeeRowListBuffer.split(',').map(Number) : [];\n\n            if (!found) {\n                // Remove employee if not found\n                employeeRowList = employeeRowList.filter(num => num !== Id);\n            } else {\n                // Add employee if not already present\n                if (!employeeRowList.includes(Id)) {\n                    employeeRowList.push(Id);\n                }\n            }\n            // Update the buffer value\n            self.form.EmployeeRowListBuffer.value = employeeRowList.join(',');\n        }\n        self.form.EmployeeRowList.value = self.form.EmployeeRowListBuffer.value\n\n    }\n\n    public counter: number;\n    public WaitingCounter: number;\n    public SearchEmployeeCallback(): void\n    {\n        var self = this\n        var EmployeeRowIdListElement = document.getElementById(this.idPrefix + 'EmployeeRowListBuffer');\n        var EmployeeRowIdString = $(EmployeeRowIdListElement).val()\n        let numbers = EmployeeRowIdString.split(',')\n        let EmployeeRowIdList = [];\n        if (EmployeeRowIdString.length)\n            numbers.forEach(number => {\n                EmployeeRowIdList.push(parseInt(number)); // Convert string to integer and push to numberList\n            })\n        var PayMonthElement = document.getElementById(this.idPrefix + 'PayMonth')\n        var PayYearElement = document.getElementById(this.idPrefix + 'PayYear')\n        var PayYear = $(PayYearElement).val()\n        var PayMonth = $(PayMonthElement).val()\n       \n        let EmployeeRowList = [];\n        var EmployeeRowString = self.form.EmployeeRowListBuffer.value\n        let EmployeeRowListBuffer = EmployeeRowString.split(',')\n        EmployeeRowListBuffer.forEach(number => {\n            EmployeeRowList.push(parseInt(number)); // Convert string to integer and push to numberList\n        })\n        /*\n        PayrollService.List({\n        }, response => {\n\n            for (var index in response.Entities) {\n                var currentEmployeeRowId = response.Entities[index].EmployeeRowId\n                var currentPayMonth = response.Entities[index].PayMonth\n                var currentPayYear = response.Entities[index].PayYear\n                if (EmployeeRowIdList.indexOf(currentEmployeeRowId) !== -1 && currentPayMonth == PayMonth && currentPayYear == PayYear) {\n                    EmployeeRowString = self.form.EmployeeRowListBuffer.value\n                    if (EmployeeRowString != \"\") {\n                        let EmployeeRowListBuffer = EmployeeRowString.split(',')\n                        EmployeeRowListBuffer.forEach(number => {\n                            EmployeeRowList.push(parseInt(number)); // Convert string to integer and push to numberList\n                        })\n                        EmployeeRowList = EmployeeRowList.filter(number => number !== response.Entities[index].EmployeeRowId);\n                        self.form.EmployeeRowListBuffer.value = EmployeeRowList.join(',')\n                    }\n                }\n            }\n            self.form.EmployeeRowList.value = EmployeeRowList.join(',')\n        })\n        */\n    }\n    protected getToolbarButtons() {\n        var self = this;\n        var buttons = super.getToolbarButtons();\n        $(`#${this.idPrefix}Toolbar`).addClass(\"ms-auto\")\n        buttons.push(\n            {\n                title: \"Generate Payslips\",\t// *** Get button text from translation\n                cssClass: 'text-bg-success p-2 ml-auto',\n                icon: 'fas fa-hat-wizard text-green',\n                onClick: () => {\n                    if (isEmptyOrNull(self.form.PayDate.value)) {\n                        notifyError('Please enter pay date');\n                        return\n                    }\n                    if (isEmptyOrNull(self.form.PayMonth.value)) {\n                        notifyError('Please enter pay Month');\n                        return\n                    }\n                    if (isEmptyOrNull(self.form.PayYear.value)) {\n                        notifyError('Please enter pay Year');\n                        return;\n                    }\n                    if (isEmptyOrNull(self.form.PayPeriodEnd.value)) {\n                        notifyError('Please enter pay period end');\n                        return\n                    }\n                    if (isEmptyOrNull(self.form.PayPeriodStart.value)) {\n                        notifyError('Please enter pay period start');\n                        return\n                    }\n                    var EmployeeRowIdString = self.form.EmployeeRowList.value\n                    let EmployeeRowIdList = [];\n                    let numbers = EmployeeRowIdString.split(',')\n                    if (EmployeeRowIdString.length)\n                        numbers.forEach(number => {\n                            EmployeeRowIdList.push(parseInt(number)); // Convert string to integer and push to numberList\n                        })\n                    self.counter = 0\n                    self.WaitingCounter = EmployeeRowIdList.length\n                    confirm(//  the user confirm dont want to download\n                        \"Are you sure to generate payslip of these employees?\",\n                        () => {\n                            function handleEmployee(EmployeeRowId) {\n                                return new Promise<void>((resolve) => {\n                                    let PayrollDlg = new PayrollDialog(\n                                        1,\n                                        EmployeeRowId,\n                                        self.form.PayYear.value,\n                                        self.form.PayMonth.value,\n                                        self.form.PayDate.value,\n                                        self.form.PayPeriodStart.value,\n                                        self.form.PayPeriodEnd.value\n                                    );\n                                    PayrollDlg.element.on(\"dialogopen\", function () {\n                                        $(\".s-PayrollDialog\").hide()\n                                    });\n                                    PayrollDlg.dialogOpen();\n                                    PayrollDlg.element.on(\"dialogclose\", function () {\n                                        self.counter += 1;\n                                        if (self.counter == EmployeeRowIdList.length)\n                                            notifySuccess(\"Payslip generated\")\n                                        resolve();\n                                    });\n                                });\n                            }\n                            function handleDownload() {\n                                return new Promise<void>((resolve) => {\n                                    var DownloadWiz = new PayrollWizardDialog(\n                                        EmployeeRowIdString,\n                                        self.form.PayMonth.value,\n                                        self.form.PayYear.value\n                                    );\n                                    DownloadWiz.dialogOpen();\n                                    DownloadWiz.element.on(\"dialogclose\", function () {\n                                        self.SearchCallback();\n                                        resolve();\n                                    });\n                                });\n                            }\n                            async function processEmployees(EmployeeRowIdList) {\n                                for (let index = 0; index < EmployeeRowIdList.length; index++) {\n                                   \n                                    await handleEmployee(EmployeeRowIdList[index]);\n                                }\n                                if (self.form.Download.value == true) \n                                    await handleDownload();\n                                 else \n                                    self.SearchCallback();\n                            }\n                            console.log(EmployeeRowIdList)\n                            processEmployees(EmployeeRowIdList)\n                     \n                            if (self.form.Download.value == true)\n                                notifySuccess(\"Payslip downloaded\")\n\n                            self.form.EmployeeRowListBuffer.value = self.form.EmployeeRowList.value = ''\n                            \n\n\n                        }\n                    )\n                },\n            }\n        );\n        return buttons\n    }\n    public dialogOpen(asPanel?: boolean): void {\n        super.dialogOpen();\n        var self = this;\n\n        serviceCall<ListResponse<any>>({\n            service: AnnouncementWizardService.baseUrl + '/GetTodayDateTime',\n            method: \"GET\",\n            data: {\n            },\n            async: false,\n            onSuccess: (response) => {\n                self.dateString = response\n                CompanySettingsService.List({\n                }, response => {\n                    var today = new Date(self.dateString)\n                    var todayMonth = today.getMonth()\n                    var todayYear = today.getFullYear()\n                    var PayDate = 0\n                    for (var index in response.Entities) {\n                        if (response.Entities[index].IsActive == 1) {\n                            PayDate = response.Entities[index].PayDay\n                            break\n                        }\n                    }\n                    var DateObj = new Date(todayYear, todayMonth, PayDate)\n                    var DateObjYear = DateObj.getFullYear().toString()\n                    var DateObjMonth = (DateObj.getMonth() + 1).toString()\n                    var DateObjDay = DateObj.getDate().toString()\n                    todayMonth = todayMonth+1\n                    var LastMonth = new Date(todayYear, todayMonth, PayDate)\n                    LastMonth.setDate(LastMonth.getDate() + 1);\n                    var LastMonthObjYear = LastMonth.getFullYear().toString()\n                    var LastMonthObjMonth = (LastMonth.getMonth() + 1).toString()\n                    var LastMonthObjDay = LastMonth.getDate().toString()\n                    var LatestDateFormat = DateObjMonth.padStart(2, '0') + '/' + DateObjDay.padStart(2, '0') + '/' + DateObjYear\n                    var LastMonthFormat = LastMonthObjMonth.padStart(2, '0') + '/' + LastMonthObjDay.padStart(2, '0') + '/' + LastMonthObjYear\n                    if (this.isNew()) {\n                        self.form.PayDate.value = LatestDateFormat\n                        self.form.PayPeriodEnd.value = LatestDateFormat\n                        self.form.PayPeriodStart.value = LastMonthFormat\n                    }\n                })\n            }\n        })\n\n\n\n\n        this.saveAndCloseButton.hide()\n        this.editButton.hide()\n        this.applyChangesButton.hide()\n        this.deleteButton.hide()\n        this.localizationButton.hide()\n        this.cloneButton.hide()\n        this.undeleteButton.hide()\n        //EditorUtils.setReadonly(this.form.EmployeeRowList.element, true);\n    \n        var PayMonthElement = document.getElementById(this.idPrefix + 'PayMonth')\n        var PayYearElement = document.getElementById(this.idPrefix + 'PayYear')\n        let PayMonthEditor = new Select2Editor($(PayMonthElement))\n        let PayYearEditor = new Select2Editor($(PayYearElement))\n        const months: string[] = [\n            'January',   // 0\n            'February',  // 1\n            'March',     // 2\n            'April',     // 3\n            'May',       // 4\n            'June',      // 5\n            'July',      // 6\n            'August',    // 7\n            'September', // 8\n            'October',   // 9\n            'November',  // 10\n            'December'   // 11\n        ];\n        var today = new Date(self.dateString)\n        var todayYear = today.getFullYear()\n        var todayMonth = today.getMonth()\n        // Example usage:\n        for (let i = 0; i < months.length; i++) \n            PayMonthEditor.addItem({ id: (i).toString(), text: (months[i]).toString(), }); // 8am - 6pm , will consider lates\n        \n        PayMonthEditor.set_value(todayMonth.toString())\n        for (let i = -1; i < 2; i++) \n            PayYearEditor.addItem({ id: (todayYear + i).toString(), text: (todayYear + i).toString(), }); // 8am - 6pm , will consider lates\n        \n        PayYearEditor.set_value(todayYear.toString())\n\n\n        var SectionListElement = document.getElementById(this.idPrefix + 'SectionList');\n        var OccupationListElement = document.getElementById(this.idPrefix + 'OccupationList');\n        var DepartmentListElement = document.getElementById(this.idPrefix + 'DepartmentList');\n        var DivisionListElement = document.getElementById(this.idPrefix + 'DivisionList');\n        var JobGradeListElement = document.getElementById(this.idPrefix + 'JobGradeList');\n        var PayPeriodStartElement = document.getElementById(this.idPrefix + 'PayPeriodStart')\n        var PayPeriodEndElement = document.getElementById(this.idPrefix + 'PayPeriodEnd')\n        var EmployeeRowListElement = document.getElementById(this.idPrefix + 'EmployeeRowList')\n       \n        console.log(this.idPrefix)\n        $(`#s2id_${this.idPrefix}EmployeeRowList`).on('click', async function (e) {\n            $(`.select2-drop`).hide()\n            return\n\n        })\n\n\n        $(PayMonthEditor).on('change', async function () {\n            console.log(\"haha\")\n            if (isEmptyOrNull($(PayMonthElement).val()) || isEmptyOrNull($(PayYearElement).val())) \n                self.form.EmployeeRowList.value = \"\"\n            self.SearchCallback();\n            //self.SearchEmployeeCallback();\n        })\n        $(PayYearEditor).on('change', async function () {\n            if (isEmptyOrNull($(PayMonthElement).val()) || isEmptyOrNull($(PayYearElement).val())) \n                self.form.EmployeeRowList.value = \"\"\n            \n            self.SearchCallback();\n            //self.SearchEmployeeCallback();\n        })\n        $(OccupationListElement).on('change', async function () {\n            self.SearchCallback()\n          //  self.SearchEmployeeCallback();\n\n        })\n        $(DivisionListElement).on('change', async function () {\n            self.SearchCallback();\n           // self.SearchEmployeeCallback();\n\n        })\n        $(JobGradeListElement).on('change', async function () {\n            self.SearchCallback();\n            //self.SearchEmployeeCallback();\n        })\n        $(DepartmentListElement).on('change', async function () {\n            self.SearchCallback();\n            //self.SearchEmployeeCallback();\n        })\n        $(SectionListElement).on('change', async function () {\n            self.SearchCallback();\n            //self.SearchEmployeeCallback();\n\n        })\n   \n        $(PayPeriodStartElement).on('change', async function () {\n            //                    self.GeneratePayrollTable()\n            if (self.form.PayPeriodStart.valueAsDate > self.form.PayPeriodEnd.valueAsDate) {\n                alertDialog('Pay period start cannot be ahead of pay period end')\n                self.form.PayPeriodStart.value = ''\n                return\n            }\n\n        })\n        $(PayPeriodEndElement).on('change', async function () {\n            // self.GeneratePayrollTable()\n            if (self.form.PayPeriodStart.valueAsDate > self.form.PayPeriodEnd.valueAsDate) {\n                alertDialog('Pay period start cannot be ahead of pay period end')\n                self.form.PayPeriodEnd.value = ''\n                return\n            }\n        })\n    }\n    protected getDialogOptions() {\n        let opt = super.getDialogOptions()\n        opt.width = opt.width + 100\n        return opt\n    }\n}"],
  "mappings": "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",
  "names": ["import_corelib", "import_q", "import_q", "PayrollDialog", "Wiz", "WizEmployeeRowId", "PayYear", "PayMonth", "PayDateWiz", "PayPeriodStart", "PayPeriodEnd", "PayrollForm", "self", "PayrollService", "response", "PayrollRow", "opt", "ot", "tabId", "node3", "divNode", "node4", "textnode", "node5", "PayRollGrid", "TableNode", "TableHead", "TableBody", "theadnode", "TableFoot", "header1", "header2", "header3", "header4", "textnode1", "textnode2", "textnode3", "textnode4", "EmployerContributionsNode", "EmployerContributionsTableHead", "EmployerContributionsTableBody", "EmployerContributionsTableFoot", "EmployerContributionsDescriptionNode", "EmployerContributionsHeader1", "EmployerContributionsHeader2", "EmployerContributionstextnode1", "EmployerContributionstextnode2", "div1", "NplAbsentTableContainer", "OvertimeTableContainer", "EarlyLeavingTableContainer", "NplAbsentTable", "NplAbsentTableHead", "tableData", "NplAbsentTableBody", "row", "tr", "OvertimeTable", "OvertimeTableHead", "OtData", "OvertimeTableBody", "EarlyLeavingTable", "EarlyLeavingTableHead", "ShiftData", "EarlyLeavingTableBody", "div2", "AllowanceDeductionContainer", "AllowanceDeductionTable", "AllowanceDeductionHead", "AllowanceDeductionBody", "MoneyClaimingContainer", "MoneyClaimingTable", "MoneyClaimingHead", "MoneyClaimingBody", "EarningDeductionContainer", "EarningDeductionTable", "EarningDeductionHead", "EarningDeductionBody", "div3", "htmlContent1", "htmlContent2", "Container2", "govPayment", "e", "__async", "nplDates", "PcbSubjectionService", "index", "dict", "keys", "j", "key", "NewKey", "EpfSubjectionService", "BufferDict", "EisSubjectionService", "HrdfSubjectionService", "SocsoSubjectionService", "Overtime", "Eis", "Epf", "Hrdf", "Pcb", "Socso", "PayrollSettingsService", "today", "birthday", "age", "lastBirthday", "timeSinceLastBirthday", "nextBirthday", "yearLengthInMilliseconds", "fractionalAge", "asPanel", "isValidDate", "dateStr", "date", "year", "month", "day", "__name", "gettingDatestring", "AnnouncementWizardService", "CompanySettingsService", "todayMonth", "todayYear", "dateFormat", "DateObj", "DateObjYear", "DateObjMonth", "DateObjDay", "LastMonth", "LastMonthObjYear", "LastMonthObjMonth", "LastMonthObjDay", "LatestDateFormat", "LastMonthFormat", "EmployeeRowIdValue", "ElementsArray", "EmployeeProfileService", "PayPeriodStartElement", "PayPeriodEndElement", "EmployeeRowIdElement", "PayMonthElement", "PayYearElement", "HrdfClass", "EisClass", "SocsoClass", "EpfClass", "MaritalStatusElement", "WorkingSpouse", "ChildrenUnderEighteen", "ChildrenInUniversity", "DisabledChild", "DisabledChildInUniversity", "PayMonthEditor", "PayYearEditor", "months", "i", "EmployeeRowIdEditor", "listOfDicts", "rowBuffer", "info", "bufferRow", "BasicPay", "totalNplAbsent", "totalTimeDeduction", "OtElement", "totalOt", "totalNplTimeDeduction", "totalAllowance", "totalDeductions", "subjectEis", "subjectEpf", "subjectHrdf", "subjectPcb", "subjectSocso", "BonusEis", "BonusEpf", "BonusHrdf", "BonusPcb", "BonusSocso", "IncentiveEis", "IncentiveEpf", "IncentiveHrdf", "IncentivePcb", "IncentiveSocso", "PcbOffset", "amountCell", "amount", "WorkSpouse", "calculatingGovPayment", "EmployeeEPF", "EmployeeEIS", "EmployeePCB", "EmployeeSOCSO", "EmployerEPF", "EmployerEIS", "EmployerHRDF", "EmployerSOCSO", "NplDayRate", "NplHrRate", "AbsentDayRate", "NplDay", "NplHr", "AbsentDay", "Ot1xRate", "Ot1_5xRate", "Ot2xRate", "OtOneTime", "OtOnePointFiveTime", "OtTwoTime", "EarlyLeavingRate", "LateArrivalRate", "EarlyLeavingMinutes", "LateArrivalMinutes", "Bonus", "Incentive", "TotalAllowance", "TotalDeduction", "TotalOt", "GrossWages", "totalEmployeeContrib", "totalEmployerContrib", "NettWage", "setDate", "isOverlap", "start1", "end1", "start2", "end2", "startDate1", "endDate1", "startDate2", "endDate2", "PayrollEarningsNode", "PersonNameElement", "ExternalDeductions", "ExternalEarnings", "EarningsString", "DeductionsString", "FullAttendance", "HaveUnpaidLeave", "HaveHospitalisationLeave", "HaveSickLeave", "HaveAnnualLeave", "HaveMaternityLeave", "HavePaternityLeave", "HaveMarriageLeave", "HaveCompassionateLeave", "HaveEmergencyLeave", "HaveGatepassLeave", "NoLate", "NoAbsence", "NoEarlyLeaving", "PayrollDate", "wait", "criteria", "EmployeeCp38Service", "EmployeeCp38Row", "TotalCp38", "res", "EmployeeBonusService", "EmployeeBonusRow", "TotalBonus", "EmployeeIncentiveService", "EmployeeIncentiveRow", "TotalIncentive", "LeaveApplicationService", "LeaveApplicationRow", "leaveReasonId", "roundedOtRate", "otRate1_5x", "otRate2_0x", "EmployeeName", "EmployeeAllowanceService", "EmployeeAllowanceRow", "timestamp", "rows", "numRows", "OTApplicationService", "OTApplicationRow", "WeekendTime", "WeekdayTime", "PublicHolidayTime", "TwoTimes", "OnePointFiveTimes", "data", "NoPaidLeaveService", "NoPaidLeaveRow", "NoPaidLeaveDays", "FixedDeductionService", "FixedDeductionRow", "TotalDeductions", "MoneyClaimApplicationService", "MoneyClaimApplicationRow", "EmployeeEarlyLeavingService", "EmployeeEarlyLeavingRow", "EmployeeLateService", "EmployeeLateRow", "LateMinutes", "arrayOfDict", "input", "extractedText", "trimmedString", "buttons", "CssLink", "PrevLength", "ExtraEarningDeductionRows", "ExtraEarningList", "ExtraDeductionList", "ExtraEarningDeductionData", "cells", "AllowanceDeductionRow", "ConcretePayrollEarningsRow", "toBoolean", "ConcretePayrollDeductionsRow", "value", "MoneyClaimingRows", "MoneyClaimingList", "MoneyClaimingData", "MoneyClaimingRow", "ConcreteMoneyClaimApplicationRow", "AllowanceDeductionRows", "AllowanceList", "DeductionList", "AllowanceDeductionData", "allowanceIndex", "deductionIndex", "ConcreteEmployeeAllowanceRow", "ConcreteFixedDeductionRow", "__decorateClass", "PayslipPaidMoneyClaimingRow", "PayrollDeductionsRow", "PayrollEarningsRow", "PayslipPaidOneTimeAllowanceRow", "PayslipDeductedOneTimeDeductionsRow", "import_corelib", "import_q", "import_corelib", "PayrollGeneratingWizardDialog", "PayrollGeneratingWizardForm", "criteria", "EmployeeProfileService", "EmployeeProfileRow", "response", "PayrollGeneratingWizardRow", "PayrollGeneratingWizardService", "self", "PayMonthElement", "PayYearElement", "OccupationListElement", "DepartmentListElement", "DivisionListElement", "JobGradeListElement", "SectionListElement", "parseListFromElement", "element", "valueStr", "number", "__name", "JobGradeList", "DivisionList", "DepartmentList", "OccupationList", "SectionList", "jobGradeSet", "divisionSet", "departmentSet", "occupationSet", "sectionSet", "employee", "JobGradeID", "DivisionID", "DepartmentID", "OccupationID", "SectionID", "Id", "found", "employeeRowListBuffer", "employeeRowList", "num", "EmployeeRowIdListElement", "EmployeeRowIdString", "numbers", "EmployeeRowIdList", "PayYear", "PayMonth", "EmployeeRowList", "EmployeeRowString", "buttons", "handleEmployee", "EmployeeRowId", "resolve", "PayrollDlg", "PayrollDialog", "handleDownload", "DownloadWiz", "PayrollWizardDialog", "processEmployees", "__async", "index", "asPanel", "AnnouncementWizardService", "CompanySettingsService", "today", "todayMonth", "todayYear", "PayDate", "DateObj", "DateObjYear", "DateObjMonth", "DateObjDay", "LastMonth", "LastMonthObjYear", "LastMonthObjMonth", "LastMonthObjDay", "LatestDateFormat", "LastMonthFormat", "PayMonthEditor", "PayYearEditor", "months", "i", "PayPeriodStartElement", "PayPeriodEndElement", "EmployeeRowListElement", "e", "opt", "__decorateClass"]
}
