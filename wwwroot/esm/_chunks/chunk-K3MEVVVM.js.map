{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/TrainingManagement/ProgramSession/ProgramSessionApplyDialog.ts"],
  "sourcesContent": ["import {Decorators, EditorUtils, EntityDialog} from '@serenity-is/corelib';\nimport {ProgramSessionApplyForm, ProgramSessionRow, ProgramSessionService, ProgramFlowType, ProgramGradeType} from '../../../ServerTypes/TrainingManagement';\nimport {MasterProgramStatusType} from \"@/ServerTypes/TrainingManagement/MasterProgramStatusType\";\n\n@Decorators.registerClass('HRMSoftware.TrainingManagement.ProgramSessionApplyDialog')\nexport class ProgramSessionApplyDialog extends EntityDialog<ProgramSessionRow, any> {\n    protected getFormKey() {\n        return ProgramSessionApplyForm.formKey;\n    }\n\n    protected getRowDefinition() {\n        return ProgramSessionRow;\n    }\n\n    protected getService() {\n        return ProgramSessionService.baseUrl;\n    }\n\n    protected form = new ProgramSessionApplyForm(this.idPrefix);\n\n    public ReadOnly: boolean;\n\n    constructor(ReadOnly = true) {\n        super();\n        this.ReadOnly = ReadOnly;\n    }\n\n    public dialogOpen(asPanel?: boolean): void {\n        super.dialogOpen(asPanel);\n        \n        this.form.FlowList.value = [{\n            'FlowType': ProgramFlowType.Attendance,\n            'GradeType': ProgramGradeType.Na,\n            'Remark': '',\n        }];\n        \n        let DateTba = $('#' + this.idPrefix + 'DateTba');\n        DateTba.on('change', (Event) => {\n            if (this.form.DateTba.value) {\n                EditorUtils.setReadonly(this.form.OneDay.element, true);\n                EditorUtils.setReadonly(this.form.StartDate.element, true);\n                EditorUtils.setReadonly(this.form.EndDate.element, true);\n            } else {\n                EditorUtils.setReadonly(this.form.OneDay.element, false);\n                EditorUtils.setReadonly(this.form.StartDate.element, false);\n                EditorUtils.setReadonly(this.form.EndDate.element, this.form.OneDay.value);\n            }\n        })\n\n        let OneDay = $('#' + this.idPrefix + 'OneDay');\n        let EndDate = $('#' + this.idPrefix + 'EndDate').parent();\n        OneDay.on('change', (Event) => {\n            EditorUtils.setReadonly(this.form.EndDate.element, this.form.OneDay.value);\n            if (this.form.OneDay.value) {\n                this.form.EndDate.value = this.form.StartDate.value;\n                EndDate.hide();\n            } else {\n                EndDate.show();\n            }\n        });\n\n        let StartDate = $('#' + this.idPrefix + 'StartDate');\n        StartDate.on('change', (Event) => {\n            if (this.form.OneDay.value) {\n                this.form.EndDate.value = this.form.StartDate.value;\n            }\n        });\n\n        $('div.field.FlowList' +\n            ' > div' +\n            ' > div.grid-container.slick-container.ltr.ui-widget.sleek-vars' +\n            ' > div.slick-viewport'\n        ).css({\n            'height': 'auto',\n            'min-height': '200px'\n        });\n\n        $('div.field.ParticipantList' +\n            ' > div' +\n            ' > div.grid-container.slick-container.ltr.ui-widget.sleek-vars' +\n            ' > div.slick-viewport'\n        ).css({\n            'height': 'auto',\n            'min-height': '200px'\n        });\n\n        $('div.field.DateTba' +\n            ' > label[title=\"Date TBA\"]' +\n            ' + input.editor.s-BooleanEditor[type=\"checkbox\"]'\n        ).css({\n            'flex': '0 0 auto'\n        });\n\n        $('div.field.OneDay' +\n            ' > label[title=\"One Day\"]' +\n            ' + input.editor.s-BooleanEditor[type=\"checkbox\"]'\n        ).css({\n            'flex': '0 0 auto'\n        });\n\n        $('#' + this.idPrefix + 'Status').parent().hide();\n        $('#' + this.idPrefix + 'Comment').parent().hide();\n    }\n\n    protected updateTitle(): void {\n        this.dialogTitle = 'Apply New One-Off Training Session';\n    }\n}"],
  "mappings": "oJAAA,IAAAA,EAAoD,SAK7C,IAAMC,EAAN,cAAwC,cAAqC,CAiBhF,YAAYC,EAAW,GAAM,CACzB,MAAM,EALV,KAAU,KAAO,IAAIC,EAAwB,KAAK,QAAQ,EAMtD,KAAK,SAAWD,CACpB,CAnBU,YAAa,CACnB,OAAOC,EAAwB,OACnC,CAEU,kBAAmB,CACzB,OAAOC,CACX,CAEU,YAAa,CACnB,OAAOC,EAAsB,OACjC,CAWO,WAAWC,EAAyB,CACvC,MAAM,WAAWA,CAAO,EAExB,KAAK,KAAK,SAAS,MAAQ,CAAC,CACxB,WACA,YACA,OAAU,EACd,CAAC,EAEa,EAAE,IAAM,KAAK,SAAW,SAAS,EACvC,GAAG,SAAWC,GAAU,CACxB,KAAK,KAAK,QAAQ,OAClB,cAAY,YAAY,KAAK,KAAK,OAAO,QAAS,EAAI,EACtD,cAAY,YAAY,KAAK,KAAK,UAAU,QAAS,EAAI,EACzD,cAAY,YAAY,KAAK,KAAK,QAAQ,QAAS,EAAI,IAEvD,cAAY,YAAY,KAAK,KAAK,OAAO,QAAS,EAAK,EACvD,cAAY,YAAY,KAAK,KAAK,UAAU,QAAS,EAAK,EAC1D,cAAY,YAAY,KAAK,KAAK,QAAQ,QAAS,KAAK,KAAK,OAAO,KAAK,EAEjF,CAAC,EAED,IAAIC,EAAS,EAAE,IAAM,KAAK,SAAW,QAAQ,EACzCC,EAAU,EAAE,IAAM,KAAK,SAAW,SAAS,EAAE,OAAO,EACxDD,EAAO,GAAG,SAAWD,GAAU,CAC3B,cAAY,YAAY,KAAK,KAAK,QAAQ,QAAS,KAAK,KAAK,OAAO,KAAK,EACrE,KAAK,KAAK,OAAO,OACjB,KAAK,KAAK,QAAQ,MAAQ,KAAK,KAAK,UAAU,MAC9CE,EAAQ,KAAK,GAEbA,EAAQ,KAAK,CAErB,CAAC,EAEe,EAAE,IAAM,KAAK,SAAW,WAAW,EACzC,GAAG,SAAWF,GAAU,CAC1B,KAAK,KAAK,OAAO,QACjB,KAAK,KAAK,QAAQ,MAAQ,KAAK,KAAK,UAAU,MAEtD,CAAC,EAED,EAAE,6GAIF,EAAE,IAAI,CACF,OAAU,OACV,aAAc,OAClB,CAAC,EAED,EAAE,oHAIF,EAAE,IAAI,CACF,OAAU,OACV,aAAc,OAClB,CAAC,EAED,EAAE,6FAGF,EAAE,IAAI,CACF,KAAQ,UACZ,CAAC,EAED,EAAE,2FAGF,EAAE,IAAI,CACF,KAAQ,UACZ,CAAC,EAED,EAAE,IAAM,KAAK,SAAW,QAAQ,EAAE,OAAO,EAAE,KAAK,EAChD,EAAE,IAAM,KAAK,SAAW,SAAS,EAAE,OAAO,EAAE,KAAK,CACrD,CAEU,aAAoB,CAC1B,KAAK,YAAc,oCACvB,CACJ,EAtGaG,EAAAT,EAAA,6BAAAA,EAANU,EAAA,CADN,aAAW,cAAc,0DAA0D,GACvEV",
  "names": ["import_corelib", "ProgramSessionApplyDialog", "ReadOnly", "ProgramSessionApplyForm", "ProgramSessionRow", "ProgramSessionService", "asPanel", "Event", "OneDay", "EndDate", "__name", "__decorateClass"]
}
