import{c as G,d as N}from"./chunk-T7MGTPAP.js";import{d as q}from"./chunk-U2RRK6JY.js";import{b as U}from"./chunk-J5PFZI4S.js";import{a as C}from"./chunk-DNINIZJD.js";import{c as s,g as h,h as H,k as w}from"./chunk-L3ECGIWB.js";var n=h(C(),1),p=h(w(),1);var x=class{};s(x,"SetEmployeeShiftColumns"),x.columnsKey="SetEmployeeShift.SetEmployeeShift";var l=h(C(),1);var j=h(w(),1);var v=class extends l.PrefixedContext{constructor(P){if(super(P),!v.init){v.init=!0;var r=l.LookupEditor,a=l.StringEditor,e=l.DateEditor;(0,j.initFormType)(v,["EmployeeRowId",r,"EmployeeName",a,"ShiftStartDate",e,"ShiftEndDate",e,"ShiftId",r,"EmployeeGroupId",r])}}},d=v;s(d,"SetEmployeeShiftForm"),d.formKey="SetEmployeeShift.SetEmployeeShift";var B=h(w(),1);var o=class{};s(o,"SetEmployeeShiftRow"),o.idProperty="Id",o.isActiveProperty="IsActive",o.nameProperty="EmployeeName",o.localTextPrefix="SetEmployeeShift.SetEmployeeShift",o.deletePermission="Administration:HumanResources",o.insertPermission="Administration:HumanResources",o.readPermission="*",o.updatePermission="Administration:HumanResources",o.Fields=(0,B.fieldsProxy)();var k=h(w(),1),O;(r=>(r.baseUrl="SetEmployeeShift/SetEmployeeShift",r.Methods={Create:"SetEmployeeShift/SetEmployeeShift/Create",Update:"SetEmployeeShift/SetEmployeeShift/Update",Delete:"SetEmployeeShift/SetEmployeeShift/Delete",Retrieve:"SetEmployeeShift/SetEmployeeShift/Retrieve",List:"SetEmployeeShift/SetEmployeeShift/List"},["Create","Update","Delete","Retrieve","List"].forEach(a=>{r[a]=function(e,S,f){return(0,k.serviceRequest)(r.baseUrl+"/"+a,e,S,f)}})))(O||(O={}));var y=class extends n.EntityDialog{constructor(r,a,e,S){super();this.form=new d(this.idPrefix);this.EmployeeRowID=r;var f=new Date(a);this.form.ShiftStartDate.set_value(a),this.form.ShiftEndDate.set_minDate(f),n.EditorUtils.setReadonly(this.form.ShiftStartDate.element,!0),this.cloneButton.remove(),e==1?this.saveAndCloseButton.remove():(this.localizationButton.remove(),this.applyChangesButton.remove(),this.undeleteButton.remove())}getFormKey(){return d.formKey}getRowDefinition(){return o}getService(){return O.baseUrl}dialogOpen(r){function a(i,t,m){let R=new Date(i),g=new Date(t);return m.filter(u=>{let I=new Date(u.ShiftStartDate),b=new Date(u.ShiftEndDate);return R>=I&&R<=b||g>=I&&g<=b||I>=R&&I<=g||b>=R&&b<=g}).map(u=>({ShiftStartDate:u.ShiftStartDate,ShiftEndDate:u.ShiftEndDate,ShiftId:u.ShiftId}))}s(a,"getClashingShifts"),this.isNew()?(this.deleteButton.remove(),$(".EmployeeGroupId").hide()):(0,p.isEmptyOrNull)(this.form.EmployeeGroupId.value)?$(".EmployeeGroupId").hide():this.readOnly=!0,super.dialogOpen(r),console.log("haha");var e=this,S;N.List({Criteria:n.Criteria.and(S,[[G.Fields.EmployeeRowID],"=",e.EmployeeRowID])},i=>{console.log(i.Entities),e.ShiftRowObject=i.Entities}),U.List({},i=>{for(var t in i.Entities)if(i.Entities[t].Id==this.EmployeeRowID){this.form.EmployeeRowId.value=i.Entities[t].Id.toString(),n.EditorUtils.setReadonly(this.form.EmployeeRowId.element,!0),this.form.EmployeeName.value=i.Entities[t].EmployeeName.toString(),n.EditorUtils.setReadonly(this.form.EmployeeName.element,!0);break}});var f=$(".fieldset").children().uniqueId(),D="",J=this.idPrefix+"PropertyGrid";for(var L in f)J==f[L].id&&(D=f[L].id.toString());var A="#"+D.replace("PropertyGrid","ShiftId");$(A).on("change",function(i){var t=new q;t.loadByIdAndOpenDialog($(A).val()),t.readOnly=!0});var c="#"+D.replace("PropertyGrid","ShiftEndDate");$(c).on("change",function(i){if(console.log("haha"),console.log(e.form.ShiftEndDate.value),e.form.ShiftStartDate.valueAsDate>e.form.ShiftEndDate.valueAsDate){(0,p.alertDialog)("Shift End Date cannot be earlier than shift end date"),$(c).val(null);return}console.log(e.ShiftRowObject),console.log(e.form.ShiftStartDate.value),console.log(e.form.ShiftEndDate.value);var t=a(e.form.ShiftStartDate.value,e.form.ShiftEndDate.value,e.ShiftRowObject);console.log(t),t.length>0&&((0,p.alertDialog)(`There is already a shift from ${t.map(m=>`${m.ShiftStartDate.substring(0,10)} to ${m.ShiftEndDate.substring(0,10)}`).join(`
`)}`),$(c).val(null))});var Q="#"+D.replace("PropertyGrid","ShiftStartDate");$(Q).on("change",function(i){if(console.log("haha"),console.log(e.form.ShiftEndDate.value),e.form.ShiftStartDate.valueAsDate>e.form.ShiftEndDate.valueAsDate){(0,p.alertDialog)("Shift End Date cannot be earlier than shift end date"),$(c).val(null);return}var t=a(e.form.ShiftStartDate.value,e.form.ShiftEndDate.value,e.ShiftRowObject);console.log(t),t.length>0&&((0,p.alertDialog)(`There is already a shift from ${t.map(m=>`${m.ShiftStartDate.substring(0,10)} to ${m.ShiftEndDate.substring(0,10)}`).join(`
`)}`),$(c).val(null))})}save_submitHandler(r){var a,e=this,S=r;console.log("haha"),super.save_submitHandler(r)}};s(y,"SetEmployeeShiftDialog"),y=H([n.Decorators.registerClass("HRMSoftware.SetEmployeeShift.SetEmployeeShiftDialog")],y);export{x as a,o as b,O as c,y as d};
//# sourceMappingURL=chunk-3MJ4Y52C.js.map
