{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/ViewShiftHistory/ViewShiftHistoryService.ts", "../../../Modules/ServerTypes/ViewShiftHistory/ViewShiftHistoryColumns.ts", "../../../Modules/ServerTypes/ViewShiftHistory/ViewShiftHistoryForm.ts", "../../../Modules/ServerTypes/ViewShiftHistory/ViewShiftHistoryRow.ts"],
  "sourcesContent": ["\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { ViewShiftHistoryRow } from \"./ViewShiftHistoryRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace ViewShiftHistoryService {\n    export const baseUrl = 'ViewShiftHistory/ViewShiftHistory';\n\n    export declare function Create(request: SaveRequest<ViewShiftHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ViewShiftHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ViewShiftHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ViewShiftHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function RetriveShiftHistory(request: number, onSuccess?: (response: ListResponse<ViewShiftHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"ViewShiftHistory/ViewShiftHistory/Create\",\n        Update: \"ViewShiftHistory/ViewShiftHistory/Update\",\n        Delete: \"ViewShiftHistory/ViewShiftHistory/Delete\",\n        Retrieve: \"ViewShiftHistory/ViewShiftHistory/Retrieve\",\n        List: \"ViewShiftHistory/ViewShiftHistory/List\",\n        RetriveShiftHistory: \"ViewShiftHistory/ViewShiftHistory/RetriveShiftHistory\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'RetriveShiftHistory'\n    ].forEach(x => {\n        (<any>ViewShiftHistoryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class ViewShiftHistoryColumns {\n    static columnsKey = 'ViewShiftHistory.ViewShiftHistory';\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ViewShiftHistoryForm {\n    EmployeeId: StringEditor;\n    EmployeeName: StringEditor;\n}\n\nexport class ViewShiftHistoryForm extends PrefixedContext {\n    static formKey = 'ViewShiftHistory.ViewShiftHistory';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ViewShiftHistoryForm.init)  {\n            ViewShiftHistoryForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(ViewShiftHistoryForm, [\n                'EmployeeId', w0,\n                'EmployeeName', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ViewShiftHistoryRow {\n    Id?: number;\n    EmployeeRowID?: number;\n    EmployeeName?: string;\n    EmployeeId?: string;\n    ShiftStartDate?: string;\n    ShiftEndDate?: string;\n    ShiftId?: number;\n    ShiftName?: string;\n    EmployeeGroupID?: number;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class ViewShiftHistoryRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'ShiftId';\n    static readonly localTextPrefix = 'ViewShiftHistory.ViewShiftHistory';\n    static readonly deletePermission = '*';\n    static readonly insertPermission = '*';\n    static readonly readPermission = '*';\n    static readonly updatePermission = '*';\n\n    static readonly Fields = fieldsProxy<ViewShiftHistoryRow>();\n}"],
  "mappings": "8FAEA,IAAAA,EAA+C,SAE9BC,OACAA,EAAA,QAAU,oCASVA,EAAA,QAAU,CACnB,OAAQ,2CACR,OAAQ,2CACR,OAAQ,2CACR,SAAU,6CACV,KAAM,yCACN,oBAAqB,uDACzB,EAEA,CACI,SACA,SACA,SACA,WACA,OACA,qBACJ,EAAE,QAAQC,GAAK,CACLD,EAAyBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACnD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA9BYJ,MAAA,KCJT,IAAMK,EAAN,KAA8B,CAEtC,EAFcC,EAAAD,EAAA,2BAAAA,EACH,WAAa,oCCDvB,IAAAE,EAA8C,SAC/CC,EAA6B,SAOtB,IAAMC,EAAN,cAAmC,iBAAgB,CAItD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAqB,KAAO,CAC7BA,EAAqB,KAAO,GAE5B,IAAIE,EAAK,kBAET,gBAAaF,EAAsB,CAC/B,aAAcE,EACd,eAAgBA,CACpB,CAAC,CACL,CACJ,CACJ,EAlBaC,EAANH,EAAMI,EAAAD,EAAA,wBAAAA,EACF,QAAU,oCCTpB,IAAAE,EAA4B,SAqBtB,IAAeC,EAAf,KAAmC,CAW1C,EAXsBC,EAAAD,EAAA,uBAAAA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,UAHbA,EAIF,gBAAkB,oCAJhBA,EAKF,iBAAmB,IALjBA,EAMF,iBAAmB,IANjBA,EAOF,eAAiB,IAPfA,EAQF,iBAAmB,IARjBA,EAUF,UAAS,eAAiC",
  "names": ["import_q", "ViewShiftHistoryService", "x", "r", "s", "o", "ViewShiftHistoryColumns", "__name", "import_corelib", "import_q", "_ViewShiftHistoryForm", "prefix", "w0", "ViewShiftHistoryForm", "__name", "import_q", "ViewShiftHistoryRow", "__name"]
}
