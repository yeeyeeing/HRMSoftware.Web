{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/EmployeeProfile/TerminateEmployee/TerminateEmployeeDialog.ts"],
  "sourcesContent": ["import {  Decorators, EditorUtils, EntityDialog } from '@serenity-is/corelib';\nimport { EmployeeProfileService, TerminateEmployeeForm, TerminateEmployeeRow, TerminateEmployeeService } from '../../../ServerTypes/EmployeeProfile';\nimport { isEmptyOrNull } from '@serenity-is/corelib/q';\nimport { ListResponse, confirm } from '@serenity-is/corelib/q';\nimport { alertDialog, getHighlightTarget, RetrieveResponse, serviceCall } from '@serenity-is/corelib/q';\n\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.TerminateEmployeeDialog')\nexport class TerminateEmployeeDialog extends EntityDialog<TerminateEmployeeRow, any> {\n    protected getFormKey() { return TerminateEmployeeForm.formKey; }\n    protected getRowDefinition() { return TerminateEmployeeRow; }\n    protected getService() { return TerminateEmployeeService.baseUrl; }\n\n    protected form = new TerminateEmployeeForm(this.idPrefix);\n\n     protected onDialogOpen() {\n        super.onDialogOpen()\n        this.deleteButton.hide()\n        var self = this\n        var LeaveDateElement = document.getElementById(this.idPrefix + 'TerminateLeaveDate')\n\n\n\n         var TerminateDateElement = document.getElementById(this.idPrefix + 'TerminateDate')\n\n        var NoticePeriodElement = document.getElementById(this.idPrefix + 'NoticePeriod') \n         EditorUtils.setReadonly(this.form.TerminateLeaveDate.element, true);\n        $('#' + this.idPrefix + 'NoticePeriod').attr('placeholder','notice period in day') \n        $(NoticePeriodElement).on('change', function (e) {\n\n            if (isEmptyOrNull($(NoticePeriodElement).val())) {\n                self.form.TerminateLeaveDate.value = ''\n                return\n            }\n            if (isEmptyOrNull($(TerminateDateElement).val())) {\n                self.form.TerminateLeaveDate.value = ''\n                return\n            }\n                \n            let dateString = $(TerminateDateElement).val(); // Get the value from the input element\n\n            // Parse the date string into a Date object\n            let dateParts = dateString.split('/');\n            let month = parseInt(dateParts[0]) - 1; // Months are zero-based in JavaScript\n            let day = parseInt(dateParts[1]);\n            let year = parseInt(dateParts[2]); // Assuming 2-digit years correspond to years in the 21st century\n\n            let LeaveDate = new Date(year, month, day);\n\n            LeaveDate.setDate(LeaveDate.getDate() + self.form.NoticePeriod.value);\n            month = (LeaveDate.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 to month as it starts from 0\n            day = LeaveDate.getDate().toString().padStart(2, '0');\n            year = LeaveDate.getFullYear();\n            dateString = `${month}/${day}/${year}`;\n\n            $(LeaveDateElement).val(dateString)\n\n\n        });\n         $(TerminateDateElement).on('change', function (e) {\n\n             if (isEmptyOrNull($(NoticePeriodElement).val())) {\n                 self.form.TerminateLeaveDate.value = ''\n                 return\n             }\n             if (isEmptyOrNull($(TerminateDateElement).val())) {\n                 self.form.TerminateLeaveDate.value = ''\n                 return\n             }\n             let dateString = $(TerminateDateElement).val(); // Get the value from the input element\n\n            // Parse the date string into a Date object\n            let dateParts = dateString.split('/');\n            let month = parseInt(dateParts[0]) - 1; // Months are zero-based in JavaScript\n            let day = parseInt(dateParts[1]);\n            let year = parseInt(dateParts[2]); // Assuming 2-digit years correspond to years in the 21st century\n\n            let LeaveDate = new Date(year, month, day);\n\n            LeaveDate.setDate(LeaveDate.getDate() + self.form.NoticePeriod.value);\n            month = (LeaveDate.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 to month as it starts from 0\n            day = LeaveDate.getDate().toString().padStart(2, '0');\n            year = LeaveDate.getFullYear();\n            dateString = `${month}/${day}/${year}`;\n\n             $(LeaveDateElement).val(dateString)\n\n        });\n\n\n    }\n\n\n    protected save_submitHandler(response): void {\n        var self = this\n        if (isEmptyOrNull(self.form.TerminateDate.value)) {\n            alertDialog('Please make sure the terminate date is correct')\n            return\n        }\n\n        confirm(\"Are you sure to terminate this employee?\", () => {\n            EmployeeProfileService.Update({\n                EntityId: self.entityId,\n                Entity:\n                {\n                    \"Terminated\": 1\n                }\n            });\n            self.readOnly = true\n            super.save_submitHandler(response)\n        });\n\n\n    }\n}"],
  "mappings": "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",
  "names": ["import_corelib", "import_q", "TerminateEmployeeDialog", "TerminateEmployeeForm", "TerminateEmployeeRow", "TerminateEmployeeService", "self", "LeaveDateElement", "TerminateDateElement", "NoticePeriodElement", "e", "dateString", "dateParts", "month", "day", "year", "LeaveDate", "response", "EmployeeProfileService", "__name", "__decorateClass"]
}
