{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/EmployeeProfile/EmployeeResign/EmployeeResignDialog.ts"],
  "sourcesContent": ["import { addAttribute, Decorators, EditorUtils, EntityDialog } from '@serenity-is/corelib';\nimport { EmployeeProfileService, EmployeeResignForm, EmployeeResignRow, EmployeeResignService } from '../../../ServerTypes/EmployeeProfile';\nimport { isEmptyOrNull, alertDialog, getHighlightTarget, RetrieveResponse, serviceCall,confirm} from '@serenity-is/corelib/q';\n\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.EmployeeResignDialog')\nexport class EmployeeResignDialog extends EntityDialog<EmployeeResignRow, any> {\n    protected getFormKey() { return EmployeeResignForm.formKey; }\n    protected getRowDefinition() { return EmployeeResignRow; }\n    protected getService() { return EmployeeResignService.baseUrl; }\n\n    protected form = new EmployeeResignForm(this.idPrefix);\n\n\n\n    protected onDialogOpen() {\n        super.onDialogOpen()\n        this.deleteButton.hide()\n        var self = this\n        var LeaveDateElement = document.getElementById(this.idPrefix + 'ResignLeaveDate')\n\n\n        var ResignationDateElement = document.getElementById(this.idPrefix + 'ResignationDate')\n        var NoticePeriodElement = document.getElementById(this.idPrefix + 'NoticePeriod') \n        EditorUtils.setReadonly(this.form.ResignLeaveDate.element, true);\n        $('#' + this.idPrefix + 'NoticePeriod').attr('placeholder','notice period in day') \n        $(NoticePeriodElement).on('change', function (e) {\n\n            if (isEmptyOrNull($(NoticePeriodElement).val())) {\n                self.form.ResignLeaveDate.value = ''\n                return\n            }\n            if (isEmptyOrNull($(ResignationDateElement).val())) {\n                self.form.ResignLeaveDate.value = ''\n                return\n            }\n\n            let dateString = $(ResignationDateElement).val(); // Get the value from the input element\n\n            // Parse the date string into a Date object\n            let dateParts = dateString.split('/');\n            let month = parseInt(dateParts[0]) - 1; // Months are zero-based in JavaScript\n            let day = parseInt(dateParts[1]);\n            let year = parseInt(dateParts[2]); // Assuming 2-digit years correspond to years in the 21st century\n\n            let LeaveDate = new Date(year, month, day);\n\n            LeaveDate.setDate(LeaveDate.getDate() + self.form.NoticePeriod.value);\n            month = (LeaveDate.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 to month as it starts from 0\n            day = LeaveDate.getDate().toString().padStart(2, '0');\n            year = LeaveDate.getFullYear();\n            dateString = `${month}/${day}/${year}`;\n\n            $(LeaveDateElement).val(dateString)\n\n\n        });\n        $(ResignationDateElement).on('change', function (e) {\n\n            if (isEmptyOrNull($(NoticePeriodElement).val()) ) \n                return\n            if (isEmptyOrNull($(ResignationDateElement).val()) ) \n                return\n            let dateString = $(ResignationDateElement).val(); // Get the value from the input element\n\n            // Parse the date string into a Date object\n            let dateParts = dateString.split('/');\n            let month = parseInt(dateParts[0]) - 1; // Months are zero-based in JavaScript\n            let day = parseInt(dateParts[1]);\n            let year = parseInt(dateParts[2]); // Assuming 2-digit years correspond to years in the 21st century\n\n            let LeaveDate = new Date(year, month, day);\n\n            LeaveDate.setDate(LeaveDate.getDate() + self.form.NoticePeriod.value);\n            month = (LeaveDate.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 to month as it starts from 0\n            day = LeaveDate.getDate().toString().padStart(2, '0');\n            year = LeaveDate.getFullYear();\n            dateString = `${month}/${day}/${year}`;\n\n            $(LeaveDateElement).val(dateString)\n\n        });\n\n\n    }\n\n\n    protected save_submitHandler(response): void {\n        var self = this\n        if (isEmptyOrNull(self.form.ResignationDate.value)) {\n            alertDialog('Please make sure the resign date is correct')\n            return\n        }\n\n        confirm(\"Are you sure this employee has resigned?\", () => {\n            EmployeeProfileService.Update({\n                EntityId: self.entityId,\n                Entity:\n                {\n                    \"Terminated\": 1\n                }\n            });\n            self.readOnly = true\n            super.save_submitHandler(response)\n        });\n\n\n    }\n}"],
  "mappings": "mMAAA,IAAAA,EAAoE,SAEpE,IAAAC,EAAqG,SAG9F,IAAMC,EAAN,cAAmC,cAAqC,CAAxE,kCAKH,KAAU,KAAO,IAAIC,EAAmB,KAAK,QAAQ,EAJ3C,YAAa,CAAE,OAAOA,EAAmB,OAAS,CAClD,kBAAmB,CAAE,OAAOC,CAAmB,CAC/C,YAAa,CAAE,OAAOC,EAAsB,OAAS,CAMrD,cAAe,CACrB,MAAM,aAAa,EACnB,KAAK,aAAa,KAAK,EACvB,IAAIC,EAAO,KACPC,EAAmB,SAAS,eAAe,KAAK,SAAW,iBAAiB,EAG5EC,EAAyB,SAAS,eAAe,KAAK,SAAW,iBAAiB,EAClFC,EAAsB,SAAS,eAAe,KAAK,SAAW,cAAc,EAChF,cAAY,YAAY,KAAK,KAAK,gBAAgB,QAAS,EAAI,EAC/D,EAAE,IAAM,KAAK,SAAW,cAAc,EAAE,KAAK,cAAc,sBAAsB,EACjF,EAAEA,CAAmB,EAAE,GAAG,SAAU,SAAUC,EAAG,CAE7C,MAAI,iBAAc,EAAED,CAAmB,EAAE,IAAI,CAAC,EAAG,CAC7CH,EAAK,KAAK,gBAAgB,MAAQ,GAClC,MACJ,CACA,MAAI,iBAAc,EAAEE,CAAsB,EAAE,IAAI,CAAC,EAAG,CAChDF,EAAK,KAAK,gBAAgB,MAAQ,GAClC,MACJ,CAEA,IAAIK,EAAa,EAAEH,CAAsB,EAAE,IAAI,EAG3CI,EAAYD,EAAW,MAAM,GAAG,EAChCE,EAAQ,SAASD,EAAU,CAAC,CAAC,EAAI,EACjCE,EAAM,SAASF,EAAU,CAAC,CAAC,EAC3BG,EAAO,SAASH,EAAU,CAAC,CAAC,EAE5BI,EAAY,IAAI,KAAKD,EAAMF,EAAOC,CAAG,EAEzCE,EAAU,QAAQA,EAAU,QAAQ,EAAIV,EAAK,KAAK,aAAa,KAAK,EACpEO,GAASG,EAAU,SAAS,EAAI,GAAG,SAAS,EAAE,SAAS,EAAG,GAAG,EAC7DF,EAAME,EAAU,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EACpDD,EAAOC,EAAU,YAAY,EAC7BL,EAAa,GAAGE,KAASC,KAAOC,IAEhC,EAAER,CAAgB,EAAE,IAAII,CAAU,CAGtC,CAAC,EACD,EAAEH,CAAsB,EAAE,GAAG,SAAU,SAAUE,EAAG,CAIhD,MAFI,iBAAc,EAAED,CAAmB,EAAE,IAAI,CAAC,MAE1C,iBAAc,EAAED,CAAsB,EAAE,IAAI,CAAC,EAC7C,OACJ,IAAIG,EAAa,EAAEH,CAAsB,EAAE,IAAI,EAG3CI,EAAYD,EAAW,MAAM,GAAG,EAChCE,EAAQ,SAASD,EAAU,CAAC,CAAC,EAAI,EACjCE,EAAM,SAASF,EAAU,CAAC,CAAC,EAC3BG,EAAO,SAASH,EAAU,CAAC,CAAC,EAE5BI,EAAY,IAAI,KAAKD,EAAMF,EAAOC,CAAG,EAEzCE,EAAU,QAAQA,EAAU,QAAQ,EAAIV,EAAK,KAAK,aAAa,KAAK,EACpEO,GAASG,EAAU,SAAS,EAAI,GAAG,SAAS,EAAE,SAAS,EAAG,GAAG,EAC7DF,EAAME,EAAU,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EACpDD,EAAOC,EAAU,YAAY,EAC7BL,EAAa,GAAGE,KAASC,KAAOC,IAEhC,EAAER,CAAgB,EAAE,IAAII,CAAU,CAEtC,CAAC,CAGL,CAGU,mBAAmBM,EAAgB,CACzC,IAAIX,EAAO,KACX,MAAI,iBAAcA,EAAK,KAAK,gBAAgB,KAAK,EAAG,IAChD,eAAY,6CAA6C,EACzD,MACJ,IAEA,WAAQ,2CAA4C,IAAM,CACtDY,EAAuB,OAAO,CAC1B,SAAUZ,EAAK,SACf,OACA,CACI,WAAc,CAClB,CACJ,CAAC,EACDA,EAAK,SAAW,GAChB,MAAM,mBAAmBW,CAAQ,CACrC,CAAC,CAGL,CACJ,EAtGaE,EAAAjB,EAAA,wBAAAA,EAANkB,EAAA,CADN,aAAW,cAAc,kDAAkD,GAC/DlB",
  "names": ["import_corelib", "import_q", "EmployeeResignDialog", "EmployeeResignForm", "EmployeeResignRow", "EmployeeResignService", "self", "LeaveDateElement", "ResignationDateElement", "NoticePeriodElement", "e", "dateString", "dateParts", "month", "day", "year", "LeaveDate", "response", "EmployeeProfileService", "__name", "__decorateClass"]
}
