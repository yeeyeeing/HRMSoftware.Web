{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/OTApplication/OTApplication/OtMinuteOtHourFormatter.ts", "../../../Modules/ServerTypes/OTApplication/OTApplicationStatus.ts", "../../../Modules/ServerTypes/OTApplication/OTApplicationColumns.ts", "../../../Modules/ServerTypes/OTApplication/OTApplicationRow.ts", "../../../Modules/ServerTypes/OTApplication/OTApplicationService.ts", "../../../Modules/ServerTypes/OTApplication/OTReasonColumns.ts", "../../../Modules/ServerTypes/OTApplication/OTReasonRow.ts", "../../../Modules/ServerTypes/OTApplication/OTReasonService.ts", "../../../Modules/ServerTypes/OTApplication/OTApplicationForm.ts", "../../../Modules/ServerTypes/OTApplication/OTApplicationRejectRow.ts", "../../../Modules/ServerTypes/OTApplication/OTReasonForm.ts"],
  "sourcesContent": ["import { Decorators, Formatter, Lookup } from \"@serenity-is/corelib\";\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\n\n@Decorators.registerFormatter('HRMSoftware.OtMinuteOtHourFormatter')\nexport class OtMinuteOtHourFormatter implements Formatter {\n\n    format(ctx: FormatterContext) {\n\n        let minute = ctx.value as number;\n        let hour = minute / 60.0\n\n\n        return `<p>${hour.toFixed(2) }</p>`;\n\n\n    }\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum OTApplicationStatus {\n    Rejected = -1,\n    Pending = 0,\n    Approved = 1,\n    NotNeeded = 2\n}\nDecorators.registerEnumType(OTApplicationStatus, 'HRMSoftware.OTApplication.OTApplicationStatus', 'HumanResource.LeaveApplication.OTApplicationStatus');", "\uFEFFimport { OtMinuteOtHourFormatter } from \"@/HumanResource/OTApplication/OTApplication/OtMinuteOtHourFormatter\";\nimport { OTApplicationStatus } from \"./OTApplicationStatus\";\nimport { ApplicationStatusFormatter } from \"@/HumanResource/OTApplication/OTApplication/ApplicationStatusFormatter\";\n\nexport class OTApplicationColumns {\n    static columnsKey = 'OTApplication.OTApplication';\n}\n\n[OtMinuteOtHourFormatter, OTApplicationStatus, ApplicationStatusFormatter]; // referenced types", "\uFEFFimport { OTApplicationStatus } from \"./OTApplicationStatus\";\nimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface OTApplicationRow {\n    SuperiorRejectReason?: string;\n    HrRejectReason?: string;\n    WeekendOt?: boolean;\n    PublicHolidayOt?: boolean;\n    WeekdayOt?: boolean;\n    OtRateWeekday?: number;\n    OtRateWeekend?: number;\n    EmployeeUpdatedName?: string;\n    HrUpdatedName?: string;\n    EmployeeUpdated?: number;\n    HrUpdated?: number;\n    EmployeeStatus?: OTApplicationStatus;\n    HrStatus?: OTApplicationStatus;\n    OtHourBuffer?: number;\n    CostCentreID?: number;\n    CostCentreName?: string;\n    DepartmentID?: number;\n    DepartmentName?: string;\n    DivisionID?: number;\n    DivisionName?: string;\n    OccupationID?: number;\n    OccupationName?: string;\n    JobGradeID?: number;\n    JobGradeName?: string;\n    Paid?: number;\n    OtMinute?: number;\n    Id?: number;\n    EmployeeRowId?: number;\n    EmployeeName?: string;\n    ApprovedBy?: number;\n    ApproveEmployeeName?: string;\n    RejectedBy?: number;\n    RejectedEmployeeName?: string;\n    StartingAt?: string;\n    EndingAt?: string;\n    OtReasonId?: number;\n    OtDate?: string;\n    StartingHour?: number;\n    StartingMinute?: number;\n    EndingHour?: number;\n    EndingMinute?: number;\n    StartingTime?: string;\n    EndingTime?: string;\n    Status?: OTApplicationStatus;\n    OtRate?: number;\n    TotalOtPay?: number;\n    OtPayBuffer?: number;\n    EmployeeID?: string;\n    OtReason?: string;\n    OTDescription?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class OTApplicationRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'EmployeeName';\n    static readonly localTextPrefix = 'OTApplication.OTApplication';\n    static readonly lookupKey = 'OtApplication.OtApplication';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<OTApplicationRow>('OtApplication.OtApplication') }\n    static async getLookupAsync() { return getLookupAsync<OTApplicationRow>('OtApplication.OtApplication') }\n\n    static readonly deletePermission = '';\n    static readonly insertPermission = '';\n    static readonly readPermission = '';\n    static readonly updatePermission = '';\n\n    static readonly Fields = fieldsProxy<OTApplicationRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { OTApplicationRow } from \"./OTApplicationRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace OTApplicationService {\n    export const baseUrl = 'OTApplication/OTApplication';\n\n    export declare function Create(request: SaveRequest<OTApplicationRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<OTApplicationRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OTApplicationRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OTApplicationRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function CalculateOtFlatRate(request: number, onSuccess?: (response: ListResponse<OTApplicationRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function CalculateOtPay(request: number, onSuccess?: (response: ListResponse<OTApplicationRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function EmployeeOTBasedOnID(request: number, onSuccess?: (response: ListResponse<OTApplicationRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"OTApplication/OTApplication/Create\",\n        Update: \"OTApplication/OTApplication/Update\",\n        Delete: \"OTApplication/OTApplication/Delete\",\n        Retrieve: \"OTApplication/OTApplication/Retrieve\",\n        List: \"OTApplication/OTApplication/List\",\n        CalculateOtFlatRate: \"OTApplication/OTApplication/CalculateOtFlatRate\",\n        CalculateOtPay: \"OTApplication/OTApplication/CalculateOtPay\",\n        EmployeeOTBasedOnID: \"OTApplication/OTApplication/EmployeeOTBasedOnID\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'CalculateOtFlatRate', \n        'CalculateOtPay', \n        'EmployeeOTBasedOnID'\n    ].forEach(x => {\n        (<any>OTApplicationService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class OTReasonColumns {\n    static columnsKey = 'OTApplication.OTReason';\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface OTReasonRow {\n    Id?: number;\n    OtReason?: string;\n    Description?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class OTReasonRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'OtReason';\n    static readonly localTextPrefix = 'OTApplication.OTReason';\n    static readonly lookupKey = 'OTReason.OTReason';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<OTReasonRow>('OTReason.OTReason') }\n    static async getLookupAsync() { return getLookupAsync<OTReasonRow>('OTReason.OTReason') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<OTReasonRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { OTReasonRow } from \"./OTReasonRow\";\nimport { ServiceOptions, ServiceRequest, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace OTReasonService {\n    export const baseUrl = 'OTApplication/OTReason';\n\n    export declare function Create(request: SaveRequest<OTReasonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<OTReasonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OTReasonRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OTReasonRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function OTReasonList(request: ServiceRequest, onSuccess?: (response: ListResponse<OTReasonRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"OTApplication/OTReason/Create\",\n        Update: \"OTApplication/OTReason/Update\",\n        Delete: \"OTApplication/OTReason/Delete\",\n        Retrieve: \"OTApplication/OTReason/Retrieve\",\n        List: \"OTApplication/OTReason/List\",\n        OTReasonList: \"OTApplication/OTReason/OTReasonList\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'OTReasonList'\n    ].forEach(x => {\n        (<any>OTReasonService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, LookupEditor, DateEditor, DecimalEditor, TextAreaEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface OTApplicationForm {\n    EmployeeUpdatedName: StringEditor;\n    SuperiorRejectReason: StringEditor;\n    HrUpdatedName: StringEditor;\n    HrRejectReason: StringEditor;\n    EmployeeUpdated: LookupEditor;\n    HrUpdated: LookupEditor;\n    EmployeeRowId: LookupEditor;\n    EmployeeName: StringEditor;\n    OtReasonId: LookupEditor;\n    OtDate: DateEditor;\n    OtRate: DecimalEditor;\n    StartingAt: StringEditor;\n    EndingAt: StringEditor;\n    OtHourBuffer: DecimalEditor;\n    OtPayBuffer: DecimalEditor;\n    OTDescription: TextAreaEditor;\n    WeekendOt: BooleanEditor;\n    PublicHolidayOt: BooleanEditor;\n    WeekdayOt: BooleanEditor;\n}\n\nexport class OTApplicationForm extends PrefixedContext {\n    static formKey = 'OTApplication.OTApplication';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OTApplicationForm.init)  {\n            OTApplicationForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = LookupEditor;\n            var w2 = DateEditor;\n            var w3 = DecimalEditor;\n            var w4 = TextAreaEditor;\n            var w5 = BooleanEditor;\n\n            initFormType(OTApplicationForm, [\n                'EmployeeUpdatedName', w0,\n                'SuperiorRejectReason', w0,\n                'HrUpdatedName', w0,\n                'HrRejectReason', w0,\n                'EmployeeUpdated', w1,\n                'HrUpdated', w1,\n                'EmployeeRowId', w1,\n                'EmployeeName', w0,\n                'OtReasonId', w1,\n                'OtDate', w2,\n                'OtRate', w3,\n                'StartingAt', w0,\n                'EndingAt', w0,\n                'OtHourBuffer', w3,\n                'OtPayBuffer', w3,\n                'OTDescription', w4,\n                'WeekendOt', w5,\n                'PublicHolidayOt', w5,\n                'WeekdayOt', w5\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface OTApplicationRejectRow {\n    RejectReason?: string;\n    Id?: number;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class OTApplicationRejectRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly localTextPrefix = 'OTApplicationReject.OTApplicationReject';\n    static readonly deletePermission = '*';\n    static readonly insertPermission = '*';\n    static readonly readPermission = '*';\n    static readonly updatePermission = '*';\n\n    static readonly Fields = fieldsProxy<OTApplicationRejectRow>();\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface OTReasonForm {\n    OtReason: StringEditor;\n    Description: StringEditor;\n}\n\nexport class OTReasonForm extends PrefixedContext {\n    static formKey = 'OTApplication.OTReason';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!OTReasonForm.init)  {\n            OTReasonForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(OTReasonForm, [\n                'OtReason', w0,\n                'Description', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["import_corelib", "OtMinuteOtHourFormatter", "ctx", "__name", "__decorateClass", "import_corelib", "OTApplicationStatus", "OTApplicationColumns", "__name", "import_q", "OTApplicationRow", "__async", "__name", "import_q", "OTApplicationService", "x", "s", "o", "OTReasonColumns", "__name", "import_q", "OTReasonRow", "__async", "__name", "import_q", "OTReasonService", "x", "s", "o", "import_corelib", "import_q", "_OTApplicationForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "OTApplicationForm", "__name", "import_q", "OTApplicationRejectRow", "__name", "import_corelib", "import_q", "_OTReasonForm", "prefix", "w0", "OTReasonForm", "__name"]
}
