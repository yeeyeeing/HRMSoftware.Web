{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Master/MasterBankColumns.ts", "../../../Modules/ServerTypes/Master/MasterBankRow.ts", "../../../Modules/ServerTypes/Master/MasterBankService.ts", "../../../Modules/ServerTypes/Master/MasterCityColumns.ts", "../../../Modules/ServerTypes/Master/MasterCityRow.ts", "../../../Modules/ServerTypes/Master/MasterCityService.ts", "../../../Modules/ServerTypes/Master/MasterCostCentreColumns.ts", "../../../Modules/ServerTypes/Master/MasterCostCentreRow.ts", "../../../Modules/ServerTypes/Master/MasterCostCentreService.ts", "../../../Modules/ServerTypes/Master/MasterCountryColumns.ts", "../../../Modules/ServerTypes/Master/MasterCountryRow.ts", "../../../Modules/ServerTypes/Master/MasterCountryService.ts", "../../../Modules/ServerTypes/Master/MasterCp8dColumns.ts", "../../../Modules/ServerTypes/Master/MasterCp8dRow.ts", "../../../Modules/ServerTypes/Master/MasterCp8dService.ts", "../../../Modules/ServerTypes/Master/MasterStateColumns.ts", "../../../Modules/ServerTypes/Master/MasterStateRow.ts", "../../../Modules/ServerTypes/Master/MasterStateService.ts", "../../../Modules/ServerTypes/Master/MasterBankForm.ts", "../../../Modules/ServerTypes/Master/MasterCityForm.ts", "../../../Modules/ServerTypes/Master/MasterCostCentreForm.ts", "../../../Modules/ServerTypes/Master/MasterCountryForm.ts", "../../../Modules/ServerTypes/Master/MasterCp8dForm.ts", "../../../Modules/ServerTypes/Master/MasterStateForm.ts"],
  "sourcesContent": ["\uFEFFexport class MasterBankColumns {\n    static columnsKey = 'Master.MasterBank';\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MasterBankRow {\n    Id?: number;\n    Name?: string;\n    Description?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class MasterBankRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Master.MasterBank';\n    static readonly lookupKey = 'MasterBank.MasterBank';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MasterBankRow>('MasterBank.MasterBank') }\n    static async getLookupAsync() { return getLookupAsync<MasterBankRow>('MasterBank.MasterBank') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<MasterBankRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { MasterBankRow } from \"./MasterBankRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace MasterBankService {\n    export const baseUrl = 'Master/MasterBank';\n\n    export declare function Create(request: SaveRequest<MasterBankRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MasterBankRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MasterBankRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MasterBankRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Master/MasterBank/Create\",\n        Update: \"Master/MasterBank/Update\",\n        Delete: \"Master/MasterBank/Delete\",\n        Retrieve: \"Master/MasterBank/Retrieve\",\n        List: \"Master/MasterBank/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MasterBankService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class MasterCityColumns {\n    static columnsKey = 'Master.MasterCity';\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCityRow {\n    Id?: number;\n    Name?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class MasterCityRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Master.MasterCity';\n    static readonly lookupKey = 'MasterCity.MasterCity';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MasterCityRow>('MasterCity.MasterCity') }\n    static async getLookupAsync() { return getLookupAsync<MasterCityRow>('MasterCity.MasterCity') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<MasterCityRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { MasterCityRow } from \"./MasterCityRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace MasterCityService {\n    export const baseUrl = 'Master/MasterCity';\n\n    export declare function Create(request: SaveRequest<MasterCityRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MasterCityRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MasterCityRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MasterCityRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Master/MasterCity/Create\",\n        Update: \"Master/MasterCity/Update\",\n        Delete: \"Master/MasterCity/Delete\",\n        Retrieve: \"Master/MasterCity/Retrieve\",\n        List: \"Master/MasterCity/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MasterCityService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class MasterCostCentreColumns {\n    static columnsKey = 'Master.MasterCostCentre';\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCostCentreRow {\n    Id?: number;\n    Name?: string;\n    Description?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class MasterCostCentreRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Master.MasterCostCentre';\n    static readonly lookupKey = 'MasterCostCentre.MasterCostCentre';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MasterCostCentreRow>('MasterCostCentre.MasterCostCentre') }\n    static async getLookupAsync() { return getLookupAsync<MasterCostCentreRow>('MasterCostCentre.MasterCostCentre') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<MasterCostCentreRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { MasterCostCentreRow } from \"./MasterCostCentreRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace MasterCostCentreService {\n    export const baseUrl = 'Master/MasterCostCentre';\n\n    export declare function Create(request: SaveRequest<MasterCostCentreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MasterCostCentreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MasterCostCentreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MasterCostCentreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Master/MasterCostCentre/Create\",\n        Update: \"Master/MasterCostCentre/Update\",\n        Delete: \"Master/MasterCostCentre/Delete\",\n        Retrieve: \"Master/MasterCostCentre/Retrieve\",\n        List: \"Master/MasterCostCentre/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MasterCostCentreService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class MasterCountryColumns {\n    static columnsKey = 'Master.MasterCountry';\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCountryRow {\n    Id?: number;\n    Name?: string;\n    CountryCode?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class MasterCountryRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Master.MasterCountry';\n    static readonly lookupKey = 'MasterCountry.MasterCountry';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MasterCountryRow>('MasterCountry.MasterCountry') }\n    static async getLookupAsync() { return getLookupAsync<MasterCountryRow>('MasterCountry.MasterCountry') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<MasterCountryRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { MasterCountryRow } from \"./MasterCountryRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace MasterCountryService {\n    export const baseUrl = 'Master/MasterCountry';\n\n    export declare function Create(request: SaveRequest<MasterCountryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MasterCountryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MasterCountryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MasterCountryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Master/MasterCountry/Create\",\n        Update: \"Master/MasterCountry/Update\",\n        Delete: \"Master/MasterCountry/Delete\",\n        Retrieve: \"Master/MasterCountry/Retrieve\",\n        List: \"Master/MasterCountry/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MasterCountryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class MasterCp8dColumns {\n    static columnsKey = 'Master.MasterCp8d';\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCp8dRow {\n    Id?: number;\n    Name?: string;\n    Description?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class MasterCp8dRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Master.MasterCp8d';\n    static readonly lookupKey = 'MasterCp8d.MasterCp8d';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MasterCp8dRow>('MasterCp8d.MasterCp8d') }\n    static async getLookupAsync() { return getLookupAsync<MasterCp8dRow>('MasterCp8d.MasterCp8d') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<MasterCp8dRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { MasterCp8dRow } from \"./MasterCp8dRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace MasterCp8dService {\n    export const baseUrl = 'Master/MasterCp8d';\n\n    export declare function Create(request: SaveRequest<MasterCp8dRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MasterCp8dRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MasterCp8dRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MasterCp8dRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Master/MasterCp8d/Create\",\n        Update: \"Master/MasterCp8d/Update\",\n        Delete: \"Master/MasterCp8d/Delete\",\n        Retrieve: \"Master/MasterCp8d/Retrieve\",\n        List: \"Master/MasterCp8d/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MasterCp8dService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class MasterStateColumns {\n    static columnsKey = 'Master.MasterState';\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MasterStateRow {\n    Id?: number;\n    Name?: string;\n    StateCode?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class MasterStateRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Master.MasterState';\n    static readonly lookupKey = 'MasterState.MasterState';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<MasterStateRow>('MasterState.MasterState') }\n    static async getLookupAsync() { return getLookupAsync<MasterStateRow>('MasterState.MasterState') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<MasterStateRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { MasterStateRow } from \"./MasterStateRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace MasterStateService {\n    export const baseUrl = 'Master/MasterState';\n\n    export declare function Create(request: SaveRequest<MasterStateRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MasterStateRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MasterStateRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MasterStateRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Master/MasterState/Create\",\n        Update: \"Master/MasterState/Update\",\n        Delete: \"Master/MasterState/Delete\",\n        Retrieve: \"Master/MasterState/Retrieve\",\n        List: \"Master/MasterState/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MasterStateService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MasterBankForm {\n    Name: StringEditor;\n    Description: StringEditor;\n}\n\nexport class MasterBankForm extends PrefixedContext {\n    static formKey = 'Master.MasterBank';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MasterBankForm.init)  {\n            MasterBankForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(MasterBankForm, [\n                'Name', w0,\n                'Description', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCityForm {\n    Name: StringEditor;\n}\n\nexport class MasterCityForm extends PrefixedContext {\n    static formKey = 'Master.MasterCity';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MasterCityForm.init)  {\n            MasterCityForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(MasterCityForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCostCentreForm {\n    Name: StringEditor;\n    Description: StringEditor;\n}\n\nexport class MasterCostCentreForm extends PrefixedContext {\n    static formKey = 'Master.MasterCostCentre';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MasterCostCentreForm.init)  {\n            MasterCostCentreForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(MasterCostCentreForm, [\n                'Name', w0,\n                'Description', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCountryForm {\n    Name: StringEditor;\n    CountryCode: StringEditor;\n}\n\nexport class MasterCountryForm extends PrefixedContext {\n    static formKey = 'Master.MasterCountry';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MasterCountryForm.init)  {\n            MasterCountryForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(MasterCountryForm, [\n                'Name', w0,\n                'CountryCode', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MasterCp8dForm {\n    Name: StringEditor;\n    Description: StringEditor;\n}\n\nexport class MasterCp8dForm extends PrefixedContext {\n    static formKey = 'Master.MasterCp8d';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MasterCp8dForm.init)  {\n            MasterCp8dForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(MasterCp8dForm, [\n                'Name', w0,\n                'Description', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MasterStateForm {\n    Name: StringEditor;\n    StateCode: StringEditor;\n}\n\nexport class MasterStateForm extends PrefixedContext {\n    static formKey = 'Master.MasterState';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MasterStateForm.init)  {\n            MasterStateForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(MasterStateForm, [\n                'Name', w0,\n                'StateCode', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["MasterBankColumns", "__name", "import_q", "MasterBankRow", "__async", "__name", "import_q", "MasterBankService", "x", "r", "s", "o", "MasterCityColumns", "__name", "import_q", "MasterCityRow", "__async", "__name", "import_q", "MasterCityService", "x", "r", "s", "o", "MasterCostCentreColumns", "__name", "import_q", "MasterCostCentreRow", "__async", "__name", "import_q", "MasterCostCentreService", "x", "r", "s", "o", "MasterCountryColumns", "__name", "import_q", "MasterCountryRow", "__async", "__name", "import_q", "MasterCountryService", "x", "r", "s", "o", "MasterCp8dColumns", "__name", "import_q", "MasterCp8dRow", "__async", "__name", "import_q", "MasterCp8dService", "x", "r", "s", "o", "MasterStateColumns", "__name", "import_q", "MasterStateRow", "__async", "__name", "import_q", "MasterStateService", "x", "r", "s", "o", "import_corelib", "import_q", "_MasterBankForm", "prefix", "w0", "MasterBankForm", "__name", "import_corelib", "import_q", "_MasterCityForm", "prefix", "w0", "MasterCityForm", "__name", "import_corelib", "import_q", "_MasterCostCentreForm", "prefix", "w0", "MasterCostCentreForm", "__name", "import_corelib", "import_q", "_MasterCountryForm", "prefix", "w0", "MasterCountryForm", "__name", "import_corelib", "import_q", "_MasterCp8dForm", "prefix", "w0", "MasterCp8dForm", "__name", "import_corelib", "import_q", "_MasterStateForm", "prefix", "w0", "MasterStateForm", "__name"]
}
