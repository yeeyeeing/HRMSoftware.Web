{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/OrganisationHierarchy/DepartmentService.ts"],
  "sourcesContent": ["\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { DepartmentRow } from \"./DepartmentRow\";\nimport { ServiceOptions, ServiceRequest, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace DepartmentService {\n    export const baseUrl = 'OrganisationHierarchy/Department';\n\n    export declare function Create(request: SaveRequest<DepartmentRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<DepartmentRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<DepartmentRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<DepartmentRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function DepartmentList(request: ServiceRequest, onSuccess?: (response: ListResponse<DepartmentRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"OrganisationHierarchy/Department/Create\",\n        Update: \"OrganisationHierarchy/Department/Update\",\n        Delete: \"OrganisationHierarchy/Department/Delete\",\n        Retrieve: \"OrganisationHierarchy/Department/Retrieve\",\n        List: \"OrganisationHierarchy/Department/List\",\n        DepartmentList: \"OrganisationHierarchy/Department/DepartmentList\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'DepartmentList'\n    ].forEach(x => {\n        (<any>DepartmentService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}"],
  "mappings": "+CAEA,IAAAA,EAA+D,SAE9CC,OACAA,EAAA,QAAU,mCASVA,EAAA,QAAU,CACnB,OAAQ,0CACR,OAAQ,0CACR,OAAQ,0CACR,SAAU,4CACV,KAAM,wCACN,eAAgB,iDACpB,EAEA,CACI,SACA,SACA,SACA,WACA,OACA,gBACJ,EAAE,QAAQC,GAAK,CACLD,EAAmBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC7C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA9BYJ,MAAA",
  "names": ["import_q", "DepartmentService", "x", "r", "s", "o"]
}
