{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/EmployeeBasicData/EmployeeBasicData/EmployeeBasicDataDialog.ts", "../../../Modules/ServerTypes/EmployeeBasicData/EmployeeBasicDataColumns.ts", "../../../Modules/ServerTypes/EmployeeBasicData/EmployeeBasicDataForm.ts", "../../../Modules/ServerTypes/EmployeeBasicData/EmployeeBasicDataRow.ts", "../../../Modules/ServerTypes/EmployeeBasicData/EmployeeBasicDataService.ts"],
  "sourcesContent": ["import { Decorators, EntityDialog } from '@serenity-is/corelib';\nimport { EmployeeBasicDataForm, EmployeeBasicDataRow, EmployeeBasicDataService } from '../../../ServerTypes/EmployeeBasicData';\nimport { EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\n\n@Decorators.registerClass('HRMSoftware.EmployeeBasicData.EmployeeBasicDataDialog')\nexport class EmployeeBasicDataDialog extends EntityDialog<EmployeeBasicDataRow, any> {\n    protected getFormKey() { return EmployeeBasicDataForm.formKey; }\n    protected getRowDefinition() { return EmployeeBasicDataRow; }\n    protected getService() { return EmployeeBasicDataService.baseUrl; }\n\n    protected form = new EmployeeBasicDataForm(this.idPrefix);\n    public EmployeeRowID: number;\n    constructor(EmployeeRowID: number) {\n        super();\n        this.EmployeeRowID = EmployeeRowID;\n        this.deleteButton.hide();\n        this.localizationButton.hide();\n        this.undeleteButton.hide();\n        this.cloneButton.hide();\n        this.applyChangesButton.hide();\n        this.saveAndCloseButton.hide();\n\n\n    }\n\n    protected onDialogOpen() {\n        super.onDialogOpen()\n        this.readOnly = true\n        \n        var UserRowId = this.EmployeeRowID\n\n\n        $(this.idPrefix + 'EmployeeImg').hide();\n\n        var fragment = document.createElement(\"img\");\n        fragment.setAttribute(\"id\", \"myImg\");\n        fragment.width = 63;\n        fragment.height = 112.5;\n        EmployeeProfileService.List({\n        }, response => {\n            for (var index in response.Entities) {\n                if (response.Entities[index].Id == UserRowId) {\n                    var form = document.getElementById(this.form.idPrefix +'PropertyGrid') \n                    fragment.src = '/upload/' + response.Entities[index].EmployeeImg\n                    form.firstChild.firstChild.insertBefore(fragment, form.firstChild.firstChild.firstChild)\n                    fragment.style.display = 'block';\n                    fragment.style.margin = '0 auto';\n                    $('.disabled').remove()\n\n                    break\n                }\n            }\n        });\n\n\n    }\n\n}", "\uFEFFimport { EmployeeType } from \"../EmployeeProfile/EmployeeType\";\n\nexport class EmployeeBasicDataColumns {\n    static columnsKey = 'EmployeeBasicData.EmployeeBasicData';\n}\n\n[EmployeeType]; // referenced types", "\uFEFFimport { StringEditor, IntegerEditor, DateEditor, LookupEditor, EnumEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { EmployeeType } from \"../EmployeeProfile/EmployeeType\";\nimport { SexType } from \"../EmployeeProfile/SexType\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeBasicDataForm {\n    EmployeeName: StringEditor;\n    EmployeeId: StringEditor;\n    Age: IntegerEditor;\n    Birthday: DateEditor;\n    Address: StringEditor;\n    TelNumber1: StringEditor;\n    RaceId: LookupEditor;\n    EmployeeType: EnumEditor;\n    Sex: EnumEditor;\n    CityId: LookupEditor;\n    StateId: LookupEditor;\n    NationalityId: LookupEditor;\n}\n\nexport class EmployeeBasicDataForm extends PrefixedContext {\n    static formKey = 'EmployeeBasicData.EmployeeBasicData';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeBasicDataForm.init)  {\n            EmployeeBasicDataForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n            var w2 = DateEditor;\n            var w3 = LookupEditor;\n            var w4 = EnumEditor;\n\n            initFormType(EmployeeBasicDataForm, [\n                'EmployeeName', w0,\n                'EmployeeId', w0,\n                'Age', w1,\n                'Birthday', w2,\n                'Address', w0,\n                'TelNumber1', w0,\n                'RaceId', w3,\n                'EmployeeType', w4,\n                'Sex', w4,\n                'CityId', w3,\n                'StateId', w3,\n                'NationalityId', w3\n            ]);\n        }\n    }\n}\n\n[EmployeeType, SexType]; // referenced types", "\uFEFFimport { EmployeeType } from \"../EmployeeProfile/EmployeeType\";\nimport { SexType } from \"../EmployeeProfile/SexType\";\nimport { MaritalStatus } from \"../EmployeeProfile/MaritalStatus\";\nimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeBasicDataRow {\n    Id?: number;\n    EmployeeName?: string;\n    EmployeeId?: string;\n    Nric?: string;\n    Age?: number;\n    Birthday?: string;\n    Address?: string;\n    TelNumber1?: string;\n    TelNumber2?: string;\n    RaceId?: number;\n    EmployeeType?: EmployeeType;\n    Sex?: SexType;\n    CityId?: number;\n    StateId?: number;\n    EmployeeImg?: string;\n    NationalityId?: number;\n    MaritalStatus?: MaritalStatus;\n    Race?: string;\n    CityName?: string;\n    StateName?: string;\n    NationalityName?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class EmployeeBasicDataRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'EmployeeName';\n    static readonly localTextPrefix = 'EmployeeBasicData.EmployeeBasicData';\n    static readonly deletePermission = 'Administration:Employee';\n    static readonly insertPermission = 'Administration:Employee';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:Employee';\n\n    static readonly Fields = fieldsProxy<EmployeeBasicDataRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeBasicDataRow } from \"./EmployeeBasicDataRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeBasicDataService {\n    export const baseUrl = 'EmployeeBasicData/EmployeeBasicData';\n\n    export declare function Create(request: SaveRequest<EmployeeBasicDataRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeBasicDataRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeBasicDataRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeBasicDataRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeBasicData/EmployeeBasicData/Create\",\n        Update: \"EmployeeBasicData/EmployeeBasicData/Update\",\n        Delete: \"EmployeeBasicData/EmployeeBasicData/Delete\",\n        Retrieve: \"EmployeeBasicData/EmployeeBasicData/Retrieve\",\n        List: \"EmployeeBasicData/EmployeeBasicData/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeeBasicDataService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}"],
  "mappings": "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",
  "names": ["import_corelib", "EmployeeBasicDataColumns", "__name", "import_corelib", "import_q", "_EmployeeBasicDataForm", "prefix", "w0", "w1", "w2", "w3", "w4", "EmployeeBasicDataForm", "__name", "import_q", "EmployeeBasicDataRow", "__name", "import_q", "EmployeeBasicDataService", "x", "r", "s", "o", "EmployeeBasicDataDialog", "EmployeeRowID", "EmployeeBasicDataForm", "EmployeeBasicDataRow", "EmployeeBasicDataService", "UserRowId", "fragment", "EmployeeProfileService", "response", "index", "form", "__name", "__decorateClass"]
}
