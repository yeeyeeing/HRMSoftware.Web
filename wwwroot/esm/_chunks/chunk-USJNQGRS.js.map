{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/PublicHoliday/PublicHolidayService.ts", "../../../Modules/ServerTypes/PublicHoliday/PublicHolidayColumns.ts", "../../../Modules/ServerTypes/PublicHoliday/PublicHolidayForm.ts", "../../../Modules/ServerTypes/PublicHoliday/PublicHolidayRow.ts", "../../../Modules/HumanResource/PublicHoliday/PublicHoliday/PublicHolidayDialog.ts"],
  "sourcesContent": ["\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { PublicHolidayRow } from \"./PublicHolidayRow\";\nimport { ServiceOptions, ServiceRequest, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace PublicHolidayService {\n    export const baseUrl = 'PublicHoliday/PublicHoliday';\n\n    export declare function Create(request: SaveRequest<PublicHolidayRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<PublicHolidayRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<PublicHolidayRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<PublicHolidayRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function ListPublicHoliday(request: ServiceRequest, onSuccess?: (response: ListResponse<PublicHolidayRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"PublicHoliday/PublicHoliday/Create\",\n        Update: \"PublicHoliday/PublicHoliday/Update\",\n        Delete: \"PublicHoliday/PublicHoliday/Delete\",\n        Retrieve: \"PublicHoliday/PublicHoliday/Retrieve\",\n        List: \"PublicHoliday/PublicHoliday/List\",\n        ListPublicHoliday: \"PublicHoliday/PublicHoliday/ListPublicHoliday\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'ListPublicHoliday'\n    ].forEach(x => {\n        (<any>PublicHolidayService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class PublicHolidayColumns {\n    static columnsKey = 'PublicHoliday.PublicHoliday';\n}", "\uFEFFimport { StringEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface PublicHolidayForm {\n    Name: StringEditor;\n    CountryCode: StringEditor;\n    Date: DateEditor;\n}\n\nexport class PublicHolidayForm extends PrefixedContext {\n    static formKey = 'PublicHoliday.PublicHoliday';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!PublicHolidayForm.init)  {\n            PublicHolidayForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DateEditor;\n\n            initFormType(PublicHolidayForm, [\n                'Name', w0,\n                'CountryCode', w0,\n                'Date', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface PublicHolidayRow {\n    Id?: number;\n    Name?: string;\n    Date?: string;\n    CountryCode?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class PublicHolidayRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'PublicHoliday.PublicHoliday';\n    static readonly lookupKey = 'PublicHoliday.PublicHoliday';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<PublicHolidayRow>('PublicHoliday.PublicHoliday') }\n    static async getLookupAsync() { return getLookupAsync<PublicHolidayRow>('PublicHoliday.PublicHoliday') }\n\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = '*';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<PublicHolidayRow>();\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\nimport { PublicHolidayForm, PublicHolidayRow, PublicHolidayService } from '../../../ServerTypes/PublicHoliday';\n\n@Decorators.registerClass('HRMSoftware.PublicHoliday.PublicHolidayDialog')\nexport class PublicHolidayDialog extends EntityDialog<PublicHolidayRow, any> {\n    protected getFormKey() { return PublicHolidayForm.formKey; }\n    protected getRowDefinition() { return PublicHolidayRow; }\n    protected getService() { return PublicHolidayService.baseUrl; }\n\n    protected form = new PublicHolidayForm(this.idPrefix);\n}"],
  "mappings": "4GAEA,IAAAA,EAA+D,SAE9CC,OACAA,EAAA,QAAU,8BASVA,EAAA,QAAU,CACnB,OAAQ,qCACR,OAAQ,qCACR,OAAQ,qCACR,SAAU,uCACV,KAAM,mCACN,kBAAmB,+CACvB,EAEA,CACI,SACA,SACA,SACA,WACA,OACA,mBACJ,EAAE,QAAQC,GAAK,CACLD,EAAsBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAChD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA9BYJ,MAAA,KCJT,IAAMK,EAAN,KAA2B,CAEnC,EAFcC,EAAAD,EAAA,wBAAAA,EACH,WAAa,8BCDvB,IAAAE,EAA0D,SAC3DC,EAA6B,SAQtB,IAAMC,EAAN,cAAgC,iBAAgB,CAInD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAkB,KAAO,CAC1BA,EAAkB,KAAO,GAEzB,IAAIE,EAAK,eACLC,EAAK,gBAET,gBAAaH,EAAmB,CAC5B,OAAQE,EACR,cAAeA,EACf,OAAQC,CACZ,CAAC,CACL,CACJ,CACJ,EApBaC,EAANJ,EAAMK,EAAAD,EAAA,qBAAAA,EACF,QAAU,8BCVpB,IAAAE,EAAuD,SAgBjD,IAAeC,EAAf,KAAgC,CAQnC,OAAO,WAAY,CAAE,SAAO,aAA4B,6BAA6B,CAAE,CACvF,OAAa,gBAAiB,QAAAC,EAAA,sBAAE,SAAO,kBAAiC,6BAA6B,CAAE,GAQ3G,EAjBsBC,EAAAF,EAAA,oBAAAA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,OAHbA,EAIF,gBAAkB,8BAJhBA,EAKF,UAAY,8BALVA,EAWF,iBAAmB,gCAXjBA,EAYF,iBAAmB,gCAZjBA,EAaF,eAAiB,IAbfA,EAcF,iBAAmB,gCAdjBA,EAgBF,UAAS,eAA8B,EChC3D,IAAAG,EAAyC,SAIlC,IAAMC,EAAN,cAAkC,cAAoC,CAAtE,kCAKH,KAAU,KAAO,IAAIC,EAAkB,KAAK,QAAQ,EAJ1C,YAAa,CAAE,OAAOA,EAAkB,OAAS,CACjD,kBAAmB,CAAE,OAAOC,CAAkB,CAC9C,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAGlE,EANaC,EAAAJ,EAAA,uBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,+CAA+C,GAC5DL",
  "names": ["import_q", "PublicHolidayService", "x", "r", "s", "o", "PublicHolidayColumns", "__name", "import_corelib", "import_q", "_PublicHolidayForm", "prefix", "w0", "w1", "PublicHolidayForm", "__name", "import_q", "PublicHolidayRow", "__async", "__name", "import_corelib", "PublicHolidayDialog", "PublicHolidayForm", "PublicHolidayRow", "PublicHolidayService", "__name", "__decorateClass"]
}
