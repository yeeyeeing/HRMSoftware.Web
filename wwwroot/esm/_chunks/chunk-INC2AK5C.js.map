{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/TrainingManagement/ProgramSession/ProgramSessionDialog.ts"],
  "sourcesContent": ["import {ColumnSelection, Criteria, Decorators, EditorUtils, EntityDialog} from '@serenity-is/corelib';\nimport {Authorization} from '@serenity-is/corelib/q';\nimport {\n    ProgramParticipantRoleType,\n    ProgramSessionForm,\n    ProgramSessionRow,\n    ProgramSessionService,\n    ProgramSessionStatusType,\n} from '../../../ServerTypes/TrainingManagement';\nimport {EmployeeProfileService,} from '../../../ServerTypes/EmployeeProfile';\nimport {PermissionKeys} from '../../../ServerTypes/Administration';\n\n@Decorators.registerClass('HRMSoftware.TrainingManagement.ProgramSessionDialog')\nexport class ProgramSessionDialog extends EntityDialog<ProgramSessionRow, any> {\n    protected getFormKey() {\n        return ProgramSessionForm.formKey;\n    }\n\n    protected getRowDefinition() {\n        return ProgramSessionRow;\n    }\n\n    protected getService() {\n        return ProgramSessionService.baseUrl;\n    }\n\n    protected form = new ProgramSessionForm(this.idPrefix);\n\n    public ReadOnly: boolean;\n\n    constructor(ReadOnly = true) {\n        super();\n        this.ReadOnly = ReadOnly;\n    }\n\n    private participantRole = [];\n\n    public dialogOpen(asPanel?: boolean): void {\n        super.dialogOpen(asPanel);\n\n        this.ReadOnly = !(this.isNew() == true || !this.ReadOnly);\n\n        if (this.ReadOnly) {\n            this.saveAndCloseButton.hide();\n            this.applyChangesButton.hide();\n            this.cloneButton.hide();\n            this.deleteButton.hide();\n\n            EditorUtils.setReadonly(this.form.ProgramName.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.StartDate.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.EndDate.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.Detail.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.ExtraDocument.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.DepartmentList.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.Status.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.Comment.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.DateTba.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.OneDay.element, this.ReadOnly);\n            EditorUtils.setReadonly(this.form.ParticipantList.element, this.ReadOnly);\n\n            $('div.category > div.field.FlowList > label[title=\"Flow List\"] + div.editor.s-ProgramFlowEditor.s-DataGrid > div.grid-toolbar.s-Serenity-Toolbar.s-Toolbar.clearfix').hide();\n            $('div.category > div.field.ParticipantList > label[title=\"Participant List\"] + div.editor.s-ProgramParticipantEditor.s-DataGrid > div.grid-toolbar.s-Serenity-Toolbar.s-Toolbar.clearfix').hide();\n\n            if (!Authorization.hasPermission(PermissionKeys.HumanResources)) {\n                $('li.nav-item > a.nav-link:contains(\"Participant List\")').parent().hide();\n                $('div.field.Status > label[title=\"Status\"]').parent().hide();\n                $('div.field.DepartmentList > label[title=\"Department\"]').parent().hide();\n            }\n            \n            this.form.ParticipantList.value = this.form.ParticipantList.value.filter((elem, idx)=>{\n                return elem.Trainee || elem.Staff;\n            });\n        } else {\n            let DateTba = $('#' + this.idPrefix + 'DateTba');\n\n            EditorUtils.setReadonly(this.form.OneDay.element, this.form.DateTba.value);\n            EditorUtils.setReadonly(this.form.StartDate.element, this.form.DateTba.value);\n            EditorUtils.setReadonly(this.form.EndDate.element, this.form.DateTba.value);\n\n            DateTba.on('change', (Event) => {\n                if (this.form.DateTba.value) {\n                    EditorUtils.setReadonly(this.form.OneDay.element, true);\n                    EditorUtils.setReadonly(this.form.StartDate.element, true);\n                    EditorUtils.setReadonly(this.form.EndDate.element, true);\n                } else {\n                    EditorUtils.setReadonly(this.form.OneDay.element, false);\n                    EditorUtils.setReadonly(this.form.StartDate.element, false);\n                    EditorUtils.setReadonly(this.form.EndDate.element, this.form.OneDay.value);\n                }\n            })\n\n            let OneDay = $('#' + this.idPrefix + 'OneDay');\n            let EndDate = $('#' + this.idPrefix + 'EndDate').parent();\n            EditorUtils.setReadonly(this.form.EndDate.element, this.form.OneDay.value);\n\n            OneDay.on('change', (Event) => {\n                EditorUtils.setReadonly(this.form.EndDate.element, this.form.OneDay.value);\n                if (this.form.OneDay.value) {\n                    this.form.EndDate.value = this.form.StartDate.value;\n                    EndDate.hide();\n                } else {\n                    EndDate.show();\n                }\n            });\n\n            let StartDate = $('#' + this.idPrefix + 'StartDate');\n            StartDate.on('change', (Event) => {\n                if (this.form.OneDay.value) {\n                    this.form.EndDate.value = this.form.StartDate.value;\n                }\n            });\n\n            $('#' + this.idPrefix + 'ParticipantList').find('.button-inner:contains(\"Add\")').text('Add by Employee ID');\n            \n            this.form.DepartmentList.element.on(\"change\", event => {\n                this.updateParticipantList();\n            });\n        }\n\n        $('div.field.FlowList' +\n            ' > div' +\n            ' > div.grid-container.slick-container.ltr.ui-widget.sleek-vars' +\n            ' > div.slick-viewport'\n        )\n            .css({\n                'height': 'auto',\n                'min-height': '200px'\n            });\n\n        $('div.field.ParticipantList' +\n            ' > div' +\n            ' > div.grid-container.slick-container.ltr.ui-widget.sleek-vars' +\n            ' > div.slick-viewport'\n        )\n            .css({\n                'height': 'auto',\n                'min-height': '200px'\n            });\n\n        $('div.field.DateTba' +\n            ' > label[title=\"Date TBA\"]' +\n            ' + input.editor.s-BooleanEditor[type=\"checkbox\"]'\n        ).css({\n            'flex': '0 0 auto'\n        });\n\n        $('div.field.OneDay' +\n            ' > label[title=\"One Day\"]' +\n            ' + input.editor.s-BooleanEditor[type=\"checkbox\"]'\n        ).css({\n            'flex': '0 0 auto'\n        });\n\n        let status = $('#' + this.idPrefix + 'Status');\n        let Comment = $('#' + this.idPrefix + 'Comment').parent();\n\n        if (this.form.Status.get_value() != ProgramSessionStatusType.Rejected) {\n            Comment.hide();\n        }\n\n        status.on('change', (Event) => {\n            if (this.form.Status.get_value() != ProgramSessionStatusType.Rejected) {\n                Comment.hide();\n            } else {\n                Comment.show();\n            }\n        });\n    }\n\n    protected updateTitle(): void {\n        this.ReadOnly = !(this.isNew() == true || !this.ReadOnly);\n        if (this.ReadOnly) {\n            this.dialogTitle = 'View Program (' + this.getEntityNameFieldValue() + ')';\n        } else {\n            super.updateTitle();\n        }\n    }\n\n    public updateParticipantList() {\n        let existingParticipantList = {};\n        \n        this.form.ParticipantList.value = this.form.ParticipantList.value.filter((elem)=>{\n            if (elem.Trainee || elem.Staff) {\n                existingParticipantList[elem.EmployeeRowId.toString()] = 1;\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        if (this.form.DepartmentList.values.length > 0) {\n            EmployeeProfileService.List({\n                Criteria: Criteria('DepartmentID').in(this.form.DepartmentList.values),\n                ColumnSelection: ColumnSelection.KeyOnly,\n                IncludeColumns: ['Id', 'EmployeeID', 'EmployeeName'],\n            }, response => {\n                for (const employee of response.Entities) {\n                    if (existingParticipantList[employee.Id.toString()] != 1) {\n                        let list = this.form.ParticipantList.value;\n                        list.push({\n                            \"EmployeeId\": employee.EmployeeID,\n                            \"EmployeeName\": employee.EmployeeName,\n                            \"EmployeeRowId\": employee.Id,\n                            \"ProgramId\": this.entity.Id,\n                        });\n                        this.form.ParticipantList.value = list;\n                    }\n                }\n            });\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["import_corelib", "import_q", "ProgramSessionDialog", "ReadOnly", "ProgramSessionForm", "ProgramSessionRow", "ProgramSessionService", "asPanel", "PermissionKeys", "elem", "idx", "DateTba", "Event", "OneDay", "EndDate", "event", "status", "Comment", "existingParticipantList", "EmployeeProfileService", "response", "employee", "list", "__name", "__decorateClass"]
}
