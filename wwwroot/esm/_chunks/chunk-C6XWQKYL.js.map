{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedEditor.ts", "../../../Modules/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedFormatter.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementColumns.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementDepartmentBindedColumns.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementDepartmentBindedForm.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementDepartmentBindedRow.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementDepartmentBindedService.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementDivisionBindedColumns.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementDivisionBindedForm.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementDivisionBindedRow.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementDivisionBindedService.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementForm.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementGeneratedColumns.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementGeneratedEditorColumns.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementGeneratedEditorForm.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementGeneratedForm.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementGeneratedRow.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementGeneratedService.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementJobGradeBindedColumns.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementJobGradeBindedForm.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementJobGradeBindedRow.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementJobGradeBindedService.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementOccupationBindedColumns.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementOccupationBindedForm.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementOccupationBindedRow.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementOccupationBindedService.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementRow.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementSectionBindedColumns.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementSectionBindedForm.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementSectionBindedRow.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementSectionBindedService.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementService.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementWizardColumns.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementWizardForm.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementWizardRow.ts", "../../../Modules/ServerTypes/Announcement/AnnouncementWizardService.ts", "../../../Modules/ServerTypes/Announcement/RecurringAnnouncementColumns.ts", "../../../Modules/ServerTypes/Announcement/RecurringAnnouncementForm.ts", "../../../Modules/ServerTypes/Announcement/RecurringAnnouncementRow.ts", "../../../Modules/ServerTypes/Announcement/RecurringAnnouncementService.ts", "../../../Modules/ServerTypes/Announcement/RecurringBindedEmployeeColumns.ts", "../../../Modules/ServerTypes/Announcement/RecurringBindedEmployeeForm.ts", "../../../Modules/ServerTypes/Announcement/RecurringBindedEmployeeRow.ts", "../../../Modules/ServerTypes/Announcement/RecurringBindedEmployeeService.ts", "../../../Modules/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedEditDialog.ts"],
  "sourcesContent": ["import { Decorators } from '@serenity-is/corelib';\nimport { GridEditorBase } from \"@serenity-is/extensions\";\nimport { getLookupAsync } from '@serenity-is/corelib/q';\nimport { AnnouncementGeneratedEditorColumns, AnnouncementGeneratedRow, AnnouncementGeneratedService } from '../../../ServerTypes/Announcement';\nimport { AnnouncementGeneratedEditDialog } from './AnnouncementGeneratedEditDialog';\n\n@Decorators.registerEditor('HRMSoftware.Announcement.AnnouncementGeneratedEditorGrid')\nexport class AnnouncementGeneratedEditor extends GridEditorBase<AnnouncementGeneratedRow, any> {\n    protected getColumnsKey() { return AnnouncementGeneratedEditorColumns.columnsKey; }\n    protected getDialogType() { return AnnouncementGeneratedEditDialog; }\n    protected getRowDefinition() { return AnnouncementGeneratedRow; }\n    protected getService() { return AnnouncementGeneratedService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n        this.toolbar.findButton(\"add-button\").toggle(false);\n        this.toolbar.findButton(\"column-picker-button\").toggle(false);\n        $(\".s-ToggleButton\").hide();\n       \n    }\n\n    protected getAddButtonCaption() {\n\n        return \"Add\";\n    }\n\n    validateEntity(row: AnnouncementGeneratedRow, id: number) {\n        if (!super.validateEntity(row, id))\n            return false;\n        var itemId = id ?? row[this.getIdProperty()];\n        getLookupAsync(\"EmployeeProfile.EmployeeProfile\").then(x => {\n            var item = this.view?.getItemById(itemId);\n            if (item) {\n                item.EmployeeID = x.itemById[row.EmployeeRowId].EmployeeID;\n                this.view.updateItem(itemId, item);\n            }\n        });\n        return true;\n    }\n}", "import { Decorators, Formatter, Lookup } from \"@serenity-is/corelib\";\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\n\n@Decorators.registerFormatter('HRMSoftware.AnnouncementGeneratedFormatter')\nexport class AnnouncementGeneratedFormatter implements Formatter {\n\n    format(ctx: FormatterContext) {\n\n        let state = ctx.value as number;\n        if (state == 0)//not yet opened\n            return `<i class=\"fa fa-solid fa-envelope\"></i>`;\n\n        else if (state == 1)\n            return `<i class=\"fas fa-envelope-open\"></i>`\n\n\n    }\n}", "\uFEFFimport { AnnouncementGeneratedFormatter } from \"@/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedFormatter\";\n\nexport class AnnouncementColumns {\n    static columnsKey = 'Announcement.Announcement';\n}\n\n[AnnouncementGeneratedFormatter]; // referenced types", "\uFEFFexport class AnnouncementDepartmentBindedColumns {\n    static columnsKey = 'Announcement.AnnouncementDepartmentBinded';\n}", "\uFEFFimport { IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementDepartmentBindedForm {\n    AnnouncementWizardId: IntegerEditor;\n    DepartmentId: IntegerEditor;\n}\n\nexport class AnnouncementDepartmentBindedForm extends PrefixedContext {\n    static formKey = 'Announcement.AnnouncementDepartmentBinded';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AnnouncementDepartmentBindedForm.init)  {\n            AnnouncementDepartmentBindedForm.init = true;\n\n            var w0 = IntegerEditor;\n\n            initFormType(AnnouncementDepartmentBindedForm, [\n                'AnnouncementWizardId', w0,\n                'DepartmentId', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementDepartmentBindedRow {\n    Id?: number;\n    AnnouncementWizardId?: number;\n    DepartmentId?: number;\n    AnnouncementRecurringId?: number;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class AnnouncementDepartmentBindedRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly localTextPrefix = 'Announcement.AnnouncementDepartmentBinded';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<AnnouncementDepartmentBindedRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { AnnouncementDepartmentBindedRow } from \"./AnnouncementDepartmentBindedRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace AnnouncementDepartmentBindedService {\n    export const baseUrl = 'Announcement/AnnouncementDepartmentBinded';\n\n    export declare function Create(request: SaveRequest<AnnouncementDepartmentBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<AnnouncementDepartmentBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AnnouncementDepartmentBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AnnouncementDepartmentBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/AnnouncementDepartmentBinded/Create\",\n        Update: \"Announcement/AnnouncementDepartmentBinded/Update\",\n        Delete: \"Announcement/AnnouncementDepartmentBinded/Delete\",\n        Retrieve: \"Announcement/AnnouncementDepartmentBinded/Retrieve\",\n        List: \"Announcement/AnnouncementDepartmentBinded/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>AnnouncementDepartmentBindedService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class AnnouncementDivisionBindedColumns {\n    static columnsKey = 'Announcement.AnnouncementDivisionBinded';\n}", "\uFEFFimport { IntegerEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementDivisionBindedForm {\n    AnnouncementWizardId: IntegerEditor;\n    DivisionId: IntegerEditor;\n    InsertDate: DateEditor;\n    UpdateDate: DateEditor;\n    DeleteDate: DateEditor;\n    IsActive: IntegerEditor;\n    InsertUserId: IntegerEditor;\n    UpdateUserId: IntegerEditor;\n    DeleteUserId: IntegerEditor;\n}\n\nexport class AnnouncementDivisionBindedForm extends PrefixedContext {\n    static formKey = 'Announcement.AnnouncementDivisionBinded';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AnnouncementDivisionBindedForm.init)  {\n            AnnouncementDivisionBindedForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = DateEditor;\n\n            initFormType(AnnouncementDivisionBindedForm, [\n                'AnnouncementWizardId', w0,\n                'DivisionId', w0,\n                'InsertDate', w1,\n                'UpdateDate', w1,\n                'DeleteDate', w1,\n                'IsActive', w0,\n                'InsertUserId', w0,\n                'UpdateUserId', w0,\n                'DeleteUserId', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementDivisionBindedRow {\n    Id?: number;\n    AnnouncementWizardId?: number;\n    DivisionId?: number;\n    AnnouncementRecurringId?: number;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class AnnouncementDivisionBindedRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly localTextPrefix = 'Announcement.AnnouncementDivisionBinded';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<AnnouncementDivisionBindedRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { AnnouncementDivisionBindedRow } from \"./AnnouncementDivisionBindedRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace AnnouncementDivisionBindedService {\n    export const baseUrl = 'Announcement/AnnouncementDivisionBinded';\n\n    export declare function Create(request: SaveRequest<AnnouncementDivisionBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<AnnouncementDivisionBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AnnouncementDivisionBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AnnouncementDivisionBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/AnnouncementDivisionBinded/Create\",\n        Update: \"Announcement/AnnouncementDivisionBinded/Update\",\n        Delete: \"Announcement/AnnouncementDivisionBinded/Delete\",\n        Retrieve: \"Announcement/AnnouncementDivisionBinded/Retrieve\",\n        List: \"Announcement/AnnouncementDivisionBinded/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>AnnouncementDivisionBindedService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, MultipleImageUploadEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementForm {\n    AnnouncerID: StringEditor;\n    AnnouncerName: StringEditor;\n    AnnouncementContent: StringEditor;\n    UploadDocument: MultipleImageUploadEditor;\n}\n\nexport class AnnouncementForm extends PrefixedContext {\n    static formKey = 'Announcement.Announcement';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AnnouncementForm.init)  {\n            AnnouncementForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = MultipleImageUploadEditor;\n\n            initFormType(AnnouncementForm, [\n                'AnnouncerID', w0,\n                'AnnouncerName', w0,\n                'AnnouncementContent', w0,\n                'UploadDocument', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { AnnouncementGeneratedFormatter } from \"@/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedFormatter\";\n\nexport class AnnouncementGeneratedColumns {\n    static columnsKey = 'Announcement.AnnouncementGenerated';\n}\n\n[AnnouncementGeneratedFormatter]; // referenced types", "\uFEFFexport class AnnouncementGeneratedEditorColumns {\n    static columnsKey = 'Announcement.AnnouncementGeneratedEditorColumns';\n}", "\uFEFFimport { LookupEditor, StringEditor, MultipleImageUploadEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementGeneratedEditorForm {\n    EmployeeRowId: LookupEditor;\n    EmployeeName: StringEditor;\n    AnnouncementContent: StringEditor;\n    UploadDocument: MultipleImageUploadEditor;\n}\n\nexport class AnnouncementGeneratedEditorForm extends PrefixedContext {\n    static formKey = 'Announcement.AnnouncementGeneratedEditor';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AnnouncementGeneratedEditorForm.init)  {\n            AnnouncementGeneratedEditorForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = StringEditor;\n            var w2 = MultipleImageUploadEditor;\n\n            initFormType(AnnouncementGeneratedEditorForm, [\n                'EmployeeRowId', w0,\n                'EmployeeName', w1,\n                'AnnouncementContent', w1,\n                'UploadDocument', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { BooleanEditor, DateEditor, StringEditor, LookupEditor, TextAreaEditor, MultipleImageUploadEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementGeneratedForm {\n    Immediate: BooleanEditor;\n    Delayed: BooleanEditor;\n    AnnouncementDateTime: DateEditor;\n    AnnouncementTime: StringEditor;\n    EmployeeRowId: LookupEditor;\n    AnnouncementContent: TextAreaEditor;\n    UploadDocument: MultipleImageUploadEditor;\n    BindToOccupation: BooleanEditor;\n    BindToDepartment: BooleanEditor;\n    BindToDivision: BooleanEditor;\n    BindToJobGrade: BooleanEditor;\n    BindToSection: BooleanEditor;\n    Remarks: StringEditor;\n}\n\nexport class AnnouncementGeneratedForm extends PrefixedContext {\n    static formKey = 'Announcement.AnnouncementGenerated';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AnnouncementGeneratedForm.init)  {\n            AnnouncementGeneratedForm.init = true;\n\n            var w0 = BooleanEditor;\n            var w1 = DateEditor;\n            var w2 = StringEditor;\n            var w3 = LookupEditor;\n            var w4 = TextAreaEditor;\n            var w5 = MultipleImageUploadEditor;\n\n            initFormType(AnnouncementGeneratedForm, [\n                'Immediate', w0,\n                'Delayed', w0,\n                'AnnouncementDateTime', w1,\n                'AnnouncementTime', w2,\n                'EmployeeRowId', w3,\n                'AnnouncementContent', w4,\n                'UploadDocument', w5,\n                'BindToOccupation', w0,\n                'BindToDepartment', w0,\n                'BindToDivision', w0,\n                'BindToJobGrade', w0,\n                'BindToSection', w0,\n                'Remarks', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementGeneratedRow {\n    Immediate?: boolean;\n    Delayed?: boolean;\n    Remarks?: string;\n    AnnouncementDateTime?: string;\n    AnnouncementTime?: string;\n    EmployeeID?: string;\n    UploadDocument?: string;\n    Id?: number;\n    AnnouncementContent?: string;\n    GeneratedWizardId?: number;\n    GeneratedRecurringId?: number;\n    Viewed?: number;\n    EmployeeRowId?: number;\n    EmployeeName?: string;\n    ViewTime?: string;\n    BindToOccupation?: boolean;\n    BindToDepartment?: boolean;\n    BindToDivision?: boolean;\n    BindToJobGrade?: boolean;\n    BindToSection?: boolean;\n    EmployeeOccupation?: number;\n    EmployeeDepartment?: number;\n    EmployeeDivision?: number;\n    EmployeeJobGrade?: number;\n    EmployeeSection?: number;\n    DepartmentDept?: string;\n    Division?: string;\n    Section?: string;\n    JobGrade?: string;\n    Occupation?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class AnnouncementGeneratedRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly localTextPrefix = 'Announcement.AnnouncementGenerated';\n    static readonly deletePermission = '*';\n    static readonly insertPermission = '*';\n    static readonly readPermission = '*';\n    static readonly updatePermission = '*';\n\n    static readonly Fields = fieldsProxy<AnnouncementGeneratedRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { AnnouncementGeneratedRow } from \"./AnnouncementGeneratedRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace AnnouncementGeneratedService {\n    export const baseUrl = 'Announcement/AnnouncementGenerated';\n\n    export declare function Create(request: SaveRequest<AnnouncementGeneratedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<AnnouncementGeneratedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AnnouncementGeneratedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AnnouncementGeneratedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/AnnouncementGenerated/Create\",\n        Update: \"Announcement/AnnouncementGenerated/Update\",\n        Delete: \"Announcement/AnnouncementGenerated/Delete\",\n        Retrieve: \"Announcement/AnnouncementGenerated/Retrieve\",\n        List: \"Announcement/AnnouncementGenerated/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>AnnouncementGeneratedService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class AnnouncementJobGradeBindedColumns {\n    static columnsKey = 'Announcement.AnnouncementJobGradeBinded';\n}", "\uFEFFimport { IntegerEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementJobGradeBindedForm {\n    AnnouncementWizardId: IntegerEditor;\n    JobGradeId: IntegerEditor;\n    InsertDate: DateEditor;\n    UpdateDate: DateEditor;\n    DeleteDate: DateEditor;\n    IsActive: IntegerEditor;\n    InsertUserId: IntegerEditor;\n    UpdateUserId: IntegerEditor;\n    DeleteUserId: IntegerEditor;\n}\n\nexport class AnnouncementJobGradeBindedForm extends PrefixedContext {\n    static formKey = 'Announcement.AnnouncementJobGradeBinded';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AnnouncementJobGradeBindedForm.init)  {\n            AnnouncementJobGradeBindedForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = DateEditor;\n\n            initFormType(AnnouncementJobGradeBindedForm, [\n                'AnnouncementWizardId', w0,\n                'JobGradeId', w0,\n                'InsertDate', w1,\n                'UpdateDate', w1,\n                'DeleteDate', w1,\n                'IsActive', w0,\n                'InsertUserId', w0,\n                'UpdateUserId', w0,\n                'DeleteUserId', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementJobGradeBindedRow {\n    Id?: number;\n    AnnouncementWizardId?: number;\n    JobGradeId?: number;\n    AnnouncementRecurringId?: number;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class AnnouncementJobGradeBindedRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly localTextPrefix = 'Announcement.AnnouncementJobGradeBinded';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<AnnouncementJobGradeBindedRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { AnnouncementJobGradeBindedRow } from \"./AnnouncementJobGradeBindedRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace AnnouncementJobGradeBindedService {\n    export const baseUrl = 'Announcement/AnnouncementJobGradeBinded';\n\n    export declare function Create(request: SaveRequest<AnnouncementJobGradeBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<AnnouncementJobGradeBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AnnouncementJobGradeBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AnnouncementJobGradeBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/AnnouncementJobGradeBinded/Create\",\n        Update: \"Announcement/AnnouncementJobGradeBinded/Update\",\n        Delete: \"Announcement/AnnouncementJobGradeBinded/Delete\",\n        Retrieve: \"Announcement/AnnouncementJobGradeBinded/Retrieve\",\n        List: \"Announcement/AnnouncementJobGradeBinded/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>AnnouncementJobGradeBindedService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class AnnouncementOccupationBindedColumns {\n    static columnsKey = 'Announcement.AnnouncementOccupationBinded';\n}", "\uFEFFimport { IntegerEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementOccupationBindedForm {\n    AnnouncementWizardId: IntegerEditor;\n    OccupationId: IntegerEditor;\n    InsertDate: DateEditor;\n    UpdateDate: DateEditor;\n    DeleteDate: DateEditor;\n    IsActive: IntegerEditor;\n    InsertUserId: IntegerEditor;\n    UpdateUserId: IntegerEditor;\n    DeleteUserId: IntegerEditor;\n}\n\nexport class AnnouncementOccupationBindedForm extends PrefixedContext {\n    static formKey = 'Announcement.AnnouncementOccupationBinded';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AnnouncementOccupationBindedForm.init)  {\n            AnnouncementOccupationBindedForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = DateEditor;\n\n            initFormType(AnnouncementOccupationBindedForm, [\n                'AnnouncementWizardId', w0,\n                'OccupationId', w0,\n                'InsertDate', w1,\n                'UpdateDate', w1,\n                'DeleteDate', w1,\n                'IsActive', w0,\n                'InsertUserId', w0,\n                'UpdateUserId', w0,\n                'DeleteUserId', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementOccupationBindedRow {\n    Id?: number;\n    AnnouncementWizardId?: number;\n    OccupationId?: number;\n    AnnouncementRecurringId?: number;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class AnnouncementOccupationBindedRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly localTextPrefix = 'Announcement.AnnouncementOccupationBinded';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<AnnouncementOccupationBindedRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { AnnouncementOccupationBindedRow } from \"./AnnouncementOccupationBindedRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace AnnouncementOccupationBindedService {\n    export const baseUrl = 'Announcement/AnnouncementOccupationBinded';\n\n    export declare function Create(request: SaveRequest<AnnouncementOccupationBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<AnnouncementOccupationBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AnnouncementOccupationBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AnnouncementOccupationBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/AnnouncementOccupationBinded/Create\",\n        Update: \"Announcement/AnnouncementOccupationBinded/Update\",\n        Delete: \"Announcement/AnnouncementOccupationBinded/Delete\",\n        Retrieve: \"Announcement/AnnouncementOccupationBinded/Retrieve\",\n        List: \"Announcement/AnnouncementOccupationBinded/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>AnnouncementOccupationBindedService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementRow {\n    Id?: number;\n    Hide?: number;\n    AnnouncerEmployeeRowId?: number;\n    AnnouncerName?: string;\n    AnnouncerID?: string;\n    AnnouncementContent?: string;\n    UploadDocument?: string;\n    EmployeeRowId?: number;\n    ViewTime?: string;\n    Viewed?: number;\n    AnnouncementDateTime?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class AnnouncementRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly localTextPrefix = 'Announcement.Announcement';\n    static readonly deletePermission = 'Administration:Employee';\n    static readonly insertPermission = 'Administration:Employee';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:Employee';\n\n    static readonly Fields = fieldsProxy<AnnouncementRow>();\n}", "\uFEFFexport class AnnouncementSectionBindedColumns {\n    static columnsKey = 'Announcement.AnnouncementSectionBinded';\n}", "\uFEFFimport { IntegerEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementSectionBindedForm {\n    AnnouncementWizardId: IntegerEditor;\n    SectionId: IntegerEditor;\n    InsertDate: DateEditor;\n    UpdateDate: DateEditor;\n    DeleteDate: DateEditor;\n    IsActive: IntegerEditor;\n    InsertUserId: IntegerEditor;\n    UpdateUserId: IntegerEditor;\n    DeleteUserId: IntegerEditor;\n}\n\nexport class AnnouncementSectionBindedForm extends PrefixedContext {\n    static formKey = 'Announcement.AnnouncementSectionBinded';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AnnouncementSectionBindedForm.init)  {\n            AnnouncementSectionBindedForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = DateEditor;\n\n            initFormType(AnnouncementSectionBindedForm, [\n                'AnnouncementWizardId', w0,\n                'SectionId', w0,\n                'InsertDate', w1,\n                'UpdateDate', w1,\n                'DeleteDate', w1,\n                'IsActive', w0,\n                'InsertUserId', w0,\n                'UpdateUserId', w0,\n                'DeleteUserId', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementSectionBindedRow {\n    Id?: number;\n    AnnouncementWizardId?: number;\n    SectionId?: number;\n    AnnouncementRecurringId?: number;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class AnnouncementSectionBindedRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly localTextPrefix = 'Announcement.AnnouncementSectionBinded';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<AnnouncementSectionBindedRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { AnnouncementSectionBindedRow } from \"./AnnouncementSectionBindedRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace AnnouncementSectionBindedService {\n    export const baseUrl = 'Announcement/AnnouncementSectionBinded';\n\n    export declare function Create(request: SaveRequest<AnnouncementSectionBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<AnnouncementSectionBindedRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AnnouncementSectionBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AnnouncementSectionBindedRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/AnnouncementSectionBinded/Create\",\n        Update: \"Announcement/AnnouncementSectionBinded/Update\",\n        Delete: \"Announcement/AnnouncementSectionBinded/Delete\",\n        Retrieve: \"Announcement/AnnouncementSectionBinded/Retrieve\",\n        List: \"Announcement/AnnouncementSectionBinded/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>AnnouncementSectionBindedService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { AnnouncementRow } from \"./AnnouncementRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace AnnouncementService {\n    export const baseUrl = 'Announcement/Announcement';\n\n    export declare function Create(request: SaveRequest<AnnouncementRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<AnnouncementRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AnnouncementRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AnnouncementRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/Announcement/Create\",\n        Update: \"Announcement/Announcement/Update\",\n        Delete: \"Announcement/Announcement/Delete\",\n        Retrieve: \"Announcement/Announcement/Retrieve\",\n        List: \"Announcement/Announcement/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>AnnouncementService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StatusFormatter } from \"@/HumanResource/PayrollSettings/NoPaidLeave/StatusFormatter\";\n\nexport class AnnouncementWizardColumns {\n    static columnsKey = 'Announcement.AnnouncementWizard';\n}\n\n[StatusFormatter]; // referenced types", "\uFEFFimport { TextAreaEditor, MultipleImageUploadEditor, BooleanEditor, DateEditor, StringEditor, LookupEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { AnnouncementGeneratedEditor } from \"@/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedEditor\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementWizardForm {\n    AnnouncementContent: TextAreaEditor;\n    UploadDocument: MultipleImageUploadEditor;\n    Immediate: BooleanEditor;\n    Delayed: BooleanEditor;\n    AnnouncementDateTime: DateEditor;\n    AnnouncementTime: StringEditor;\n    Remarks: StringEditor;\n    BindToOccupation: BooleanEditor;\n    BindToDepartment: BooleanEditor;\n    BindToDivision: BooleanEditor;\n    BindToJobGrade: BooleanEditor;\n    BindToSection: BooleanEditor;\n    OccupationListActual: LookupEditor;\n    DepartmentListActual: LookupEditor;\n    DivisionListActual: LookupEditor;\n    JobGradeListActual: LookupEditor;\n    SectionListActual: LookupEditor;\n    EmployeeRowList: LookupEditor;\n    All: BooleanEditor;\n    AnnouncementList: AnnouncementGeneratedEditor;\n}\n\nexport class AnnouncementWizardForm extends PrefixedContext {\n    static formKey = 'Announcement.AnnouncementWizard';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!AnnouncementWizardForm.init)  {\n            AnnouncementWizardForm.init = true;\n\n            var w0 = TextAreaEditor;\n            var w1 = MultipleImageUploadEditor;\n            var w2 = BooleanEditor;\n            var w3 = DateEditor;\n            var w4 = StringEditor;\n            var w5 = LookupEditor;\n            var w6 = AnnouncementGeneratedEditor;\n\n            initFormType(AnnouncementWizardForm, [\n                'AnnouncementContent', w0,\n                'UploadDocument', w1,\n                'Immediate', w2,\n                'Delayed', w2,\n                'AnnouncementDateTime', w3,\n                'AnnouncementTime', w4,\n                'Remarks', w4,\n                'BindToOccupation', w2,\n                'BindToDepartment', w2,\n                'BindToDivision', w2,\n                'BindToJobGrade', w2,\n                'BindToSection', w2,\n                'OccupationListActual', w5,\n                'DepartmentListActual', w5,\n                'DivisionListActual', w5,\n                'JobGradeListActual', w5,\n                'SectionListActual', w5,\n                'EmployeeRowList', w5,\n                'All', w2,\n                'AnnouncementList', w6\n            ]);\n        }\n    }\n}", "\uFEFFimport { AnnouncementGeneratedRow } from \"./AnnouncementGeneratedRow\";\nimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface AnnouncementWizardRow {\n    Immediate?: boolean;\n    Delayed?: boolean;\n    Remarks?: string;\n    Today?: string;\n    AnnouncementDateTime?: string;\n    AnnouncementTime?: string;\n    All?: boolean;\n    EmployeeRowList?: number[];\n    AnnouncementList?: AnnouncementGeneratedRow[];\n    Id?: number;\n    AnnouncementContent?: string;\n    UploadDocument?: string;\n    IssuedBy?: number;\n    OccupationListActual?: number[];\n    DepartmentListActual?: number[];\n    DivisionListActual?: number[];\n    JobGradeListActual?: number[];\n    SectionListActual?: number[];\n    BindToOccupation?: boolean;\n    BindToDepartment?: boolean;\n    BindToDivision?: boolean;\n    BindToJobGrade?: boolean;\n    BindToSection?: boolean;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class AnnouncementWizardRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'AnnouncementContent';\n    static readonly localTextPrefix = 'Announcement.AnnouncementWizard';\n    static readonly deletePermission = 'Administration:Employee';\n    static readonly insertPermission = 'Administration:Employee';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:Employee';\n\n    static readonly Fields = fieldsProxy<AnnouncementWizardRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { AnnouncementWizardRow } from \"./AnnouncementWizardRow\";\nimport { ServiceOptions, ServiceRequest, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace AnnouncementWizardService {\n    export const baseUrl = 'Announcement/AnnouncementWizard';\n\n    export declare function Create(request: SaveRequest<AnnouncementWizardRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<AnnouncementWizardRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<AnnouncementWizardRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<AnnouncementWizardRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function GetTodayDateTime(request: ServiceRequest, onSuccess?: (response: string) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/AnnouncementWizard/Create\",\n        Update: \"Announcement/AnnouncementWizard/Update\",\n        Delete: \"Announcement/AnnouncementWizard/Delete\",\n        Retrieve: \"Announcement/AnnouncementWizard/Retrieve\",\n        List: \"Announcement/AnnouncementWizard/List\",\n        GetTodayDateTime: \"Announcement/AnnouncementWizard/GetTodayDateTime\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'GetTodayDateTime'\n    ].forEach(x => {\n        (<any>AnnouncementWizardService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StatusFormatter } from \"@/HumanResource/PayrollSettings/NoPaidLeave/StatusFormatter\";\n\nexport class RecurringAnnouncementColumns {\n    static columnsKey = 'Announcement.RecurringAnnouncement';\n}\n\n[StatusFormatter]; // referenced types", "\uFEFFimport { StringEditor, TextAreaEditor, MultipleImageUploadEditor, BooleanEditor, LookupEditor, DateEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { AnnouncementGeneratedEditor } from \"@/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedEditor\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface RecurringAnnouncementForm {\n    Name: StringEditor;\n    AnnouncementContent: TextAreaEditor;\n    UploadDocument: MultipleImageUploadEditor;\n    BindToOccupation: BooleanEditor;\n    BindToDepartment: BooleanEditor;\n    BindToDivision: BooleanEditor;\n    BindToJobGrade: BooleanEditor;\n    BindToSection: BooleanEditor;\n    OccupationListActual: LookupEditor;\n    DepartmentListActual: LookupEditor;\n    DivisionListActual: LookupEditor;\n    JobGradeListActual: LookupEditor;\n    SectionListActual: LookupEditor;\n    EmployeeListActual: LookupEditor;\n    All: BooleanEditor;\n    StartingDateTime: DateEditor;\n    RecurringTime: StringEditor;\n    DaysOfWeekRecurring: BooleanEditor;\n    DaysPerRecurring: BooleanEditor;\n    IntervalInDays: IntegerEditor;\n    Sunday: BooleanEditor;\n    Monday: BooleanEditor;\n    Tuesday: BooleanEditor;\n    Wednesday: BooleanEditor;\n    Thursday: BooleanEditor;\n    Friday: BooleanEditor;\n    Saturday: BooleanEditor;\n    Remarks: TextAreaEditor;\n    AnnouncementList: AnnouncementGeneratedEditor;\n}\n\nexport class RecurringAnnouncementForm extends PrefixedContext {\n    static formKey = 'Announcement.RecurringAnnouncement';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!RecurringAnnouncementForm.init)  {\n            RecurringAnnouncementForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = TextAreaEditor;\n            var w2 = MultipleImageUploadEditor;\n            var w3 = BooleanEditor;\n            var w4 = LookupEditor;\n            var w5 = DateEditor;\n            var w6 = IntegerEditor;\n            var w7 = AnnouncementGeneratedEditor;\n\n            initFormType(RecurringAnnouncementForm, [\n                'Name', w0,\n                'AnnouncementContent', w1,\n                'UploadDocument', w2,\n                'BindToOccupation', w3,\n                'BindToDepartment', w3,\n                'BindToDivision', w3,\n                'BindToJobGrade', w3,\n                'BindToSection', w3,\n                'OccupationListActual', w4,\n                'DepartmentListActual', w4,\n                'DivisionListActual', w4,\n                'JobGradeListActual', w4,\n                'SectionListActual', w4,\n                'EmployeeListActual', w4,\n                'All', w3,\n                'StartingDateTime', w5,\n                'RecurringTime', w0,\n                'DaysOfWeekRecurring', w3,\n                'DaysPerRecurring', w3,\n                'IntervalInDays', w6,\n                'Sunday', w3,\n                'Monday', w3,\n                'Tuesday', w3,\n                'Wednesday', w3,\n                'Thursday', w3,\n                'Friday', w3,\n                'Saturday', w3,\n                'Remarks', w1,\n                'AnnouncementList', w7\n            ]);\n        }\n    }\n}", "\uFEFFimport { AnnouncementGeneratedRow } from \"./AnnouncementGeneratedRow\";\nimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface RecurringAnnouncementRow {\n    AnnouncementList?: AnnouncementGeneratedRow[];\n    All?: boolean;\n    Id?: number;\n    StartingDateTime?: string;\n    AnnouncementContent?: string;\n    UploadDocument?: string;\n    RecurringTime?: string;\n    Remarks?: string;\n    IntervalInDays?: number;\n    Name?: string;\n    DaysOfWeekRecurring?: boolean;\n    DaysPerRecurring?: boolean;\n    Sunday?: boolean;\n    Monday?: boolean;\n    Tuesday?: boolean;\n    Wednesday?: boolean;\n    Thursday?: boolean;\n    Friday?: boolean;\n    Saturday?: boolean;\n    OccupationListActual?: number[];\n    DepartmentListActual?: number[];\n    DivisionListActual?: number[];\n    JobGradeListActual?: number[];\n    SectionListActual?: number[];\n    EmployeeListActual?: number[];\n    BindToOccupation?: boolean;\n    BindToDepartment?: boolean;\n    BindToDivision?: boolean;\n    BindToJobGrade?: boolean;\n    BindToSection?: boolean;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class RecurringAnnouncementRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Announcement.RecurringAnnouncement';\n    static readonly deletePermission = 'Administration:Employee';\n    static readonly insertPermission = 'Administration:Employee';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:Employee';\n\n    static readonly Fields = fieldsProxy<RecurringAnnouncementRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { RecurringAnnouncementRow } from \"./RecurringAnnouncementRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace RecurringAnnouncementService {\n    export const baseUrl = 'Announcement/RecurringAnnouncement';\n\n    export declare function Create(request: SaveRequest<RecurringAnnouncementRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<RecurringAnnouncementRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<RecurringAnnouncementRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<RecurringAnnouncementRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/RecurringAnnouncement/Create\",\n        Update: \"Announcement/RecurringAnnouncement/Update\",\n        Delete: \"Announcement/RecurringAnnouncement/Delete\",\n        Retrieve: \"Announcement/RecurringAnnouncement/Retrieve\",\n        List: \"Announcement/RecurringAnnouncement/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>RecurringAnnouncementService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class RecurringBindedEmployeeColumns {\n    static columnsKey = 'Announcement.RecurringBindedEmployee';\n}", "\uFEFFimport { IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface RecurringBindedEmployeeForm {\n    EmployeeRowId: IntegerEditor;\n    RecurringId: IntegerEditor;\n}\n\nexport class RecurringBindedEmployeeForm extends PrefixedContext {\n    static formKey = 'Announcement.RecurringBindedEmployee';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!RecurringBindedEmployeeForm.init)  {\n            RecurringBindedEmployeeForm.init = true;\n\n            var w0 = IntegerEditor;\n\n            initFormType(RecurringBindedEmployeeForm, [\n                'EmployeeRowId', w0,\n                'RecurringId', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface RecurringBindedEmployeeRow {\n    Id?: number;\n    EmployeeRowId?: number;\n    RecurringId?: number;\n}\n\nexport abstract class RecurringBindedEmployeeRow {\n    static readonly idProperty = 'Id';\n    static readonly localTextPrefix = 'Announcement.RecurringBindedEmployee';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<RecurringBindedEmployeeRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { RecurringBindedEmployeeRow } from \"./RecurringBindedEmployeeRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace RecurringBindedEmployeeService {\n    export const baseUrl = 'Announcement/RecurringBindedEmployee';\n\n    export declare function Create(request: SaveRequest<RecurringBindedEmployeeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<RecurringBindedEmployeeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<RecurringBindedEmployeeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<RecurringBindedEmployeeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Announcement/RecurringBindedEmployee/Create\",\n        Update: \"Announcement/RecurringBindedEmployee/Update\",\n        Delete: \"Announcement/RecurringBindedEmployee/Delete\",\n        Retrieve: \"Announcement/RecurringBindedEmployee/Retrieve\",\n        List: \"Announcement/RecurringBindedEmployee/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>RecurringBindedEmployeeService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\nimport { AnnouncementGeneratedEditorForm  } from '../../../ServerTypes/Announcement';\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\nimport { AnnouncementGeneratedRow, AnnouncementGeneratedService } from '../../../ServerTypes/Announcement';\nimport { getLookupAsync } from '@serenity-is/corelib/q';\nimport { EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\n\n@Decorators.registerClass('HRMSoftware.Announcement.AnnouncementGeneratedEditDialog')\nexport class AnnouncementGeneratedEditDialog extends GridEditorDialog<AnnouncementGeneratedRow> {\n    protected getFormKey() { return AnnouncementGeneratedEditorForm.formKey; }\n    protected getRowDefinition() { return AnnouncementGeneratedRow; }\n    protected getService() { return AnnouncementGeneratedService.baseUrl; }\n\n    protected form: AnnouncementGeneratedEditorForm ;\n    constructor() {\n        super();\n        this.form = new AnnouncementGeneratedEditorForm(this.idPrefix);\n\n    }\n\n    protected onDialogOpen() {\n        super.onDialogOpen()\n        var self = this\n        this.saveAndCloseButton.remove()\n        this.deleteButton.remove()\n\n        this.readOnly = true\n\n        EmployeeProfileService.Retrieve({\n            EntityId: self.form.EmployeeRowId.value\n        }, response => {\n            self.form.EmployeeName.value = response.Entity.EmployeeName\n\n        })\n\n   \n\n    }\n\n\n}"],
  "mappings": "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",
  "names": ["import_corelib", "import_extensions", "import_q", "import_corelib", "AnnouncementGeneratedFormatter", "ctx", "state", "__name", "__decorateClass", "AnnouncementColumns", "__name", "AnnouncementDepartmentBindedColumns", "__name", "import_corelib", "import_q", "_AnnouncementDepartmentBindedForm", "prefix", "w0", "AnnouncementDepartmentBindedForm", "__name", "import_q", "AnnouncementDepartmentBindedRow", "__name", "import_q", "AnnouncementDepartmentBindedService", "x", "r", "s", "o", "AnnouncementDivisionBindedColumns", "__name", "import_corelib", "import_q", "_AnnouncementDivisionBindedForm", "prefix", "w0", "w1", "AnnouncementDivisionBindedForm", "__name", "import_q", "AnnouncementDivisionBindedRow", "__name", "import_q", "AnnouncementDivisionBindedService", "x", "r", "s", "o", "import_corelib", "import_q", "_AnnouncementForm", "prefix", "w0", "w1", "AnnouncementForm", "__name", "AnnouncementGeneratedColumns", "__name", "AnnouncementGeneratedEditorColumns", "__name", "import_corelib", "import_q", "_AnnouncementGeneratedEditorForm", "prefix", "w0", "w1", "w2", "AnnouncementGeneratedEditorForm", "__name", "import_corelib", "import_q", "_AnnouncementGeneratedForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "AnnouncementGeneratedForm", "__name", "import_q", "AnnouncementGeneratedRow", "__name", "import_q", "AnnouncementGeneratedService", "x", "r", "s", "o", "AnnouncementJobGradeBindedColumns", "__name", "import_corelib", "import_q", "_AnnouncementJobGradeBindedForm", "prefix", "w0", "w1", "AnnouncementJobGradeBindedForm", "__name", "import_q", "AnnouncementJobGradeBindedRow", "__name", "import_q", "AnnouncementJobGradeBindedService", "x", "r", "s", "o", "AnnouncementOccupationBindedColumns", "__name", "import_corelib", "import_q", "_AnnouncementOccupationBindedForm", "prefix", "w0", "w1", "AnnouncementOccupationBindedForm", "__name", "import_q", "AnnouncementOccupationBindedRow", "__name", "import_q", "AnnouncementOccupationBindedService", "x", "r", "s", "o", "import_q", "AnnouncementRow", "__name", "AnnouncementSectionBindedColumns", "__name", "import_corelib", "import_q", "_AnnouncementSectionBindedForm", "prefix", "w0", "w1", "AnnouncementSectionBindedForm", "__name", "import_q", "AnnouncementSectionBindedRow", "__name", "import_q", "AnnouncementSectionBindedService", "x", "r", "s", "o", "import_q", "AnnouncementService", "x", "r", "s", "o", "AnnouncementWizardColumns", "__name", "import_corelib", "import_q", "_AnnouncementWizardForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "w6", "AnnouncementGeneratedEditor", "AnnouncementWizardForm", "__name", "import_q", "AnnouncementWizardRow", "__name", "import_q", "AnnouncementWizardService", "x", "r", "s", "o", "RecurringAnnouncementColumns", "__name", "import_corelib", "import_q", "_RecurringAnnouncementForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "w6", "w7", "AnnouncementGeneratedEditor", "RecurringAnnouncementForm", "__name", "import_q", "RecurringAnnouncementRow", "__name", "import_q", "RecurringAnnouncementService", "x", "r", "s", "o", "RecurringBindedEmployeeColumns", "__name", "import_corelib", "import_q", "_RecurringBindedEmployeeForm", "prefix", "w0", "RecurringBindedEmployeeForm", "__name", "import_q", "RecurringBindedEmployeeRow", "__name", "import_q", "RecurringBindedEmployeeService", "x", "r", "s", "o", "import_corelib", "import_extensions", "AnnouncementGeneratedEditDialog", "AnnouncementGeneratedEditorForm", "AnnouncementGeneratedRow", "AnnouncementGeneratedService", "self", "EmployeeProfileService", "response", "__name", "__decorateClass", "AnnouncementGeneratedEditor", "AnnouncementGeneratedEditorColumns", "AnnouncementGeneratedEditDialog", "AnnouncementGeneratedRow", "AnnouncementGeneratedService", "container", "row", "id", "itemId", "x", "_a", "item", "__name", "__decorateClass"]
}
