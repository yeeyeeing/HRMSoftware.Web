{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/EmployeeProfile/EmployeeProfileService.ts", "../../../Modules/ServerTypes/EmployeeProfile/EmployeeProfileRow.ts"],
  "sourcesContent": ["\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeProfileRow } from \"./EmployeeProfileRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeProfileService {\n    export const baseUrl = 'EmployeeProfile/EmployeeProfile';\n\n    export declare function Create(request: SaveRequest<EmployeeProfileRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeProfileRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeProfileRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeProfileRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function EmployeeProfileBasedOnID(request: number, onSuccess?: (response: ListResponse<EmployeeProfileRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function CalculateWorkingHourAndDay(request: number, onSuccess?: (response: ListResponse<EmployeeProfileRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeProfile/EmployeeProfile/Create\",\n        Update: \"EmployeeProfile/EmployeeProfile/Update\",\n        Delete: \"EmployeeProfile/EmployeeProfile/Delete\",\n        Retrieve: \"EmployeeProfile/EmployeeProfile/Retrieve\",\n        List: \"EmployeeProfile/EmployeeProfile/List\",\n        EmployeeProfileBasedOnID: \"EmployeeProfile/EmployeeProfile/EmployeeProfileBasedOnID\",\n        CalculateWorkingHourAndDay: \"EmployeeProfile/EmployeeProfile/CalculateWorkingHourAndDay\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'EmployeeProfileBasedOnID', \n        'CalculateWorkingHourAndDay'\n    ].forEach(x => {\n        (<any>EmployeeProfileService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { EmployeeCareerPathRow } from \"./EmployeeCareerPathRow\";\nimport { EmployeeCp38Row } from \"./EmployeeCp38Row\";\nimport { EmployeeAllowanceRow } from \"./EmployeeAllowanceRow\";\nimport { FixedDeductionRow } from \"./FixedDeductionRow\";\nimport { MaritalStatus } from \"./MaritalStatus\";\nimport { EmployeeType } from \"./EmployeeType\";\nimport { SexType } from \"./SexType\";\nimport { SOCSOClass } from \"./SOCSOClass\";\nimport { EPFClass } from \"./EPFClass\";\nimport { EISClass } from \"./EISClass\";\nimport { HRDFClass } from \"./HRDFClass\";\nimport { ProbationClass } from \"./ProbationClass\";\nimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeProfileRow {\n    OldNRIC?: string;\n    SsfwNumber?: string;\n    WorkingHour?: number;\n    WorkingDays?: number;\n    DailyRateBase?: number;\n    NplRateBase?: number;\n    OtRateWeekday?: number;\n    OtRateWeekend?: number;\n    OtRatePublicHoliday?: number;\n    OtRate?: number;\n    TotalWorkingTimeInMinutes?: number;\n    NumberOfWorkingDays?: number;\n    DisabledChildInUniversity?: number;\n    DisabledChild?: number;\n    EmployeeCareerPath?: EmployeeCareerPathRow[];\n    Cp38Lists?: EmployeeCp38Row[];\n    AllowanceLists?: EmployeeAllowanceRow[];\n    FixedDeductionList?: FixedDeductionRow[];\n    CountryID?: number;\n    PostalCode?: string;\n    CountryName?: string;\n    FixedOtRateOption?: boolean;\n    GrantHRPrivilege?: boolean;\n    CreateUser?: boolean;\n    OtPayEntitlement?: boolean;\n    PayByMonth?: boolean;\n    PayByHour?: boolean;\n    PayByDay?: boolean;\n    MaritalStatus?: MaritalStatus;\n    Id?: number;\n    Retired?: number;\n    JobDescription?: string;\n    EmployeeName?: string;\n    UserPassword?: string;\n    UserRowID?: number;\n    UserName?: string;\n    EmployeeID?: string;\n    Nric?: string;\n    Age?: number;\n    Terminated?: number;\n    Resigned?: number;\n    ChildrenUnderEighteen?: number;\n    ChildrenInUniversity?: number;\n    WorkingSpouse?: boolean;\n    CalculationDate?: string;\n    LastPaymentDate?: string;\n    RecruitmentDate?: string;\n    ResignationDate?: string;\n    TerminateDate?: string;\n    TerminateLeaveDate?: string;\n    ResignLeaveDate?: string;\n    Birthday?: string;\n    EmployeeEmail?: string;\n    EpfAccountNumber?: string;\n    ProbationPeriod?: number;\n    NoticePeriod?: number;\n    Address?: string;\n    TelNumber1?: string;\n    TelNumber2?: string;\n    PassportNumber?: string;\n    PassportIssueDate?: string;\n    PassportValidPeriod?: number;\n    PassportExpiryDate?: string;\n    BonusFactor?: number;\n    BasicSalary?: number;\n    NightShiftAllowancePerDay?: number;\n    RaceID?: number;\n    DepartmentID?: number;\n    DivisionID?: number;\n    SectionID?: number;\n    JobGradeID?: number;\n    OccupationID?: number;\n    BankID?: number;\n    BankAccountNumber?: string;\n    CityID?: number;\n    DailyWorkingMinute?: number;\n    StateID?: number;\n    EmployeeImg?: string;\n    NationalityID?: number;\n    ProbationPeriodEnd?: string;\n    Race?: string;\n    DepartmentDept?: string;\n    Division?: string;\n    Section?: string;\n    JobGrade?: string;\n    Occupation?: string;\n    BankName?: string;\n    CityName?: string;\n    StateName?: string;\n    NationalityName?: string;\n    EmployeeType?: EmployeeType;\n    Sex?: SexType;\n    SocsoClass?: SOCSOClass;\n    SocsoAccountNumber?: string;\n    EpfClass?: EPFClass;\n    CostCentreID?: number;\n    CostCentreName?: string;\n    Cp8dID?: number;\n    Cp8dName?: string;\n    EisClass?: EISClass;\n    HRDFClass?: HRDFClass;\n    WorkingPermit?: string;\n    SsfwEffectiveDate?: string;\n    WorkingPermitIssueDate?: string;\n    WorkingPermitExpireDate?: string;\n    WorkingPermitValidFrom?: string;\n    WorkingPermitValidUntil?: string;\n    ArrivalDate?: string;\n    PCBnumber?: string;\n    ProbationPeriodFrom?: string;\n    ProbationPeriodUntil?: string;\n    PassedProbation?: ProbationClass;\n    RetireDate?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class EmployeeProfileRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'EmployeeID';\n    static readonly localTextPrefix = 'EmployeeProfile.EmployeeProfile';\n    static readonly lookupKey = 'EmployeeProfile.EmployeeProfile';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<EmployeeProfileRow>('EmployeeProfile.EmployeeProfile') }\n    static async getLookupAsync() { return getLookupAsync<EmployeeProfileRow>('EmployeeProfile.EmployeeProfile') }\n\n    static readonly deletePermission = '*';\n    static readonly insertPermission = '*';\n    static readonly readPermission = '*';\n    static readonly updatePermission = '*';\n\n    static readonly Fields = fieldsProxy<EmployeeProfileRow>();\n}"],
  "mappings": "6DAEA,IAAAA,EAA+C,SAE9BC,OACAA,EAAA,QAAU,kCAUVA,EAAA,QAAU,CACnB,OAAQ,yCACR,OAAQ,yCACR,OAAQ,yCACR,SAAU,2CACV,KAAM,uCACN,yBAA0B,2DAC1B,2BAA4B,4DAChC,EAEA,CACI,SACA,SACA,SACA,WACA,OACA,2BACA,4BACJ,EAAE,QAAQC,GAAK,CACLD,EAAwBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAClD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IAjCYJ,MAAA,KCQjB,IAAAK,EAAuD,SA6HhD,IAAeC,EAAf,KAAkC,CAQrC,OAAO,WAAY,CAAE,SAAO,aAA8B,iCAAiC,CAAE,CAC7F,OAAa,gBAAiB,QAAAC,EAAA,sBAAE,SAAO,kBAAmC,iCAAiC,CAAE,GAQjH,EAjBsBC,EAAAF,EAAA,sBAAAA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,aAHbA,EAIF,gBAAkB,kCAJhBA,EAKF,UAAY,kCALVA,EAWF,iBAAmB,IAXjBA,EAYF,iBAAmB,IAZjBA,EAaF,eAAiB,IAbfA,EAcF,iBAAmB,IAdjBA,EAgBF,UAAS,eAAgC",
  "names": ["import_q", "EmployeeProfileService", "x", "r", "s", "o", "import_q", "EmployeeProfileRow", "__async", "__name"]
}
