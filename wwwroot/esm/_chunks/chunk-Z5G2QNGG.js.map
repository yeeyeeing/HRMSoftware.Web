{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/PayrollSettings/SocsoSubjection/SocsoSubjectionDialog.ts"],
  "sourcesContent": ["import { Decorators, EntityDialog } from '@serenity-is/corelib';\nimport { SocsoSubjectionForm, SocsoSubjectionRow, SocsoSubjectionService } from '../../../ServerTypes/PayrollSettings';\nimport { alertDialog, confirm, RetrieveResponse, serviceCall } from '@serenity-is/corelib/q';\n\n@Decorators.registerClass('HRMSoftware.PayrollSettings.SocsoSubjectionDialog')\nexport class SocsoSubjectionDialog extends EntityDialog<SocsoSubjectionRow, any> {\n    protected getFormKey() { return SocsoSubjectionForm.formKey; }\n    protected getRowDefinition() { return SocsoSubjectionRow; }\n    protected getService() { return SocsoSubjectionService.baseUrl; }\n\n    protected form = new SocsoSubjectionForm(this.idPrefix);\n\n\n\n    protected save_submitHandler(response): void {\n\n\n\n\n\n        var res = response\n        if (this.isNew() == false) {\n            confirm(\"Edit changes to the company settings? The changes will take effect next month\", () => {\n                super.save_submitHandler(res);\n            });\n        }\n\n        else\n            super.save_submitHandler(response)\n\n\n\n\n\n\n\n    }\n\n\n    public dialogOpen(asPanel?: boolean): void {\n        super.dialogOpen(asPanel);\n\n        this.applyChangesButton.hide()\n        this.deleteButton.hide()\n        var form = this\n        this.undeleteButton.remove()\n        this.localizationButton.remove()\n        this.cloneButton.remove()\n        /*\n        if (this.isNew() == false) {\n            console.log(this.form.idPrefix)\n            var EntityId = this.entityId\n            SocsoSubjectionService.Retrieve({\n                EntityId: EntityId\n            }, response => {\n\n                console.log(response.Entity.EffectiveSince === undefined)\n\n                console.log(response.Entity.EffectiveUntil === undefined)\n\n\n                if (response.Entity.EffectiveSince !== undefined && response.Entity.EffectiveUntil !== undefined)\n                    form.readOnly = true\n\n            });\n\n\n\n\n        }\n        */\n    }\n}"],
  "mappings": "2JAAA,IAAAA,EAAyC,SAEzC,IAAAC,EAAoE,SAG7D,IAAMC,EAAN,cAAoC,cAAsC,CAA1E,kCAKH,KAAU,KAAO,IAAIC,EAAoB,KAAK,QAAQ,EAJ5C,YAAa,CAAE,OAAOA,EAAoB,OAAS,CACnD,kBAAmB,CAAE,OAAOC,CAAoB,CAChD,YAAa,CAAE,OAAOC,EAAuB,OAAS,CAMtD,mBAAmBC,EAAgB,CAMzC,IAAIC,EAAMD,EACN,KAAK,MAAM,GAAK,MAChB,WAAQ,gFAAiF,IAAM,CAC3F,MAAM,mBAAmBC,CAAG,CAChC,CAAC,EAID,MAAM,mBAAmBD,CAAQ,CAQzC,CAGO,WAAWE,EAAyB,CACvC,MAAM,WAAWA,CAAO,EAExB,KAAK,mBAAmB,KAAK,EAC7B,KAAK,aAAa,KAAK,EACvB,IAAIC,EAAO,KACX,KAAK,eAAe,OAAO,EAC3B,KAAK,mBAAmB,OAAO,EAC/B,KAAK,YAAY,OAAO,CAwB5B,CACJ,EAnEaC,EAAAR,EAAA,yBAAAA,EAANS,EAAA,CADN,aAAW,cAAc,mDAAmD,GAChET",
  "names": ["import_corelib", "import_q", "SocsoSubjectionDialog", "SocsoSubjectionForm", "SocsoSubjectionRow", "SocsoSubjectionService", "response", "res", "asPanel", "form", "__name", "__decorateClass"]
}
