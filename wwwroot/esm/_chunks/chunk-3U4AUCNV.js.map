{
  "version": 3,
  "sources": ["../../../Modules/HumanResource/EntitledLeave/EntitledLeave/EntitledLeaveDialog.ts"],
  "sourcesContent": ["import { Decorators, EditorUtils, EntityDialog } from '@serenity-is/corelib';\nimport { BringForwardService } from '../../../ServerTypes/BringForward';\nimport { EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\nimport { EntitledLeaveForm, EntitledLeaveRow, EntitledLeaveService } from '../../../ServerTypes/EntitledLeave';\nimport { isEmptyOrNull } from '@serenity-is/corelib/q';\n@Decorators.registerClass('HRMSoftware.EntitledLeave.EntitledLeaveDialog')\nexport class EntitledLeaveDialog extends EntityDialog<EntitledLeaveRow, any> {\n    protected getFormKey() { return EntitledLeaveForm.formKey; }\n    protected getRowDefinition() { return EntitledLeaveRow; }\n    protected getService() { return EntitledLeaveService.baseUrl; }\n    public EmployeeRowID: number;\n    public CarryForwardId: number;\n    protected form = new EntitledLeaveForm(this.idPrefix);\n    constructor(EmployeeRowID: number) {\n        super()\n        this.EmployeeRowID = EmployeeRowID\n    }\n    protected onDialogOpen() {\n        super.onDialogOpen()\n        //var EmployeeRowID \n        //if (isEmptyOrNull(this.EmployeeRowID))\n            this.EmployeeRowID = parseInt(this.form.EmployeeRowId.value)\n       // else\n       //     EmployeeRowID = this.EmployeeRowID\n        console.log(isEmptyOrNull(this.EmployeeRowID))\n        console.log(this.form.EmployeeRowId.value)\n\n        this.deleteButton.hide()\n        this.dialogTitle = \"\"\n        EmployeeProfileService.List({\n        }, response => {\n\n            for (var index in response.Entities)\n            {\n                if (response.Entities[index].Id == this.EmployeeRowID) {\n\n\n                   // this.form.EmployeeRowId.value = this.EmployeeRowID.toString()\n                    //EditorUtils.setReadonly(this.form.EmployeeRowId.element, true);\n\n                    EditorUtils.setReadonly(this.form.EmployeeRowId.element, true);\n                    EditorUtils.setReadonly(this.form.EmployeeName.element, true);\n\n\n                    if (response.Entities[index].MaritalStatus == 1) {\n\n                        if (response.Entities[index].Sex == 1)// if employee is male\n                            $(\".EntitledMaternityLeave\").hide();\n\n                        else if (response.Entities[index].Sex == 2)// if employee is male\n                            $(\".EntitledPaternityLeave\").hide();\n                    }\n                    else\n                    {\n                        $(\".EntitledMaternityLeave\").hide();\n                        $(\".EntitledPaternityLeave\").hide();\n                    }\n\n                        \n                break\n                }\n\n            }\n\n        });\n    }\n}"],
  "mappings": "8LAAA,IAAAA,EAAsD,SAItD,IAAAC,EAA8B,SAEvB,IAAMC,EAAN,cAAkC,cAAoC,CAOzE,YAAYC,EAAuB,CAC/B,MAAM,EAFV,KAAU,KAAO,IAAIC,EAAkB,KAAK,QAAQ,EAGhD,KAAK,cAAgBD,CACzB,CATU,YAAa,CAAE,OAAOC,EAAkB,OAAS,CACjD,kBAAmB,CAAE,OAAOC,CAAkB,CAC9C,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAQpD,cAAe,CACrB,MAAM,aAAa,EAGf,KAAK,cAAgB,SAAS,KAAK,KAAK,cAAc,KAAK,EAG/D,QAAQ,OAAI,iBAAc,KAAK,aAAa,CAAC,EAC7C,QAAQ,IAAI,KAAK,KAAK,cAAc,KAAK,EAEzC,KAAK,aAAa,KAAK,EACvB,KAAK,YAAc,GACnBC,EAAuB,KAAK,CAC5B,EAAGC,GAAY,CAEX,QAASC,KAASD,EAAS,SAEvB,GAAIA,EAAS,SAASC,CAAK,EAAE,IAAM,KAAK,cAAe,CAMnD,cAAY,YAAY,KAAK,KAAK,cAAc,QAAS,EAAI,EAC7D,cAAY,YAAY,KAAK,KAAK,aAAa,QAAS,EAAI,EAGxDD,EAAS,SAASC,CAAK,EAAE,eAAiB,EAEtCD,EAAS,SAASC,CAAK,EAAE,KAAO,EAChC,EAAE,yBAAyB,EAAE,KAAK,EAE7BD,EAAS,SAASC,CAAK,EAAE,KAAO,GACrC,EAAE,yBAAyB,EAAE,KAAK,GAItC,EAAE,yBAAyB,EAAE,KAAK,EAClC,EAAE,yBAAyB,EAAE,KAAK,GAI1C,KACA,CAIR,CAAC,CACL,CACJ,EA5DaC,EAAAR,EAAA,uBAAAA,EAANS,EAAA,CADN,aAAW,cAAc,+CAA+C,GAC5DT",
  "names": ["import_corelib", "import_q", "EntitledLeaveDialog", "EmployeeRowID", "EntitledLeaveForm", "EntitledLeaveRow", "EntitledLeaveService", "EmployeeProfileService", "response", "index", "__name", "__decorateClass"]
}
