{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/EmployeeAttendance/EmployeeAttendanceColumns.ts", "../../../Modules/ServerTypes/EmployeeAttendance/EmployeeAttendanceRow.ts", "../../../Modules/ServerTypes/EmployeeAttendance/EmployeeAttendanceService.ts", "../../../Modules/HumanResource/EmployeeAttendance/ShiftAttendanceRecord/ShiftTimeToHours.ts", "../../../Modules/ServerTypes/EmployeeAttendance/ShiftAttendanceRecordColumns.ts", "../../../Modules/ServerTypes/EmployeeAttendance/ShiftAttendanceRecordRow.ts", "../../../Modules/ServerTypes/EmployeeAttendance/ShiftAttendanceRecordService.ts", "../../../Modules/ServerTypes/EmployeeAttendance/EmployeeAttendanceForm.ts", "../../../Modules/ServerTypes/EmployeeAttendance/ShiftAttendanceRecordForm.ts"],
  "sourcesContent": ["\uFEFFexport class EmployeeAttendanceColumns {\n    static columnsKey = 'EmployeeAttendance.EmployeeAttendance';\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeAttendanceRow {\n    DepartmentID?: number;\n    DepartmentName?: string;\n    DivisionID?: number;\n    DivisionName?: string;\n    OccupationID?: number;\n    OccupationName?: string;\n    JobGradeID?: number;\n    JobGradeName?: string;\n    Id?: number;\n    AuthenticationTime?: string;\n    AuthenticationDateTime?: string;\n    AuthenticationDate?: string;\n    DeviceName?: string;\n    DeviceSerial?: string;\n    CardNo?: string;\n    Direction?: string;\n    LateIn?: number;\n    Ot?: number;\n    Processed?: number;\n    EmployeeId?: string;\n    EmployeeName?: string;\n    EmployeeRowID?: number;\n    PersonName?: string;\n    EarlyLeave?: number;\n    AuthenticationSecond?: number;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class EmployeeAttendanceRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'AuthenticationDateTime';\n    static readonly localTextPrefix = 'EmployeeAttendance.EmployeeAttendance';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = '*';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<EmployeeAttendanceRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeAttendanceRow } from \"./EmployeeAttendanceRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeAttendanceService {\n    export const baseUrl = 'EmployeeAttendance/EmployeeAttendance';\n\n    export declare function Create(request: SaveRequest<EmployeeAttendanceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeAttendanceRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeAttendanceRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeAttendanceRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function EmployeeAttendanceRecord(request: number, onSuccess?: (response: ListResponse<EmployeeAttendanceRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeAttendance/EmployeeAttendance/Create\",\n        Update: \"EmployeeAttendance/EmployeeAttendance/Update\",\n        Delete: \"EmployeeAttendance/EmployeeAttendance/Delete\",\n        Retrieve: \"EmployeeAttendance/EmployeeAttendance/Retrieve\",\n        List: \"EmployeeAttendance/EmployeeAttendance/List\",\n        EmployeeAttendanceRecord: \"EmployeeAttendance/EmployeeAttendance/EmployeeAttendanceRecord\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'EmployeeAttendanceRecord'\n    ].forEach(x => {\n        (<any>EmployeeAttendanceService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { Decorators, Formatter, Lookup } from \"@serenity-is/corelib\";\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\nimport { Authorization, isEmptyOrNull } from '@serenity-is/corelib/q';\n\n@Decorators.registerFormatter('HRMSoftware.ShiftTimeToHours')\nexport class ShiftTimeToHours implements Formatter {\n\n    format(ctx: FormatterContext) {\n\n        if (!isEmptyOrNull(ctx.value))\n            return ctx.value.substring(0, 16)\n\n        return\n    }\n}", "\uFEFFimport { ShiftTimeToHours } from \"@/HumanResource/EmployeeAttendance/ShiftAttendanceRecord/ShiftTimeToHours\";\nimport { StatusFormatter } from \"@/HumanResource/PayrollSettings/NoPaidLeave/StatusFormatter\";\n\nexport class ShiftAttendanceRecordColumns {\n    static columnsKey = 'EmployeeAttendance.ShiftAttendanceRecord';\n}\n\n[ShiftTimeToHours, StatusFormatter]; // referenced types", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ShiftAttendanceRecordRow {\n    Id?: number;\n    EmployeeRowId?: number;\n    TimeIn?: string;\n    TimeOut?: string;\n    startDate?: string;\n    endDate?: string;\n    TimeInHour?: string;\n    TimeOutHour?: string;\n    ShiftId?: number;\n    ShiftName?: string;\n    EmpRemark?: string;\n    SupRemark?: string;\n    LvPhRemark?: string;\n    LateIn?: number;\n    Ot?: number;\n    EarlyLeave?: number;\n    TimeInRowId?: number;\n    TimeOutRowId?: number;\n    ShiftDate?: string;\n    ShiftStartTime?: string;\n    ShiftEndTime?: string;\n    ShiftStartTimeHour?: string;\n    ShiftEndTimeHour?: string;\n    EmployeeID?: string;\n    EmployeeName?: string;\n    CostCentreID?: number;\n    CostCentreName?: string;\n    DepartmentID?: number;\n    DepartmentName?: string;\n    DivisionID?: number;\n    DivisionName?: string;\n    OccupationID?: number;\n    OccupationName?: string;\n    JobGradeID?: number;\n    JobGradeName?: string;\n    EmployeeRowListBuffer?: number[];\n    EmployeeRowList?: number[];\n    OccupationList?: number[];\n    DepartmentList?: number[];\n    DivisionList?: number[];\n    JobGradeList?: number[];\n    SectionList?: number[];\n}\n\nexport abstract class ShiftAttendanceRecordRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'EmployeeRowId';\n    static readonly localTextPrefix = 'EmployeeAttendance.ShiftAttendanceRecord';\n    static readonly deletePermission = 'Administration:Employee';\n    static readonly insertPermission = 'Administration:Employee';\n    static readonly readPermission = 'Administration:Employee';\n    static readonly updatePermission = 'Administration:Employee';\n\n    static readonly Fields = fieldsProxy<ShiftAttendanceRecordRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { ShiftAttendanceRecordRow } from \"./ShiftAttendanceRecordRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace ShiftAttendanceRecordService {\n    export const baseUrl = 'EmployeeAttendance/ShiftAttendanceRecord';\n\n    export declare function Create(request: SaveRequest<ShiftAttendanceRecordRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ShiftAttendanceRecordRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ShiftAttendanceRecordRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ShiftAttendanceRecordRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeAttendance/ShiftAttendanceRecord/Create\",\n        Update: \"EmployeeAttendance/ShiftAttendanceRecord/Update\",\n        Delete: \"EmployeeAttendance/ShiftAttendanceRecord/Delete\",\n        Retrieve: \"EmployeeAttendance/ShiftAttendanceRecord/Retrieve\",\n        List: \"EmployeeAttendance/ShiftAttendanceRecord/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ShiftAttendanceRecordService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { DateEditor, StringEditor, IntegerEditor, LookupEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeAttendanceForm {\n    AuthenticationDate: DateEditor;\n    AuthenticationTime: StringEditor;\n    AuthenticationSecond: IntegerEditor;\n    EmployeeRowID: LookupEditor;\n    PersonName: StringEditor;\n    DeviceName: StringEditor;\n    DeviceSerial: StringEditor;\n    CardNo: StringEditor;\n}\n\nexport class EmployeeAttendanceForm extends PrefixedContext {\n    static formKey = 'EmployeeAttendance.EmployeeAttendance';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!EmployeeAttendanceForm.init)  {\n            EmployeeAttendanceForm.init = true;\n\n            var w0 = DateEditor;\n            var w1 = StringEditor;\n            var w2 = IntegerEditor;\n            var w3 = LookupEditor;\n\n            initFormType(EmployeeAttendanceForm, [\n                'AuthenticationDate', w0,\n                'AuthenticationTime', w1,\n                'AuthenticationSecond', w2,\n                'EmployeeRowID', w3,\n                'PersonName', w1,\n                'DeviceName', w1,\n                'DeviceSerial', w1,\n                'CardNo', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { LookupEditor, DateEditor, StringEditor, TextAreaEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ShiftAttendanceRecordForm {\n    EmployeeRowId: LookupEditor;\n    ShiftId: LookupEditor;\n    TimeIn: DateEditor;\n    TimeInHour: StringEditor;\n    TimeOut: DateEditor;\n    TimeOutHour: StringEditor;\n    ShiftStartTime: DateEditor;\n    ShiftStartTimeHour: StringEditor;\n    ShiftEndTime: DateEditor;\n    ShiftEndTimeHour: StringEditor;\n    EmpRemark: TextAreaEditor;\n    SupRemark: TextAreaEditor;\n    LvPhRemark: TextAreaEditor;\n}\n\nexport class ShiftAttendanceRecordForm extends PrefixedContext {\n    static formKey = 'EmployeeAttendance.ShiftAttendanceRecord';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ShiftAttendanceRecordForm.init)  {\n            ShiftAttendanceRecordForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = DateEditor;\n            var w2 = StringEditor;\n            var w3 = TextAreaEditor;\n\n            initFormType(ShiftAttendanceRecordForm, [\n                'EmployeeRowId', w0,\n                'ShiftId', w0,\n                'TimeIn', w1,\n                'TimeInHour', w2,\n                'TimeOut', w1,\n                'TimeOutHour', w2,\n                'ShiftStartTime', w1,\n                'ShiftStartTimeHour', w2,\n                'ShiftEndTime', w1,\n                'ShiftEndTimeHour', w2,\n                'EmpRemark', w3,\n                'SupRemark', w3,\n                'LvPhRemark', w3\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["EmployeeAttendanceColumns", "__name", "import_q", "EmployeeAttendanceRow", "__name", "import_q", "EmployeeAttendanceService", "x", "r", "s", "o", "import_corelib", "import_q", "ShiftTimeToHours", "ctx", "__name", "__decorateClass", "ShiftAttendanceRecordColumns", "__name", "import_q", "ShiftAttendanceRecordRow", "__name", "import_q", "ShiftAttendanceRecordService", "x", "r", "s", "o", "import_corelib", "import_q", "_EmployeeAttendanceForm", "prefix", "w0", "w1", "w2", "w3", "EmployeeAttendanceForm", "__name", "import_corelib", "import_q", "_ShiftAttendanceRecordForm", "prefix", "w0", "w1", "w2", "w3", "ShiftAttendanceRecordForm", "__name"]
}
