{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/InitYear/InitYearColumns.ts", "../../../Modules/ServerTypes/InitYear/InitYearRow.ts", "../../../Modules/ServerTypes/InitYear/InitYearService.ts", "../../../Modules/ServerTypes/InitYear/InitYearForm.ts", "../../../Modules/ServerTypes/InitYear/LeaveCarryForward.ts"],
  "sourcesContent": ["\uFEFFexport class InitYearColumns {\n    static columnsKey = 'InitYear.InitYear';\n}", "\uFEFFimport { LeaveCarryForward } from \"./LeaveCarryForward\";\nimport { AnnualLeaveJobGradePolicyRow } from \"../AnnualLeaveJobGradePolicy/AnnualLeaveJobGradePolicyRow\";\nimport { AnnualLeavePolicyRow } from \"../AnnualLeavePolicy/AnnualLeavePolicyRow\";\nimport { SickLeavePolicyRow } from \"../SickLeavePolicy/SickLeavePolicyRow\";\nimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface InitYearRow {\n    YearString?: string;\n    Id?: number;\n    Year?: number;\n    LeaveBringForwardMethod?: LeaveCarryForward;\n    HospitalisationLeave?: number;\n    PaternityLeave?: number;\n    MaternityLeave?: number;\n    CompassionateLeave?: number;\n    MarriageLeave?: number;\n    MonthOfServiceToEligibleForPaternityLeave?: number;\n    MonthOfServiceToEligibleForMaternityLeave?: number;\n    BringForwardPercentage?: number;\n    BringForwardDays?: number;\n    LeaveRoundUp?: boolean;\n    AnnulLeaveBasedOnJobGrade?: AnnualLeaveJobGradePolicyRow[];\n    PolicyList?: AnnualLeavePolicyRow[];\n    SickLeavePolicyList?: SickLeavePolicyRow[];\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class InitYearRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'Year';\n    static readonly localTextPrefix = 'InitYear.InitYear';\n    static readonly deletePermission = '*';\n    static readonly insertPermission = '*';\n    static readonly readPermission = '*';\n    static readonly updatePermission = '*';\n\n    static readonly Fields = fieldsProxy<InitYearRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { InitYearRow } from \"./InitYearRow\";\nimport { ServiceOptions, ServiceRequest, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace InitYearService {\n    export const baseUrl = 'CompanySettings/InitYear/InitYear';\n\n    export declare function Create(request: SaveRequest<InitYearRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<InitYearRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<InitYearRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<InitYearRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function ListYear(request: ServiceRequest, onSuccess?: (response: ListResponse<InitYearRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"CompanySettings/InitYear/InitYear/Create\",\n        Update: \"CompanySettings/InitYear/InitYear/Update\",\n        Delete: \"CompanySettings/InitYear/InitYear/Delete\",\n        Retrieve: \"CompanySettings/InitYear/InitYear/Retrieve\",\n        List: \"CompanySettings/InitYear/InitYear/List\",\n        ListYear: \"CompanySettings/InitYear/InitYear/ListYear\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List', \n        'ListYear'\n    ].forEach(x => {\n        (<any>InitYearService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { IntegerEditor, EnumEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { LeaveCarryForward } from \"./LeaveCarryForward\";\nimport { AnnualLeavePolicyEditor } from \"@/HumanResource/AnnualLeavePolicy/AnnualLeavePolicy/AnnualLeavePolicyEditor\";\nimport { AnnualLeaveJobGradePolicyEditor } from \"@/HumanResource/AnnualLeaveJobGradePolicy/AnnualLeaveJobGradePolicy/AnnualLeaveJobGradePolicyEditor\";\nimport { SickLeavePolicyEditor } from \"@/HumanResource/SickLeavePolicy/SickLeavePolicy/SickLeavePolicyEditor\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface InitYearForm {\n    Year: IntegerEditor;\n    LeaveBringForwardMethod: EnumEditor;\n    HospitalisationLeave: IntegerEditor;\n    PaternityLeave: IntegerEditor;\n    MaternityLeave: IntegerEditor;\n    CompassionateLeave: IntegerEditor;\n    MarriageLeave: IntegerEditor;\n    MonthOfServiceToEligibleForMaternityLeave: IntegerEditor;\n    MonthOfServiceToEligibleForPaternityLeave: IntegerEditor;\n    BringForwardDays: IntegerEditor;\n    BringForwardPercentage: IntegerEditor;\n    LeaveRoundUp: BooleanEditor;\n    PolicyList: AnnualLeavePolicyEditor;\n    AnnulLeaveBasedOnJobGrade: AnnualLeaveJobGradePolicyEditor;\n    SickLeavePolicyList: SickLeavePolicyEditor;\n}\n\nexport class InitYearForm extends PrefixedContext {\n    static formKey = 'HumanResource.InitYear.InitYear';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!InitYearForm.init)  {\n            InitYearForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = EnumEditor;\n            var w2 = BooleanEditor;\n            var w3 = AnnualLeavePolicyEditor;\n            var w4 = AnnualLeaveJobGradePolicyEditor;\n            var w5 = SickLeavePolicyEditor;\n\n            initFormType(InitYearForm, [\n                'Year', w0,\n                'LeaveBringForwardMethod', w1,\n                'HospitalisationLeave', w0,\n                'PaternityLeave', w0,\n                'MaternityLeave', w0,\n                'CompassionateLeave', w0,\n                'MarriageLeave', w0,\n                'MonthOfServiceToEligibleForMaternityLeave', w0,\n                'MonthOfServiceToEligibleForPaternityLeave', w0,\n                'BringForwardDays', w0,\n                'BringForwardPercentage', w0,\n                'LeaveRoundUp', w2,\n                'PolicyList', w3,\n                'AnnulLeaveBasedOnJobGrade', w4,\n                'SickLeavePolicyList', w5\n            ]);\n        }\n    }\n}\n\n[LeaveCarryForward]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum LeaveCarryForward {\n    All = 1,\n    OneYear = 2,\n    MaximumDaysCarryForwardManual = 3,\n    MaximumDaysCarryForwardAllocation = 4,\n    None = 5,\n    MaximumDaysCarryForwardByPercentage = 6\n}\nDecorators.registerEnumType(LeaveCarryForward, 'HRMSoftware.InitYear.LeaveCarryForward', 'HumanResource.InitYear.LeaveCarryForward');"],
  "mappings": "sNAAQ,IAAMA,EAAN,KAAsB,CAE9B,EAFcC,EAAAD,EAAA,mBAAAA,EACH,WAAa,oBCGxB,IAAAE,EAA4B,SA6BrB,IAAeC,EAAf,KAA2B,CAWlC,EAXsBC,EAAAD,EAAA,eAAAA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,OAHbA,EAIF,gBAAkB,oBAJhBA,EAKF,iBAAmB,IALjBA,EAMF,iBAAmB,IANjBA,EAOF,eAAiB,IAPfA,EAQF,iBAAmB,IARjBA,EAUF,UAAS,eAAyB,ECzCtD,IAAAE,EAA+D,SAE9CC,OACAA,EAAA,QAAU,oCASVA,EAAA,QAAU,CACnB,OAAQ,2CACR,OAAQ,2CACR,OAAQ,2CACR,SAAU,6CACV,KAAM,yCACN,SAAU,4CACd,EAEA,CACI,SACA,SACA,SACA,WACA,OACA,UACJ,EAAE,QAAQC,GAAK,CACLD,EAAiBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC3C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA9BYJ,MAAA,KCJhB,IAAAK,EAA0E,SCA1E,IAAAC,EAA2B,SAEhBC,OACRA,IAAA,IAAM,GAAN,MACAA,IAAA,QAAU,GAAV,UACAA,IAAA,8BAAgC,GAAhC,gCACAA,IAAA,kCAAoC,GAApC,oCACAA,IAAA,KAAO,GAAP,OACAA,IAAA,oCAAsC,GAAtC,sCANQA,OAAA,IAQZ,aAAW,iBAAiBA,EAAmB,yCAA0C,0CAA0C,EDLnI,IAAAC,EAA6B,SAoBtB,IAAMC,EAAN,cAA2B,iBAAgB,CAI9C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAa,KAAO,CACrBA,EAAa,KAAO,GAEpB,IAAIE,EAAK,gBACLC,EAAK,aACLC,EAAK,gBACLC,EAAKC,EACLC,EAAKC,EACLC,EAAKC,KAET,gBAAaV,EAAc,CACvB,OAAQE,EACR,0BAA2BC,EAC3B,uBAAwBD,EACxB,iBAAkBA,EAClB,iBAAkBA,EAClB,qBAAsBA,EACtB,gBAAiBA,EACjB,4CAA6CA,EAC7C,4CAA6CA,EAC7C,mBAAoBA,EACpB,yBAA0BA,EAC1B,eAAgBE,EAChB,aAAcC,EACd,4BAA6BE,EAC7B,sBAAuBE,CAC3B,CAAC,CACL,CACJ,CACJ,EApCaE,EAANX,EAAMY,EAAAD,EAAA,gBAAAA,EACF,QAAU",
  "names": ["InitYearColumns", "__name", "import_q", "InitYearRow", "__name", "import_q", "InitYearService", "x", "r", "s", "o", "import_corelib", "import_corelib", "LeaveCarryForward", "import_q", "_InitYearForm", "prefix", "w0", "w1", "w2", "w3", "AnnualLeavePolicyEditor", "w4", "AnnualLeaveJobGradePolicyEditor", "w5", "SickLeavePolicyEditor", "InitYearForm", "__name"]
}
