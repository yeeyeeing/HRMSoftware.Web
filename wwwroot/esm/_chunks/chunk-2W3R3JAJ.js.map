{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/EmployeeEditHistory/EmployeeEditHistoryColumns.ts", "../../../Modules/ServerTypes/EmployeeEditHistory/EmployeeEditHistoryRow.ts", "../../../Modules/ServerTypes/EmployeeEditHistory/EmployeeEditHistoryService.ts", "../../../Modules/ServerTypes/EmployeeEditHistory/EmployeeEditHistoryForm.ts", "../../../Modules/HumanResource/EmployeeEditHistory/EmployeeEditHistory/EmployeeEditHistoryDialog.ts"],
  "sourcesContent": ["\uFEFFexport class EmployeeEditHistoryColumns {\n    static columnsKey = 'EmployeeEditHistory.EmployeeEditHistory';\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface EmployeeEditHistoryRow {\n    Id?: number;\n    EmployeeRowId?: number;\n    OldValue?: string;\n    NewValue?: string;\n    FieldName?: string;\n    Description?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class EmployeeEditHistoryRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'OldValue';\n    static readonly localTextPrefix = 'EmployeeEditHistory.EmployeeEditHistory';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<EmployeeEditHistoryRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { EmployeeEditHistoryRow } from \"./EmployeeEditHistoryRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace EmployeeEditHistoryService {\n    export const baseUrl = 'EmployeeEditHistory/EmployeeEditHistory';\n\n    export declare function Create(request: SaveRequest<EmployeeEditHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<EmployeeEditHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<EmployeeEditHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<EmployeeEditHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"EmployeeEditHistory/EmployeeEditHistory/Create\",\n        Update: \"EmployeeEditHistory/EmployeeEditHistory/Update\",\n        Delete: \"EmployeeEditHistory/EmployeeEditHistory/Delete\",\n        Retrieve: \"EmployeeEditHistory/EmployeeEditHistory/Retrieve\",\n        List: \"EmployeeEditHistory/EmployeeEditHistory/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>EmployeeEditHistoryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { PrefixedContext } from \"@serenity-is/corelib\";\n\nexport interface EmployeeEditHistoryForm {\n}\n\nexport class EmployeeEditHistoryForm extends PrefixedContext {\n    static formKey = 'EmployeeEditHistory.EmployeeEditHistory';\n}", "import { Decorators, EntityDialog, serviceCall } from '@serenity-is/corelib';\nimport { EmployeeEditHistoryForm, EmployeeEditHistoryRow, EmployeeEditHistoryService } from '../../../ServerTypes/EmployeeEditHistory';\n\n@Decorators.registerClass('HRMSoftware.EmployeeEditHistory.EmployeeEditHistoryDialog')\nexport class EmployeeEditHistoryDialog extends EntityDialog<EmployeeEditHistoryRow, any> {\n    protected getFormKey() { return EmployeeEditHistoryForm.formKey; }\n    protected getRowDefinition() { return EmployeeEditHistoryRow; }\n    protected getService() { return EmployeeEditHistoryService.baseUrl; }\n\n    protected form = new EmployeeEditHistoryForm(this.idPrefix);\n\n    public EmployeeRowID: number;\n\n    constructor(EmployeeRowID: number) {\n        super();\n        this.EmployeeRowID = EmployeeRowID;\n        this.deleteButton.hide();\n        this.localizationButton.hide();\n        this.undeleteButton.hide();\n        this.cloneButton.hide();\n        this.applyChangesButton.hide();\n        this.saveAndCloseButton.hide();\n\n        this.dialogTitle = 'Employee Profile Edit History'\n    }\n\n    protected getDialogOptions()\n    {\n        let opt = super.getDialogOptions()\n        opt.height = 400\n        opt.width = opt.width+ 200\n        return opt\n    }\n\n    public dialogOpen(asPanel?: boolean): void {\n        super.dialogOpen(asPanel);\n        var tabId = $(\".fieldset\").children().attr('id');\n\n        var node3 = document.getElementById(tabId);\n        var divNode = document.createElement('DIV')\n        divNode.classList.add('category-title')\n        divNode.setAttribute(\"id\", \"Edit-History\")\n        node3.appendChild(divNode)\n        \n        var node4 = document.createElement(\"a\");\n        node4.classList.add(\"category-anchor\");\n        var textnode = document.createTextNode(\"Employee Profile Edit History\");\n        node4.appendChild(textnode);\n        document.getElementById(\"Edit-History\").append(node4);\n\n        var node5 = document.getElementById(\"Edit-History\");\n        node5.insertAdjacentHTML('afterend', '<div class=\"DataGrid\" id=\"HistoryGrid\"></div>');\n\n        var node6 = document.createElement('TABLE');\n        var node7 = document.createElement('TR');\n        var header1 = document.createElement('TH');\n        var header3 = document.createElement('TH');\n\n        var textnode1 = document.createTextNode(\"Description\");\n        var textnode3 = document.createTextNode(\"Date\");\n\n\n        header1.appendChild(textnode1);\n        header3.appendChild(textnode3);\n\n        document.getElementById(\"HistoryGrid\").append(node6);\n        node6.appendChild(node7)\n        node7.appendChild(header1)\n        node7.appendChild(header3)\n        var counter = 1\n        EmployeeEditHistoryService.List({\n        }, response => {\n            let BufferList: any[] = []; // Declaring an empty array of any type\n            for (var index in response.Entities)\n            {\n                if (response.Entities[index].EmployeeRowId == this.EmployeeRowID)\n                    BufferList.push(response.Entities[index])\n            }\n            BufferList.sort((a, b) => a - b);\n\n            BufferList.reverse()\n\n\n\n\n            if (BufferList.length) {\n\n                for (var index in BufferList) {\n\n                    if (counter % 2 == 0) {\n                        var color = \"white\"\n                    }\n                    else {\n                        var color = \"#f8f8f8\"\n                    }\n                    counter = counter + 1\n                    var node8 = document.createElement('TR');\n                    node8.style.backgroundColor = color;\n                    var content1 = document.createElement('TD');\n                    var content3 = document.createElement('TD');\n                    var contentnode1 = document.createTextNode(String(BufferList[index][\"Description\"]));\n                    var contentnode3 = document.createTextNode(String(BufferList[index][\"InsertDate\"].substring(0, 10)));\n                    content1.appendChild(contentnode1)\n                    content3.appendChild(contentnode3)\n                    node6.appendChild(node8)\n                    node8.appendChild(content1)\n                    node8.appendChild(content3)\n                }\n\n            }\n        });\n        this.set_readOnly(true);\n\n    }\n}"],
  "mappings": "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",
  "names": ["EmployeeEditHistoryColumns", "__name", "import_q", "EmployeeEditHistoryRow", "__name", "import_q", "EmployeeEditHistoryService", "x", "r", "s", "o", "import_corelib", "EmployeeEditHistoryForm", "__name", "import_corelib", "EmployeeEditHistoryDialog", "EmployeeRowID", "EmployeeEditHistoryForm", "EmployeeEditHistoryRow", "EmployeeEditHistoryService", "opt", "asPanel", "tabId", "node3", "divNode", "node4", "textnode", "node5", "node6", "node7", "header1", "header3", "textnode1", "textnode3", "counter", "response", "BufferList", "index", "a", "b", "color", "node8", "content1", "content3", "contentnode1", "contentnode3", "__name", "__decorateClass"]
}
