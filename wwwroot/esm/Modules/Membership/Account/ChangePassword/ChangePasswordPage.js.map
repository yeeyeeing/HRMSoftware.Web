{
  "version": 3,
  "sources": ["../../../../../../Modules/Membership/Account/ChangePassword/ChangePasswordPage.tsx"],
  "sourcesContent": ["import { ChangePasswordForm, ChangePasswordRequest } from \"@/ServerTypes/Membership\";\nimport { Texts } from \"@/ServerTypes/Texts\";\nimport {  PropertyPanel } from \"@serenity-is/corelib\";\nimport { format, informationDialog, resolveUrl, serviceCall } from \"@serenity-is/corelib/q\";\nimport { UserService } from \"../../../ServerTypes/Administration\";\nimport { EmployeeProfileService } from \"../../../ServerTypes/EmployeeProfile\";\nimport { Authorization } from \"@serenity-is/corelib/q\";\n\nexport default function pageInit() {\n    $(function () {\n        new ChangePasswordPanel($('#PanelDiv')\n            .addClass('s-container-tight mt-5'));\n    });\n}\n\nconst myTexts = Texts.Forms.Membership.ChangePassword;\n\nclass ChangePasswordPanel extends PropertyPanel<ChangePasswordRequest, any> {\n\n    protected getFormKey() { return ChangePasswordForm.formKey; }\n\n    private form = new ChangePasswordForm(this.idPrefix);\n\n    constructor(container: JQuery) {\n        super(container);\n\n        this.form.NewPassword.addValidationRule(this.uniqueName, () => {\n            if (this.form.NewPassword.value.length < 7) {\n                return format(Texts.Validation.MinRequiredPasswordLength, 7);\n            }\n        });\n\n        this.form.ConfirmPassword.addValidationRule(this.uniqueName, () => {\n            if (this.form.ConfirmPassword.value !== this.form.NewPassword.value) {\n                return Texts.Validation.PasswordConfirmMismatch;\n            }\n        });\n    }\n\n    protected submitClick() {\n        if (!this.validateForm())\n            return;\n\n        var request = this.getSaveEntity();\n        serviceCall({\n            url: resolveUrl('~/Account/ChangePassword'),\n            request: request,\n            onSuccess: () => {\n\n                EmployeeProfileService.List({\n                }, response => {\n                    for (var index in response.Entities)\n                    {\n                        if (response.Entities[index].Id == Authorization.userDefinition.EmployeeRowID)\n                        {\n                            EmployeeProfileService.Update({\n                                EntityId: response.Entities[index].Id,\n                                Entity:\n                                {\n                                    \"UserPassword\": this.form.NewPassword.value\n                                  \n                                },\n                            });\n                        }\n                    }\n\n                })\n                \n\n                informationDialog(myTexts.Success, () => {\n                    window.location.href = resolveUrl('~/');\n                })\n            }\n        })\n    }\n\n    renderContents() {\n        const id = this.useIdPrefix();\n        this.element.empty().append(\n            <div class=\"s-Panel\">\n                <h3 class=\"page-title mb-4 text-center\">{myTexts.FormTitle}</h3>\n                <form id={id.Form} action=\"\">\n                    <div id={id.PropertyGrid}></div>\n                    <div class=\"px-field mt-4\">\n                        <button id={id.SubmitButton} type=\"submit\" class=\"btn btn-primary w-100\"\n                            onClick={e => { e.preventDefault(); this.submitClick() }}>\n                            {myTexts.SubmitButton}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n"],
  "mappings": "6hBAEA,IAAAA,EAA+B,SAC/BC,EAAmE,SAGnE,IAAAC,EAA8B,SAEf,SAARC,GAA4B,CAC/B,EAAE,UAAY,CACV,IAAIC,EAAoB,EAAE,WAAW,EAChC,SAAS,wBAAwB,CAAC,CAC3C,CAAC,CACL,CALwBC,EAAAF,EAAA,YAOxB,IAAMG,EAAUC,EAAM,MAAM,WAAW,eAEjCH,EAAN,cAAkC,eAA0C,CAMxE,YAAYI,EAAmB,CAC3B,MAAMA,CAAS,EAHnB,KAAQ,KAAO,IAAIC,EAAmB,KAAK,QAAQ,EAK/C,KAAK,KAAK,YAAY,kBAAkB,KAAK,WAAY,IAAM,CAC3D,GAAI,KAAK,KAAK,YAAY,MAAM,OAAS,EACrC,SAAO,UAAOF,EAAM,WAAW,0BAA2B,CAAC,CAEnE,CAAC,EAED,KAAK,KAAK,gBAAgB,kBAAkB,KAAK,WAAY,IAAM,CAC/D,GAAI,KAAK,KAAK,gBAAgB,QAAU,KAAK,KAAK,YAAY,MAC1D,OAAOA,EAAM,WAAW,uBAEhC,CAAC,CACL,CAlBU,YAAa,CAAE,OAAOE,EAAmB,OAAS,CAoBlD,aAAc,CACpB,GAAK,KAAK,aAAa,EAGvB,KAAIC,EAAU,KAAK,cAAc,KACjC,eAAY,CACR,OAAK,cAAW,0BAA0B,EAC1C,QAASA,EACT,UAAW,IAAM,CAEbC,EAAuB,KAAK,CAC5B,EAAGC,GAAY,CACX,QAASC,KAASD,EAAS,SAEnBA,EAAS,SAASC,CAAK,EAAE,IAAM,gBAAc,eAAe,eAE5DF,EAAuB,OAAO,CAC1B,SAAUC,EAAS,SAASC,CAAK,EAAE,GACnC,OACA,CACI,aAAgB,KAAK,KAAK,YAAY,KAE1C,CACJ,CAAC,CAIb,CAAC,KAGD,qBAAkBP,EAAQ,QAAS,IAAM,CACrC,OAAO,SAAS,QAAO,cAAW,IAAI,CAC1C,CAAC,CACL,CACJ,CAAC,EACL,CAEA,gBAAiB,CACb,IAAMQ,EAAK,KAAK,YAAY,EAC5B,KAAK,QAAQ,MAAM,EAAE,OACjBC,EAAC,OAAI,MAAM,UACP,UAAAA,EAAC,MAAG,MAAM,8BAA+B,SAAAT,EAAQ,UAAU,EAC3DS,EAAC,QAAK,GAAID,EAAG,KAAM,OAAO,GACtB,UAAAC,EAAC,OAAI,GAAID,EAAG,aAAc,EAC1BC,EAAC,OAAI,MAAM,gBACP,SAAAA,EAAC,UAAO,GAAID,EAAG,aAAc,KAAK,SAAS,MAAM,wBAC7C,QAASE,GAAK,CAAEA,EAAE,eAAe,EAAG,KAAK,YAAY,CAAE,EACtD,SAAAV,EAAQ,aACb,EACJ,GACJ,GACJ,CACJ,CACJ,CACJ,EA5EMD,EAAAD,EAAA",
  "names": ["import_corelib", "import_q", "import_q", "pageInit", "ChangePasswordPanel", "__name", "myTexts", "Texts", "container", "ChangePasswordForm", "request", "EmployeeProfileService", "response", "index", "id", "jsx", "e"]
}
