{
  "version": 3,
  "sources": ["../../../../../../Modules/Membership/Account/ResetPassword/ResetPasswordPage.tsx"],
  "sourcesContent": ["import { ResetPasswordForm, ResetPasswordRequest } from \"@/ServerTypes/Membership\";\nimport { Texts } from \"@/ServerTypes/Texts\";\nimport { PropertyPanel } from \"@serenity-is/corelib\";\nimport { format, informationDialog, resolveUrl, serviceCall } from \"@serenity-is/corelib/q\";\nimport { AccountPanelTitle } from \"../AccountPanelTitle\";\n\nexport default function pageInit(opt: ResetPasswordOptions) {\n    $(function () {\n        new ResetPasswordPanel($('#PanelDiv')\n            .addClass('s-full-page justify-content-center'), opt);\n    });\n}\n\ninterface ResetPasswordOptions {\n    token: string;\n}\n\nconst myTexts = Texts.Forms.Membership.ResetPassword;\n\nexport class ResetPasswordPanel extends PropertyPanel<ResetPasswordRequest, ResetPasswordOptions> {\n\n    protected getFormKey() { return ResetPasswordForm.formKey; }\n\n    private form = new ResetPasswordForm(this.idPrefix);\n\n    constructor(container: JQuery, opt: ResetPasswordOptions) {\n        super(container, opt);\n\n        this.form.NewPassword.addValidationRule(this.uniqueName, e => {\n            if (this.form.NewPassword.value.length < 7)\n                return format(Texts.Validation.MinRequiredPasswordLength, 7);\n        });\n\n        this.form.ConfirmPassword.addValidationRule(this.uniqueName, e => {\n            if (this.form.ConfirmPassword.value !== this.form.NewPassword.value)\n                return Texts.Validation.PasswordConfirmMismatch;\n        });\n    }\n\n    submitClick() {\n        if (!this.validateForm())\n            return;\n\n        var request = this.getSaveEntity();\n        request.Token = this.byId('Token').val();\n        serviceCall({\n            url: resolveUrl('~/Account/ResetPassword'),\n            request: request,\n            onSuccess: () => {\n                informationDialog(myTexts.Success, () => {\n                    window.location.href = resolveUrl('~/Account/Login');\n                });\n            }\n        });\n    }\n\n    renderContents() {\n        const id = this.useIdPrefix();\n        this.element.empty().append(\n            <div class=\"s-container-tight\">\n                <AccountPanelTitle />\n                <div class=\"s-Panel p-4\">\n                    <h5 class=\"text-center mb-4\">{myTexts.FormTitle}</h5>\n                    <form id={id.Form} action=\"\">\n                        <div id={id.PropertyGrid}></div>\n                        <button id={id.SubmitButton} type=\"submit\" class=\"btn btn-primary mx-8 w-100\"\n                            onClick={e => { e.preventDefault(); this.submitClick(); }}>\n                            {myTexts.SubmitButton}\n                        </button>\n                        <input type=\"hidden\" id={id.Token} value={this.options.token} />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}"],
  "mappings": "uTAEA,IAAAA,EAA8B,SAC9BC,EAAmE,SAGpD,SAARC,EAA0BC,EAA2B,CACxD,EAAE,UAAY,CACV,IAAIC,EAAmB,EAAE,WAAW,EAC/B,SAAS,oCAAoC,EAAGD,CAAG,CAC5D,CAAC,CACL,CALwBE,EAAAH,EAAA,YAWxB,IAAMI,EAAUC,EAAM,MAAM,WAAW,cAE1BH,EAAN,cAAiC,eAA0D,CAM9F,YAAYI,EAAmBL,EAA2B,CACtD,MAAMK,EAAWL,CAAG,EAHxB,KAAQ,KAAO,IAAIM,EAAkB,KAAK,QAAQ,EAK9C,KAAK,KAAK,YAAY,kBAAkB,KAAK,WAAYC,GAAK,CAC1D,GAAI,KAAK,KAAK,YAAY,MAAM,OAAS,EACrC,SAAO,UAAOH,EAAM,WAAW,0BAA2B,CAAC,CACnE,CAAC,EAED,KAAK,KAAK,gBAAgB,kBAAkB,KAAK,WAAYG,GAAK,CAC9D,GAAI,KAAK,KAAK,gBAAgB,QAAU,KAAK,KAAK,YAAY,MAC1D,OAAOH,EAAM,WAAW,uBAChC,CAAC,CACL,CAhBU,YAAa,CAAE,OAAOE,EAAkB,OAAS,CAkB3D,aAAc,CACV,GAAK,KAAK,aAAa,EAGvB,KAAIE,EAAU,KAAK,cAAc,EACjCA,EAAQ,MAAQ,KAAK,KAAK,OAAO,EAAE,IAAI,KACvC,eAAY,CACR,OAAK,cAAW,yBAAyB,EACzC,QAASA,EACT,UAAW,IAAM,IACb,qBAAkBL,EAAQ,QAAS,IAAM,CACrC,OAAO,SAAS,QAAO,cAAW,iBAAiB,CACvD,CAAC,CACL,CACJ,CAAC,EACL,CAEA,gBAAiB,CACb,IAAMM,EAAK,KAAK,YAAY,EAC5B,KAAK,QAAQ,MAAM,EAAE,OACjBC,EAAC,OAAI,MAAM,oBACP,UAAAA,EAACC,EAAA,EAAkB,EACnBD,EAAC,OAAI,MAAM,cACP,UAAAA,EAAC,MAAG,MAAM,mBAAoB,SAAAP,EAAQ,UAAU,EAChDO,EAAC,QAAK,GAAID,EAAG,KAAM,OAAO,GACtB,UAAAC,EAAC,OAAI,GAAID,EAAG,aAAc,EAC1BC,EAAC,UAAO,GAAID,EAAG,aAAc,KAAK,SAAS,MAAM,6BAC7C,QAASF,GAAK,CAAEA,EAAE,eAAe,EAAG,KAAK,YAAY,CAAG,EACvD,SAAAJ,EAAQ,aACb,EACAO,EAAC,SAAM,KAAK,SAAS,GAAID,EAAG,MAAO,MAAO,KAAK,QAAQ,MAAO,GAClE,GACJ,GACJ,CACJ,CACJ,CACJ,EAxDaP,EAAAD,EAAA",
  "names": ["import_corelib", "import_q", "pageInit", "opt", "ResetPasswordPanel", "__name", "myTexts", "Texts", "container", "ResetPasswordForm", "e", "request", "id", "jsx", "AccountPanelTitle"]
}
