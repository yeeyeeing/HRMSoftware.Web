import{a as N}from"../../../_chunks/chunk-VDMXQNXQ.js";import{a as w}from"../../../_chunks/chunk-N3LCTBMN.js";import{h as S,j as T,k as C,l as I,m as r,n as D}from"../../../_chunks/chunk-YDNSOE4Z.js";import"../../../_chunks/chunk-27W64ILM.js";import"../../../_chunks/chunk-KJR5IZZY.js";import{b as E}from"../../../_chunks/chunk-2SJ2SYN6.js";import"../../../_chunks/chunk-K2UT2MVJ.js";import{a as v}from"../../../_chunks/chunk-DNINIZJD.js";import{c as a,g as n,h as P,j as U,k as g}from"../../../_chunks/chunk-L3ECGIWB.js";var L=n(g(),1);var x=n(v(),1),y=n(g(),1);var d=n(v(),1),c=n(g(),1);var k=n(v(),1),o=n(g(),1);var h=class extends k.TemplatedDialog{constructor(e){super(e);this.permissions=new N(this.byId("Permissions"),{showRevoke:!0}),I.List({UserID:this.options.userID,Module:null,Submodule:null},i=>{this.permissions.value=i.Entities}),I.ListRolePermissions({UserID:this.options.userID,Module:null,Submodule:null},i=>{this.permissions.rolePermissions=i.Entities}),this.permissions.implicitPermissions=(0,o.getRemoteData)("Administration.ImplicitPermissions"),this.dialogTitle=(0,o.format)((0,o.localText)("Site.UserPermissionDialog.DialogTitle"),this.options.username)}getDialogButtons(){return[{text:(0,o.localText)("Dialogs.OkButton"),cssClass:"btn btn-primary",click:e=>{I.Update({UserID:this.options.userID,Permissions:this.permissions.value,Module:null,Submodule:null},i=>{this.dialogClose(),window.setTimeout(()=>(0,o.notifySuccess)((0,o.localText)("Site.UserPermissionDialog.SaveSuccess")),0)})}},{text:(0,o.localText)("Dialogs.CancelButton"),click:()=>this.dialogClose()}]}getTemplate(){return'<div id="~_Permissions"></div>'}};a(h,"UserPermissionDialog");var B=n(v(),1);var R=n(g(),1);var u=class extends d.EntityDialog{constructor(){super();this.form=new C(this.idPrefix);this.form.Password.element.attr("autocomplete","new-password"),this.form.Password.change(()=>{d.EditorUtils.setRequired(this.form.PasswordConfirm,this.form.Password.value.length>0)}),this.form.Password.addValidationRule(this.uniqueName,e=>{if(this.form.Password.value.length<6)return(0,c.format)((0,c.localText)(w.Validation.MinRequiredPasswordLength),6)}),this.form.PasswordConfirm.addValidationRule(this.uniqueName,e=>{if(this.form.Password.value!=this.form.PasswordConfirm.value)return(0,c.localText)(w.Validation.PasswordConfirmMismatch)})}getFormKey(){return C.formKey}getIdProperty(){return r.idProperty}getIsActiveProperty(){return r.isActiveProperty}getLocalTextPrefix(){return r.localTextPrefix}getNameProperty(){return r.nameProperty}getService(){return D.baseUrl}getToolbarButtons(){let e=super.getToolbarButtons();return e.push({title:(0,c.localText)(w.Site.UserDialog.EditPermissionsButton),cssClass:"edit-permissions-button",icon:"fa-lock text-green",onClick:()=>{new h({userID:this.entity.UserId,username:this.entity.Username}).dialogOpen()}}),e}updateInterface(){super.updateInterface(),this.toolbar.findButton("edit-permissions-button").toggleClass("disabled",this.isNewOrDeleted())}dialogOpen(e){super.dialogOpen(e);var i=this,l=document.getElementById(this.idPrefix+"EmployeeRowID");let t=new B.Select2Editor($(l));d.EditorUtils.setReadonly(this.form.EmployeeName.element,!0),E.List({},s=>{for(var f in s.Entities)(0,R.isEmptyOrNull)(s.Entities[f].CreateUser)&&t.addItem({id:s.Entities[f].Id.toString(),text:s.Entities[f].EmployeeID.toString()})}),$(l).on("change",function(){return U(this,null,function*(){(0,R.isEmptyOrNull)($(l).val())?i.form.EmployeeName.value="":E.Retrieve({EntityId:$(l).val()},s=>{i.form.EmployeeName.value=s.Entity.EmployeeName})})})}afterLoadEntity(){super.afterLoadEntity(),this.form.Password.element.toggleClass("required",this.isNew()).closest(".field").find("sup").toggle(this.isNew()),this.form.PasswordConfirm.element.toggleClass("required",this.isNew()).closest(".field").find("sup").toggle(this.isNew())}save_submitHandler(e){super.save_submitHandler(e),E.Update({EntityId:this.form.EmployeeRowID.value,Entity:{UserPassword:this.form.Password.value}})}};a(u,"UserDialog"),u=P([d.Decorators.registerClass()],u);var p=class extends x.EntityGrid{getColumnsKey(){return T.columnsKey}getDialogType(){return u}getIdProperty(){return r.idProperty}getIsActiveProperty(){return r.isActiveProperty}getLocalTextPrefix(){return r.localTextPrefix}getService(){return D.baseUrl}constructor(m){super(m)}getDefaultSortBy(){return[r.Fields.Username]}getColumns(){var m=super.getColumns(),e=(0,y.tryFirst)(m,t=>t.field=="ImpersonationToken");e!=null&&(e.format=t=>t.value?`<a target="_blank" href="${(0,y.resolveUrl)("~/Account/ImpersonateAs?token=")}${t.value}"><i class="fa fa-user-secret text-blue"></i></a>`:"");var i=(0,y.tryFirst)(m,t=>t.field==r.Fields.Roles);if(i){var l;S.getLookupAsync().then(t=>{l=t,this.slickGrid.invalidate()}),i.format=t=>{if(!l)return'<i class="fa fa-spinner"></i>';var s=(t.value||[]).map(f=>(l.itemById[f]||{}).RoleName||"");return s.sort(),s.join(", ")}}return m}};a(p,"UserGrid"),p=P([x.Decorators.registerClass()],p);function O(){(0,L.initFullHeightGridPage)(new p($("#GridDiv")).element)}a(O,"pageInit");export{O as default};
//# sourceMappingURL=UserPage.js.map
