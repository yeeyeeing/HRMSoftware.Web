import{a as k}from"../../../_chunks/chunk-VDMXQNXQ.js";import{a as I}from"../../../_chunks/chunk-HVKMXUZD.js";import{h as S,j as T,k as b,l as D,m as r,n as E}from"../../../_chunks/chunk-DA7Z2NN7.js";import"../../../_chunks/chunk-27W64ILM.js";import"../../../_chunks/chunk-TXZZYEY4.js";import"../../../_chunks/chunk-HERT6KZV.js";import"../../../_chunks/chunk-DMDSRNFC.js";import"../../../_chunks/chunk-TIB4BNCY.js";import{b as R}from"../../../_chunks/chunk-J32UWVCU.js";import"../../../_chunks/chunk-K2UT2MVJ.js";import{a as w}from"../../../_chunks/chunk-DNINIZJD.js";import{c as l,g as s,h as y,k as f}from"../../../_chunks/chunk-L3ECGIWB.js";var N=s(f(),1);var C=s(w(),1),h=s(f(),1);var c=s(w(),1),p=s(f(),1);var B=s(w(),1),o=s(f(),1);var g=class extends B.TemplatedDialog{constructor(e){super(e);this.permissions=new k(this.byId("Permissions"),{showRevoke:!0}),D.List({UserID:this.options.userID,Module:null,Submodule:null},i=>{this.permissions.value=i.Entities}),D.ListRolePermissions({UserID:this.options.userID,Module:null,Submodule:null},i=>{this.permissions.rolePermissions=i.Entities}),this.permissions.implicitPermissions=(0,o.getRemoteData)("Administration.ImplicitPermissions"),this.dialogTitle=(0,o.format)((0,o.localText)("Site.UserPermissionDialog.DialogTitle"),this.options.username)}getDialogButtons(){return[{text:(0,o.localText)("Dialogs.OkButton"),cssClass:"btn btn-primary",click:e=>{D.Update({UserID:this.options.userID,Permissions:this.permissions.value,Module:null,Submodule:null},i=>{this.dialogClose(),window.setTimeout(()=>(0,o.notifySuccess)((0,o.localText)("Site.UserPermissionDialog.SaveSuccess")),0)})}},{text:(0,o.localText)("Dialogs.CancelButton"),click:()=>this.dialogClose()}]}getTemplate(){return'<div id="~_Permissions"></div>'}};l(g,"UserPermissionDialog");var L=s(w(),1);var x=s(f(),1);var u=class extends c.EntityDialog{constructor(){super();this.form=new b(this.idPrefix);this.form.Password.element.attr("autocomplete","new-password"),this.form.Password.change(()=>{c.EditorUtils.setRequired(this.form.PasswordConfirm,this.form.Password.value.length>0)}),this.form.Password.addValidationRule(this.uniqueName,e=>{if(this.form.Password.value.length<6)return(0,p.format)((0,p.localText)(I.Validation.MinRequiredPasswordLength),6)}),this.form.PasswordConfirm.addValidationRule(this.uniqueName,e=>{if(this.form.Password.value!=this.form.PasswordConfirm.value)return(0,p.localText)(I.Validation.PasswordConfirmMismatch)})}getFormKey(){return b.formKey}getIdProperty(){return r.idProperty}getIsActiveProperty(){return r.isActiveProperty}getLocalTextPrefix(){return r.localTextPrefix}getNameProperty(){return r.nameProperty}getService(){return E.baseUrl}getToolbarButtons(){let e=super.getToolbarButtons();return e.push({title:(0,p.localText)(I.Site.UserDialog.EditPermissionsButton),cssClass:"edit-permissions-button",icon:"fa-lock text-green",onClick:()=>{new g({userID:this.entity.UserId,username:this.entity.Username}).dialogOpen()}}),e}updateInterface(){super.updateInterface(),this.toolbar.findButton("edit-permissions-button").toggleClass("disabled",this.isNewOrDeleted())}dialogOpen(e){super.dialogOpen(e);var i=this,n=i.form.EmployeeRowID.value;console.log(n);var t=document.getElementById(this.idPrefix+"EmployeeRowID");let P=new L.Select2Editor($(t));R.List({},m=>{for(var v in m.Entities)(m.Entities[v].CreateUser==!1||m.Entities[v].Id==n)&&P.addItem({id:m.Entities[v].Id.toString(),text:m.Entities[v].EmployeeID.toString()});(0,x.isEmptyOrNull)(n)||$(t).val(n.toString()).trigger("change")})}afterLoadEntity(){super.afterLoadEntity(),this.form.Password.element.toggleClass("required",this.isNew()).closest(".field").find("sup").toggle(this.isNew()),this.form.PasswordConfirm.element.toggleClass("required",this.isNew()).closest(".field").find("sup").toggle(this.isNew())}save_submitHandler(e){super.save_submitHandler(e),(0,x.isEmptyOrNull)(this.form.EmployeeRowID.value)||R.Update({EntityId:this.form.EmployeeRowID.value,Entity:{UserPassword:this.form.Password.value}})}};l(u,"UserDialog"),u=y([c.Decorators.registerClass()],u);var d=class extends C.EntityGrid{getColumnsKey(){return T.columnsKey}getDialogType(){return u}getIdProperty(){return r.idProperty}getIsActiveProperty(){return r.isActiveProperty}getLocalTextPrefix(){return r.localTextPrefix}getService(){return E.baseUrl}constructor(a){super(a)}getDefaultSortBy(){return[r.Fields.Username]}getColumns(){var a=super.getColumns(),e=(0,h.tryFirst)(a,t=>t.field=="ImpersonationToken");e!=null&&(e.format=t=>t.value?`<a target="_blank" href="${(0,h.resolveUrl)("~/Account/ImpersonateAs?token=")}${t.value}"><i class="fa fa-user-secret text-blue"></i></a>`:"");var i=(0,h.tryFirst)(a,t=>t.field==r.Fields.Roles);if(i){var n;S.getLookupAsync().then(t=>{n=t,this.slickGrid.invalidate()}),i.format=t=>{if(!n)return'<i class="fa fa-spinner"></i>';var P=(t.value||[]).map(m=>(n.itemById[m]||{}).RoleName||"");return P.sort(),P.join(", ")}}return a}};l(d,"UserGrid"),d=y([C.Decorators.registerClass()],d);function O(){(0,N.initFullHeightGridPage)(new d($("#GridDiv")).element)}l(O,"pageInit");export{O as default};
//# sourceMappingURL=UserPage.js.map
