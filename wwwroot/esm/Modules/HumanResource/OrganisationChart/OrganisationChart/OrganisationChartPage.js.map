{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/OrganisationChart/OrgChart.js/src/orgchart.js", "../../../../../../Modules/HumanResource/OrganisationChart/OrganisationChart/OrgChartStyle.ts", "../../../../../../Modules/HumanResource/OrganisationChart/OrganisationChart/OrganisationChartPage.ts"],
  "sourcesContent": ["export default class OrgChart {\n  constructor(options) {\n    this._name = 'OrgChart';\n    Promise.prototype.finally = function (callback) {\n      let P = this.constructor;\n\n      return this.then(\n        value => P.resolve(callback()).then(() => value),\n        reason => P.resolve(callback()).then(() => { throw reason; })\n      );\n    };\n\n    let that = this,\n      defaultOptions = {\n        'nodeTitle': 'name',\n        'nodeId': 'id',\n        'toggleSiblingsResp': false,\n        'depth': 999,\n        'chartClass': '',\n        'exportButton': false,\n        'exportFilename': 'OrgChart',\n        'parentNodeSymbol': 'fa-users',\n        'draggable': false,\n        'direction': 't2b',\n        'pan': false,\n        'zoom': false\n      },\n      opts = Object.assign(defaultOptions, options),\n      data = opts.data,\n      chart = document.createElement('div'),\n      chartContainer = document.querySelector(opts.chartContainer);\n\n    this.options = opts;\n    delete this.options.data;\n    this.chart = chart;\n    this.chartContainer = chartContainer;\n    chart.dataset.options = JSON.stringify(opts);\n    chart.setAttribute('class', 'orgchart' + (opts.chartClass !== '' ? ' ' + opts.chartClass : '') +\n      (opts.direction !== 't2b' ? ' ' + opts.direction : ''));\n    if (typeof data === 'object') { // local json datasource\n      this.buildHierarchy(chart, opts.ajaxURL ? data : this._attachRel(data, '00'), 0);\n    } else if (typeof data === 'string' && data.startsWith('#')) { // ul datasource\n      this.buildHierarchy(chart, this._buildJsonDS(document.querySelector(data).children[0]), 0);\n    } else { // ajax datasource\n      let spinner = document.createElement('i');\n\n      spinner.setAttribute('class', 'fa fa-circle-o-notch fa-spin spinner');\n      chart.appendChild(spinner);\n      this._getJSON(data)\n      .then(function (resp) {\n        that.buildHierarchy(chart, opts.ajaxURL ? resp : that._attachRel(resp, '00'), 0);\n      })\n      .catch(function (err) {\n        console.error('failed to fetch datasource for orgchart', err);\n      })\n      .finally(function () {\n        let spinner = chart.querySelector('.spinner');\n\n        spinner.parentNode.removeChild(spinner);\n      });\n    }\n    chart.addEventListener('click', this._clickChart.bind(this));\n    // append the export button to the chart-container\n    if (opts.exportButton && !chartContainer.querySelector('.oc-export-btn')) {\n      let exportBtn = document.createElement('button'),\n        downloadBtn = document.createElement('a');\n\n      exportBtn.setAttribute('class', 'oc-export-btn' + (opts.chartClass !== '' ? ' ' + opts.chartClass : ''));\n      exportBtn.innerHTML = 'Export';\n      exportBtn.addEventListener('click', this._clickExportButton.bind(this));\n      downloadBtn.setAttribute('class', 'oc-download-btn' + (opts.chartClass !== '' ? ' ' + opts.chartClass : ''));\n      downloadBtn.setAttribute('download', opts.exportFilename + '.png');\n      chartContainer.appendChild(exportBtn);\n      chartContainer.appendChild(downloadBtn);\n    }\n\n    if (opts.pan) {\n      chartContainer.style.overflow = 'hidden';\n      chart.addEventListener('mousedown', this._onPanStart.bind(this));\n      chart.addEventListener('touchstart', this._onPanStart.bind(this));\n      document.body.addEventListener('mouseup', this._onPanEnd.bind(this));\n      document.body.addEventListener('touchend', this._onPanEnd.bind(this));\n    }\n\n    if (opts.zoom) {\n      chartContainer.addEventListener('wheel', this._onWheeling.bind(this));\n      chartContainer.addEventListener('touchstart', this._onTouchStart.bind(this));\n      document.body.addEventListener('touchmove', this._onTouchMove.bind(this));\n      document.body.addEventListener('touchend', this._onTouchEnd.bind(this));\n    }\n\n    chartContainer.appendChild(chart);\n  }\n  get name() {\n    return this._name;\n  }\n  _closest(el, fn) {\n    return el && ((fn(el) && el !== this.chart) ? el : this._closest(el.parentNode, fn));\n  }\n  _siblings(el, expr) {\n    return Array.from(el.parentNode.children).filter((child) => {\n      if (child !== el) {\n        if (expr) {\n          return el.matches(expr);\n        }\n        return true;\n      }\n      return false;\n    });\n  }\n  _prevAll(el, expr) {\n    let sibs = [],\n      prevSib = el.previousElementSibling;\n\n    while (prevSib) {\n      if (!expr || prevSib.matches(expr)) {\n        sibs.push(prevSib);\n      }\n      prevSib = prevSib.previousElementSibling;\n    }\n    return sibs;\n  }\n  _nextAll(el, expr) {\n    let sibs = [];\n    let nextSib = el.nextElementSibling;\n\n    while (nextSib) {\n      if (!expr || nextSib.matches(expr)) {\n        sibs.push(nextSib);\n      }\n      nextSib = nextSib.nextElementSibling;\n    }\n    return sibs;\n  }\n  _isVisible(el) {\n    return el.offsetParent !== null;\n  }\n  _addClass(elements, classNames) {\n    elements.forEach((el) => {\n      if (classNames.indexOf(' ') > 0) {\n        classNames.split(' ').forEach((className) => el.classList.add(className));\n      } else {\n        el.classList.add(classNames);\n      }\n    });\n  }\n  _removeClass(elements, classNames) {\n    elements.forEach((el) => {\n      if (classNames.indexOf(' ') > 0) {\n        classNames.split(' ').forEach((className) => el.classList.remove(className));\n      } else {\n        el.classList.remove(classNames);\n      }\n    });\n  }\n  _css(elements, prop, val) {\n    elements.forEach((el) => {\n      el.style[prop] = val;\n    });\n  }\n  _removeAttr(elements, attr) {\n    elements.forEach((el) => {\n      el.removeAttribute(attr);\n    });\n  }\n  _one(el, type, listener, self) {\n    let one = function (event) {\n      try {\n        listener.call(self, event);\n      } finally {\n        el.removeEventListener(type, one);\n      }\n    };\n\n    el.addEventListener(type, one);\n  }\n  _getDescElements(ancestors, selector) {\n    let results = [];\n\n    ancestors.forEach((el) => results.push(...el.querySelectorAll(selector)));\n    return results;\n  }\n  _getJSON(url) {\n    return new Promise(function (resolve, reject) {\n      let xhr = new XMLHttpRequest();\n\n      function handler() {\n        if (this.readyState !== 4) {\n          return;\n        }\n        if (this.status === 200) {\n          resolve(JSON.parse(this.response));\n        } else {\n          reject(new Error(this.statusText));\n        }\n      }\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      // xhr.setRequestHeader('Accept', 'application/json');\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      xhr.send();\n    });\n  }\n  _buildJsonDS(li) {\n    let subObj = {\n      'name': li.firstChild.textContent.trim(),\n      'relationship': (li.parentNode.parentNode.nodeName === 'LI' ? '1' : '0') +\n        (li.parentNode.children.length > 1 ? 1 : 0) + (li.children.length ? 1 : 0)\n    };\n\n    if (li.id) {\n      subObj.id = li.id;\n    }\n    if (li.querySelector('ul')) {\n      Array.from(li.querySelector('ul').children).forEach((el) => {\n        if (!subObj.children) { subObj.children = []; }\n        subObj.children.push(this._buildJsonDS(el));\n      });\n    }\n    return subObj;\n  }\n  _attachRel(data, flags) {\n    data.relationship = flags + (data.children && data.children.length > 0 ? 1 : 0);\n    if (data.children) {\n      for (let item of data.children) {\n        this._attachRel(item, '1' + (data.children.length > 1 ? 1 : 0));\n      }\n    }\n    return data;\n  }\n  _repaint(node) {\n    if (node) {\n      node.style.offsetWidth = node.offsetWidth;\n    }\n  }\n  // whether the cursor is hovering over the node\n  _isInAction(node) {\n    return node.querySelector(':scope > .edge').className.indexOf('fa-') > -1;\n  }\n  // detect the exist/display state of related node\n  _getNodeState(node, relation) {\n    let criteria,\n      state = { 'exist': false, 'visible': false };\n\n    if (relation === 'parent') {\n      criteria = this._closest(node, (el) => el.classList && el.classList.contains('nodes'));\n      if (criteria) {\n        state.exist = true;\n      }\n      if (state.exist && this._isVisible(criteria.parentNode.children[0])) {\n        state.visible = true;\n      }\n    } else if (relation === 'children') {\n      criteria = this._closest(node, (el) => el.nodeName === 'TR').nextElementSibling;\n      if (criteria) {\n        state.exist = true;\n      }\n      if (state.exist && this._isVisible(criteria)) {\n        state.visible = true;\n      }\n    } else if (relation === 'siblings') {\n      criteria = this._siblings(this._closest(node, (el) => el.nodeName === 'TABLE').parentNode);\n      if (criteria.length) {\n        state.exist = true;\n      }\n      if (state.exist && criteria.some((el) => this._isVisible(el))) {\n        state.visible = true;\n      }\n    }\n\n    return state;\n  }\n  // find the related nodes\n  getRelatedNodes(node, relation) {\n    if (relation === 'parent') {\n      return this._closest(node, (el) => el.classList.contains('nodes'))\n        .parentNode.children[0].querySelector('.node');\n    } else if (relation === 'children') {\n      return Array.from(this._closest(node, (el) => el.nodeName === 'TABLE').lastChild.children)\n        .map((el) => el.querySelector('.node'));\n    } else if (relation === 'siblings') {\n      return this._siblings(this._closest(node, (el) => el.nodeName === 'TABLE').parentNode)\n        .map((el) => el.querySelector('.node'));\n    }\n    return [];\n  }\n  _switchHorizontalArrow(node) {\n    let opts = this.options,\n      leftEdge = node.querySelector('.leftEdge'),\n      rightEdge = node.querySelector('.rightEdge'),\n      temp = this._closest(node, (el) => el.nodeName === 'TABLE').parentNode;\n\n    if (opts.toggleSiblingsResp && (typeof opts.ajaxURL === 'undefined' ||\n      this._closest(node, (el) => el.classList.contains('.nodes')).dataset.siblingsLoaded)) {\n      let prevSib = temp.previousElementSibling,\n        nextSib = temp.nextElementSibling;\n\n      if (prevSib) {\n        if (prevSib.classList.contains('hidden')) {\n          leftEdge.classList.add('fa-chevron-left');\n          leftEdge.classList.remove('fa-chevron-right');\n        } else {\n          leftEdge.classList.add('fa-chevron-right');\n          leftEdge.classList.remove('fa-chevron-left');\n        }\n      }\n      if (nextSib) {\n        if (nextSib.classList.contains('hidden')) {\n          rightEdge.classList.add('fa-chevron-right');\n          rightEdge.classList.remove('fa-chevron-left');\n        } else {\n          rightEdge.classList.add('fa-chevron-left');\n          rightEdge.classList.remove('fa-chevron-right');\n        }\n      }\n    } else {\n      let sibs = this._siblings(temp),\n        sibsVisible = sibs.length ? !sibs.some((el) => el.classList.contains('hidden')) : false;\n\n      leftEdge.classList.toggle('fa-chevron-right', sibsVisible);\n      leftEdge.classList.toggle('fa-chevron-left', !sibsVisible);\n      rightEdge.classList.toggle('fa-chevron-left', sibsVisible);\n      rightEdge.classList.toggle('fa-chevron-right', !sibsVisible);\n    }\n  }\n  _hoverNode(event) {\n    let node = event.target,\n      flag = false,\n      topEdge = node.querySelector(':scope > .topEdge'),\n      bottomEdge = node.querySelector(':scope > .bottomEdge'),\n      leftEdge = node.querySelector(':scope > .leftEdge');\n\n    if (event.type === 'mouseenter') {\n      if (topEdge) {\n        flag = this._getNodeState(node, 'parent').visible;\n        topEdge.classList.toggle('fa-chevron-up', !flag);\n        topEdge.classList.toggle('fa-chevron-down', flag);\n      }\n      if (bottomEdge) {\n        flag = this._getNodeState(node, 'children').visible;\n        bottomEdge.classList.toggle('fa-chevron-down', !flag);\n        bottomEdge.classList.toggle('fa-chevron-up', flag);\n      }\n      if (leftEdge) {\n        this._switchHorizontalArrow(node);\n      }\n    } else {\n      Array.from(node.querySelectorAll(':scope > .edge')).forEach((el) => {\n        el.classList.remove('fa-chevron-up', 'fa-chevron-down', 'fa-chevron-right', 'fa-chevron-left');\n      });\n    }\n  }\n  // define node click event handler\n  _clickNode(event) {\n    let clickedNode = event.currentTarget,\n      focusedNode = this.chart.querySelector('.focused');\n\n    if (focusedNode) {\n      focusedNode.classList.remove('focused');\n    }\n    clickedNode.classList.add('focused');\n  }\n  // build the parent node of specific node\n  _buildParentNode(currentRoot, nodeData, callback) {\n    let that = this,\n      table = document.createElement('table');\n\n    nodeData.relationship = nodeData.relationship || '001';\n    this._createNode(nodeData, 0)\n      .then(function (nodeDiv) {\n        let chart = that.chart;\n\n        nodeDiv.classList.remove('slide-up');\n        nodeDiv.classList.add('slide-down');\n        let parentTr = document.createElement('tr'),\n          superiorLine = document.createElement('tr'),\n          inferiorLine = document.createElement('tr'),\n          childrenTr = document.createElement('tr');\n\n        parentTr.setAttribute('class', 'hidden');\n        parentTr.innerHTML = `<td colspan=\"2\"></td>`;\n        table.appendChild(parentTr);\n        superiorLine.setAttribute('class', 'lines hidden');\n        superiorLine.innerHTML = `<td colspan=\"2\"><div class=\"downLine\"></div></td>`;\n        table.appendChild(superiorLine);\n        inferiorLine.setAttribute('class', 'lines hidden');\n        inferiorLine.innerHTML = `<td class=\"rightLine\">&nbsp;</td><td class=\"leftLine\">&nbsp;</td>`;\n        table.appendChild(inferiorLine);\n        childrenTr.setAttribute('class', 'nodes');\n        childrenTr.innerHTML = `<td colspan=\"2\"></td>`;\n        table.appendChild(childrenTr);\n        table.querySelector('td').appendChild(nodeDiv);\n        chart.insertBefore(table, chart.children[0]);\n        table.children[3].children[0].appendChild(chart.lastChild);\n        callback();\n      })\n      .catch(function (err) {\n        console.error('Failed to create parent node', err);\n      });\n  }\n  _switchVerticalArrow(arrow) {\n    arrow.classList.toggle('fa-chevron-up');\n    arrow.classList.toggle('fa-chevron-down');\n  }\n  // show the parent node of the specified node\n  showParent(node) {\n    // just show only one superior level\n    let temp = this._prevAll(this._closest(node, (el) => el.classList.contains('nodes')));\n\n    this._removeClass(temp, 'hidden');\n    // just show only one line\n    this._addClass(Array(temp[0].children).slice(1, -1), 'hidden');\n    // show parent node with animation\n    let parent = temp[2].querySelector('.node');\n\n    this._one(parent, 'transitionend', function () {\n      parent.classList.remove('slide');\n      if (this._isInAction(node)) {\n        this._switchVerticalArrow(node.querySelector(':scope > .topEdge'));\n      }\n    }, this);\n    this._repaint(parent);\n    parent.classList.add('slide');\n    parent.classList.remove('slide-down');\n  }\n  // show the sibling nodes of the specified node\n  showSiblings(node, direction) {\n    // firstly, show the sibling td tags\n    let siblings = [],\n      temp = this._closest(node, (el) => el.nodeName === 'TABLE').parentNode;\n\n    if (direction) {\n      siblings = direction === 'left' ? this._prevAll(temp) : this._nextAll(temp);\n    } else {\n      siblings = this._siblings(temp);\n    }\n    this._removeClass(siblings, 'hidden');\n    // secondly, show the lines\n    let upperLevel = this._prevAll(this._closest(node, (el) => el.classList.contains('nodes')));\n\n    temp = Array.from(upperLevel[0].querySelectorAll(':scope > .hidden'));\n    if (direction) {\n      this._removeClass(temp.slice(0, siblings.length * 2), 'hidden');\n    } else {\n      this._removeClass(temp, 'hidden');\n    }\n    // thirdly, do some cleaning stuff\n    if (!this._getNodeState(node, 'parent').visible) {\n      this._removeClass(upperLevel, 'hidden');\n      let parent = upperLevel[2].querySelector('.node');\n\n      this._one(parent, 'transitionend', function (event) {\n        event.target.classList.remove('slide');\n      }, this);\n      this._repaint(parent);\n      parent.classList.add('slide');\n      parent.classList.remove('slide-down');\n    }\n    // lastly, show the sibling nodes with animation\n    siblings.forEach((sib) => {\n      Array.from(sib.querySelectorAll('.node')).forEach((node) => {\n        if (this._isVisible(node)) {\n          node.classList.add('slide');\n          node.classList.remove('slide-left', 'slide-right');\n        }\n      });\n    });\n    this._one(siblings[0].querySelector('.slide'), 'transitionend', function () {\n      siblings.forEach((sib) => {\n        this._removeClass(Array.from(sib.querySelectorAll('.slide')), 'slide');\n      });\n      if (this._isInAction(node)) {\n        this._switchHorizontalArrow(node);\n        node.querySelector('.topEdge').classList.remove('fa-chevron-up');\n        node.querySelector('.topEdge').classList.add('fa-chevron-down');\n      }\n    }, this);\n  }\n  // hide the sibling nodes of the specified node\n  hideSiblings(node, direction) {\n    let nodeContainer = this._closest(node, (el) => el.nodeName === 'TABLE').parentNode,\n      siblings = this._siblings(nodeContainer);\n\n    siblings.forEach((sib) => {\n      if (sib.querySelector('.spinner')) {\n        this.chart.dataset.inAjax = false;\n      }\n    });\n\n    if (!direction || (direction && direction === 'left')) {\n      let preSibs = this._prevAll(nodeContainer);\n\n      preSibs.forEach((sib) => {\n        Array.from(sib.querySelectorAll('.node')).forEach((node) => {\n          if (this._isVisible(node)) {\n            node.classList.add('slide', 'slide-right');\n          }\n        });\n      });\n    }\n    if (!direction || (direction && direction !== 'left')) {\n      let nextSibs = this._nextAll(nodeContainer);\n\n      nextSibs.forEach((sib) => {\n        Array.from(sib.querySelectorAll('.node')).forEach((node) => {\n          if (this._isVisible(node)) {\n            node.classList.add('slide', 'slide-left');\n          }\n        });\n      });\n    }\n\n    let animatedNodes = [];\n\n    this._siblings(nodeContainer).forEach((sib) => {\n      Array.prototype.push.apply(animatedNodes, Array.from(sib.querySelectorAll('.slide')));\n    });\n    let lines = [];\n\n    for (let node of animatedNodes) {\n      let temp = this._closest(node, function (el) {\n        return el.classList.contains('nodes');\n      }).previousElementSibling;\n\n      lines.push(temp);\n      lines.push(temp.previousElementSibling);\n    }\n    lines = [...new Set(lines)];\n    lines.forEach(function (line) {\n      line.style.visibility = 'hidden';\n    });\n\n    this._one(animatedNodes[0], 'transitionend', function (event) {\n      lines.forEach(function (line) {\n        line.removeAttribute('style');\n      });\n      let sibs = [];\n\n      if (direction) {\n        if (direction === 'left') {\n          sibs = this._prevAll(nodeContainer, ':not(.hidden)');\n        } else {\n          sibs = this._nextAll(nodeContainer, ':not(.hidden)');\n        }\n      } else {\n        sibs = this._siblings(nodeContainer);\n      }\n      let temp = Array.from(this._closest(nodeContainer, function (el) {\n        return el.classList.contains('nodes');\n      }).previousElementSibling.querySelectorAll(':scope > :not(.hidden)'));\n\n      let someLines = temp.slice(1, direction ? sibs.length * 2 + 1 : -1);\n\n      this._addClass(someLines, 'hidden');\n      this._removeClass(animatedNodes, 'slide');\n      sibs.forEach((sib) => {\n        Array.from(sib.querySelectorAll('.node')).slice(1).forEach((node) => {\n          if (this._isVisible(node)) {\n            node.classList.remove('slide-left', 'slide-right');\n            node.classList.add('slide-up');\n          }\n        });\n      });\n      sibs.forEach((sib) => {\n        this._addClass(Array.from(sib.querySelectorAll('.lines')), 'hidden');\n        this._addClass(Array.from(sib.querySelectorAll('.nodes')), 'hidden');\n        this._addClass(Array.from(sib.querySelectorAll('.verticalNodes')), 'hidden');\n      });\n      this._addClass(sibs, 'hidden');\n\n      if (this._isInAction(node)) {\n        this._switchHorizontalArrow(node);\n      }\n    }, this);\n  }\n  // recursively hide the ancestor node and sibling nodes of the specified node\n  hideParent(node) {\n    let temp = Array.from(this._closest(node, function (el) {\n      return el.classList.contains('nodes');\n    }).parentNode.children).slice(0, 3);\n\n    if (temp[0].querySelector('.spinner')) {\n      this.chart.dataset.inAjax = false;\n    }\n    // hide the sibling nodes\n    if (this._getNodeState(node, 'siblings').visible) {\n      this.hideSiblings(node);\n    }\n    // hide the lines\n    let lines = temp.slice(1);\n\n    this._css(lines, 'visibility', 'hidden');\n    // hide the superior nodes with transition\n    let parent = temp[0].querySelector('.node'),\n      grandfatherVisible = this._getNodeState(parent, 'parent').visible;\n\n    if (parent && this._isVisible(parent)) {\n      parent.classList.add('slide', 'slide-down');\n      this._one(parent, 'transitionend', function () {\n        parent.classList.remove('slide');\n        this._removeAttr(lines, 'style');\n        this._addClass(temp, 'hidden');\n      }, this);\n    }\n    // if the current node has the parent node, hide it recursively\n    if (parent && grandfatherVisible) {\n      this.hideParent(parent);\n    }\n  }\n  // exposed method\n  addParent(currentRoot, data) {\n    let that = this;\n\n    this._buildParentNode(currentRoot, data, function () {\n      if (!currentRoot.querySelector(':scope > .topEdge')) {\n        let topEdge = document.createElement('i');\n\n        topEdge.setAttribute('class', 'edge verticalEdge topEdge fa');\n        currentRoot.appendChild(topEdge);\n      }\n      that.showParent(currentRoot);\n    });\n  }\n  // start up loading status for requesting new nodes\n  _startLoading(arrow, node) {\n    let opts = this.options,\n      chart = this.chart;\n\n    if (typeof chart.dataset.inAjax !== 'undefined' && chart.dataset.inAjax === 'true') {\n      return false;\n    }\n\n    arrow.classList.add('hidden');\n    let spinner = document.createElement('i');\n\n    spinner.setAttribute('class', 'fa fa-circle-o-notch fa-spin spinner');\n    node.appendChild(spinner);\n    this._addClass(Array.from(node.querySelectorAll(':scope > *:not(.spinner)')), 'hazy');\n    chart.dataset.inAjax = true;\n\n    let exportBtn = this.chartContainer.querySelector('.oc-export-btn' +\n      (opts.chartClass !== '' ? '.' + opts.chartClass : ''));\n\n    if (exportBtn) {\n      exportBtn.disabled = true;\n    }\n    return true;\n  }\n  // terminate loading status for requesting new nodes\n  _endLoading(arrow, node) {\n    let opts = this.options;\n\n    arrow.classList.remove('hidden');\n    node.querySelector(':scope > .spinner').remove();\n    this._removeClass(Array.from(node.querySelectorAll(':scope > .hazy')), 'hazy');\n    this.chart.dataset.inAjax = false;\n    let exportBtn = this.chartContainer.querySelector('.oc-export-btn' +\n      (opts.chartClass !== '' ? '.' + opts.chartClass : ''));\n\n    if (exportBtn) {\n      exportBtn.disabled = false;\n    }\n  }\n  // define click event handler for the top edge\n  _clickTopEdge(event) {\n    event.stopPropagation();\n    let that = this,\n      topEdge = event.target,\n      node = topEdge.parentNode,\n      parentState = this._getNodeState(node, 'parent'),\n      opts = this.options;\n\n    if (parentState.exist) {\n      let temp = this._closest(node, function (el) {\n        return el.classList.contains('nodes');\n      });\n      let parent = temp.parentNode.firstChild.querySelector('.node');\n\n      if (parent.classList.contains('slide')) { return; }\n      // hide the ancestor nodes and sibling nodes of the specified node\n      if (parentState.visible) {\n        this.hideParent(node);\n        this._one(parent, 'transitionend', function () {\n          if (this._isInAction(node)) {\n            this._switchVerticalArrow(topEdge);\n            this._switchHorizontalArrow(node);\n          }\n        }, this);\n      } else { // show the ancestors and siblings\n        this.showParent(node);\n      }\n    } else {\n      // load the new parent node of the specified node by ajax request\n      let nodeId = topEdge.parentNode.id;\n\n      // start up loading status\n      if (this._startLoading(topEdge, node)) {\n        // load new nodes\n        this._getJSON(typeof opts.ajaxURL.parent === 'function' ?\n          opts.ajaxURL.parent(node.dataset.source) : opts.ajaxURL.parent + nodeId)\n        .then(function (resp) {\n          if (that.chart.dataset.inAjax === 'true') {\n            if (Object.keys(resp).length) {\n              that.addParent(node, resp);\n            }\n          }\n        })\n        .catch(function (err) {\n          console.error('Failed to get parent node data.', err);\n        })\n        .finally(function () {\n          that._endLoading(topEdge, node);\n        });\n      }\n    }\n  }\n  // recursively hide the descendant nodes of the specified node\n  hideChildren(node) {\n    let that = this,\n      temp = this._nextAll(node.parentNode.parentNode),\n      lastItem = temp[temp.length - 1],\n      lines = [];\n\n    if (lastItem.querySelector('.spinner')) {\n      this.chart.dataset.inAjax = false;\n    }\n    let descendants = Array.from(lastItem.querySelectorAll('.node')).filter((el) => that._isVisible(el)),\n      isVerticalDesc = lastItem.classList.contains('verticalNodes');\n\n    if (!isVerticalDesc) {\n      descendants.forEach((desc) => {\n        Array.prototype.push.apply(lines,\n          that._prevAll(that._closest(desc, (el) => el.classList.contains('nodes')), '.lines'));\n      });\n      lines = [...new Set(lines)];\n      this._css(lines, 'visibility', 'hidden');\n    }\n    this._one(descendants[0], 'transitionend', function (event) {\n      this._removeClass(descendants, 'slide');\n      if (isVerticalDesc) {\n        that._addClass(temp, 'hidden');\n      } else {\n        lines.forEach((el) => {\n          el.removeAttribute('style');\n          el.classList.add('hidden');\n          el.parentNode.lastChild.classList.add('hidden');\n        });\n        this._addClass(Array.from(lastItem.querySelectorAll('.verticalNodes')), 'hidden');\n      }\n      if (this._isInAction(node)) {\n        this._switchVerticalArrow(node.querySelector('.bottomEdge'));\n      }\n    }, this);\n    this._addClass(descendants, 'slide slide-up');\n  }\n  // show the children nodes of the specified node\n  showChildren(node) {\n    let that = this,\n      temp = this._nextAll(node.parentNode.parentNode),\n      descendants = [];\n\n    this._removeClass(temp, 'hidden');\n    if (temp.some((el) => el.classList.contains('verticalNodes'))) {\n      temp.forEach((el) => {\n        Array.prototype.push.apply(descendants, Array.from(el.querySelectorAll('.node')).filter((el) => {\n          return that._isVisible(el);\n        }));\n      });\n    } else {\n      Array.from(temp[2].children).forEach((el) => {\n        Array.prototype.push.apply(descendants,\n          Array.from(el.querySelector('tr').querySelectorAll('.node')).filter((el) => {\n            return that._isVisible(el);\n          }));\n      });\n    }\n    // the two following statements are used to enforce browser to repaint\n    this._repaint(descendants[0]);\n    this._one(descendants[0], 'transitionend', (event) => {\n      this._removeClass(descendants, 'slide');\n      if (this._isInAction(node)) {\n        this._switchVerticalArrow(node.querySelector('.bottomEdge'));\n      }\n    }, this);\n    this._addClass(descendants, 'slide');\n    this._removeClass(descendants, 'slide-up');\n  }\n  // build the child nodes of specific node\n  _buildChildNode(appendTo, nodeData, callback) {\n    let data = nodeData.children || nodeData.siblings;\n\n    appendTo.querySelector('td').setAttribute('colSpan', data.length * 2);\n    this.buildHierarchy(appendTo, { 'children': data }, 0, callback);\n  }\n  // exposed method\n  addChildren(node, data) {\n    let that = this,\n      opts = this.options,\n      count = 0;\n\n    this.chart.dataset.inEdit = 'addChildren';\n    this._buildChildNode.call(this, this._closest(node, (el) => el.nodeName === 'TABLE'), data, function () {\n      if (++count === data.children.length) {\n        if (!node.querySelector('.bottomEdge')) {\n          let bottomEdge = document.createElement('i');\n\n          bottomEdge.setAttribute('class', 'edge verticalEdge bottomEdge fa');\n          node.appendChild(bottomEdge);\n        }\n        if (!node.querySelector('.symbol')) {\n          let symbol = document.createElement('i');\n\n          symbol.setAttribute('class', 'fa ' + opts.parentNodeSymbol + ' symbol');\n          node.querySelector(':scope > .title').appendChild(symbol);\n        }\n        that.showChildren(node);\n        that.chart.dataset.inEdit = '';\n      }\n    });\n  }\n  // bind click event handler for the bottom edge\n  _clickBottomEdge(event) {\n    event.stopPropagation();\n    let that = this,\n      opts = this.options,\n      bottomEdge = event.target,\n      node = bottomEdge.parentNode,\n      childrenState = this._getNodeState(node, 'children');\n\n    if (childrenState.exist) {\n      let temp = this._closest(node, function (el) {\n        return el.nodeName === 'TR';\n      }).parentNode.lastChild;\n\n      if (Array.from(temp.querySelectorAll('.node')).some((node) => {\n        return this._isVisible(node) && node.classList.contains('slide');\n      })) { return; }\n      // hide the descendant nodes of the specified node\n      if (childrenState.visible) {\n        this.hideChildren(node);\n      } else { // show the descendants\n        this.showChildren(node);\n      }\n    } else { // load the new children nodes of the specified node by ajax request\n      let nodeId = bottomEdge.parentNode.id;\n\n      if (this._startLoading(bottomEdge, node)) {\n        this._getJSON(typeof opts.ajaxURL.children === 'function' ?\n          opts.ajaxURL.children(node.dataset.source) : opts.ajaxURL.children + nodeId)\n        .then(function (resp) {\n          if (that.chart.dataset.inAjax === 'true') {\n            if (resp.children.length) {\n              that.addChildren(node, resp);\n            }\n          }\n        })\n        .catch(function (err) {\n          console.error('Failed to get children nodes data', err);\n        })\n        .finally(function () {\n          that._endLoading(bottomEdge, node);\n        });\n      }\n    }\n  }\n  // subsequent processing of build sibling nodes\n  _complementLine(oneSibling, siblingCount, existingSibligCount) {\n    let temp = oneSibling.parentNode.parentNode.children;\n\n    temp[0].children[0].setAttribute('colspan', siblingCount * 2);\n    temp[1].children[0].setAttribute('colspan', siblingCount * 2);\n    for (let i = 0; i < existingSibligCount; i++) {\n      let rightLine = document.createElement('td'),\n        leftLine = document.createElement('td');\n\n      rightLine.setAttribute('class', 'rightLine topLine');\n      rightLine.innerHTML = '&nbsp;';\n      temp[2].insertBefore(rightLine, temp[2].children[1]);\n      leftLine.setAttribute('class', 'leftLine topLine');\n      leftLine.innerHTML = '&nbsp;';\n      temp[2].insertBefore(leftLine, temp[2].children[1]);\n    }\n  }\n  // build the sibling nodes of specific node\n  _buildSiblingNode(nodeChart, nodeData, callback) {\n    let that = this,\n      newSiblingCount = nodeData.siblings ? nodeData.siblings.length : nodeData.children.length,\n      existingSibligCount = nodeChart.parentNode.nodeName === 'TD' ? this._closest(nodeChart, (el) => {\n        return el.nodeName === 'TR';\n      }).children.length : 1,\n      siblingCount = existingSibligCount + newSiblingCount,\n      insertPostion = (siblingCount > 1) ? Math.floor(siblingCount / 2 - 1) : 0;\n\n    // just build the sibling nodes for the specific node\n    if (nodeChart.parentNode.nodeName === 'TD') {\n      let temp = this._prevAll(nodeChart.parentNode.parentNode);\n\n      temp[0].remove();\n      temp[1].remove();\n      let childCount = 0;\n\n      that._buildChildNode.call(that, that._closest(nodeChart.parentNode, (el) => el.nodeName === 'TABLE'),\n        nodeData, () => {\n          if (++childCount === newSiblingCount) {\n            let siblingTds = Array.from(that._closest(nodeChart.parentNode, (el) => el.nodeName === 'TABLE')\n              .lastChild.children);\n\n            if (existingSibligCount > 1) {\n              let temp = nodeChart.parentNode.parentNode;\n\n              Array.from(temp.children).forEach((el) => {\n                siblingTds[0].parentNode.insertBefore(el, siblingTds[0]);\n              });\n              temp.remove();\n              that._complementLine(siblingTds[0], siblingCount, existingSibligCount);\n              that._addClass(siblingTds, 'hidden');\n              siblingTds.forEach((el) => {\n                that._addClass(el.querySelectorAll('.node'), 'slide-left');\n              });\n            } else {\n              let temp = nodeChart.parentNode.parentNode;\n\n              siblingTds[insertPostion].parentNode.insertBefore(nodeChart.parentNode, siblingTds[insertPostion + 1]);\n              temp.remove();\n              that._complementLine(siblingTds[insertPostion], siblingCount, 1);\n              that._addClass(siblingTds, 'hidden');\n              that._addClass(that._getDescElements(siblingTds.slice(0, insertPostion + 1), '.node'), 'slide-right');\n              that._addClass(that._getDescElements(siblingTds.slice(insertPostion + 1), '.node'), 'slide-left');\n            }\n            callback();\n          }\n        });\n    } else { // build the sibling nodes and parent node for the specific ndoe\n      let nodeCount = 0;\n\n      that.buildHierarchy.call(that, that.chart, nodeData, 0, () => {\n        if (++nodeCount === siblingCount) {\n          let temp = nodeChart.nextElementSibling.children[3]\n            .children[insertPostion],\n            td = document.createElement('td');\n\n          td.setAttribute('colspan', 2);\n          td.appendChild(nodeChart);\n          temp.parentNode.insertBefore(td, temp.nextElementSibling);\n          that._complementLine(temp, siblingCount, 1);\n\n          let temp2 = that._closest(nodeChart, (el) => el.classList && el.classList.contains('nodes'))\n            .parentNode.children[0];\n\n          temp2.classList.add('hidden');\n          that._addClass(Array.from(temp2.querySelectorAll('.node')), 'slide-down');\n\n          let temp3 = this._siblings(nodeChart.parentNode);\n\n          that._addClass(temp3, 'hidden');\n          that._addClass(that._getDescElements(temp3.slice(0, insertPostion), '.node'), 'slide-right');\n          that._addClass(that._getDescElements(temp3.slice(insertPostion), '.node'), 'slide-left');\n          callback();\n        }\n      });\n    }\n  }\n  addSiblings(node, data) {\n    let that = this;\n\n    this.chart.dataset.inEdit = 'addSiblings';\n    this._buildSiblingNode.call(this, this._closest(node, (el) => el.nodeName === 'TABLE'), data, () => {\n      that._closest(node, (el) => el.classList && el.classList.contains('nodes'))\n        .dataset.siblingsLoaded = true;\n      if (!node.querySelector('.leftEdge')) {\n        let rightEdge = document.createElement('i'),\n          leftEdge = document.createElement('i');\n\n        rightEdge.setAttribute('class', 'edge horizontalEdge rightEdge fa');\n        node.appendChild(rightEdge);\n        leftEdge.setAttribute('class', 'edge horizontalEdge leftEdge fa');\n        node.appendChild(leftEdge);\n      }\n      that.showSiblings(node);\n      that.chart.dataset.inEdit = '';\n    });\n  }\n  removeNodes(node) {\n    let parent = this._closest(node, el => el.nodeName === 'TABLE').parentNode,\n      sibs = this._siblings(parent.parentNode);\n\n    if (parent.nodeName === 'TD') {\n      if (this._getNodeState(node, 'siblings').exist) {\n        sibs[2].querySelector('.topLine').nextElementSibling.remove();\n        sibs[2].querySelector('.topLine').remove();\n        sibs[0].children[0].setAttribute('colspan', sibs[2].children.length);\n        sibs[1].children[0].setAttribute('colspan', sibs[2].children.length);\n        parent.remove();\n      } else {\n        sibs[0].children[0].removeAttribute('colspan');\n        sibs[0].querySelector('.bottomEdge').remove();\n        this._siblings(sibs[0]).forEach(el => el.remove());\n      }\n    } else {\n      Array.from(parent.parentNode.children).forEach(el => el.remove());\n    }\n  }\n  // bind click event handler for the left and right edges\n  _clickHorizontalEdge(event) {\n    event.stopPropagation();\n    let that = this,\n      opts = this.options,\n      hEdge = event.target,\n      node = hEdge.parentNode,\n      siblingsState = this._getNodeState(node, 'siblings');\n\n    if (siblingsState.exist) {\n      let temp = this._closest(node, function (el) {\n          return el.nodeName === 'TABLE';\n        }).parentNode,\n        siblings = this._siblings(temp);\n\n      if (siblings.some((el) => {\n        let node = el.querySelector('.node');\n\n        return this._isVisible(node) && node.classList.contains('slide');\n      })) { return; }\n      if (opts.toggleSiblingsResp) {\n        let prevSib = this._closest(node, (el) => el.nodeName === 'TABLE').parentNode.previousElementSibling,\n          nextSib = this._closest(node, (el) => el.nodeName === 'TABLE').parentNode.nextElementSibling;\n\n        if (hEdge.classList.contains('leftEdge')) {\n          if (prevSib.classList.contains('hidden')) {\n            this.showSiblings(node, 'left');\n          } else {\n            this.hideSiblings(node, 'left');\n          }\n        } else {\n          if (nextSib.classList.contains('hidden')) {\n            this.showSiblings(node, 'right');\n          } else {\n            this.hideSiblings(node, 'right');\n          }\n        }\n      } else {\n        if (siblingsState.visible) {\n          this.hideSiblings(node);\n        } else {\n          this.showSiblings(node);\n        }\n      }\n    } else {\n      // load the new sibling nodes of the specified node by ajax request\n      let nodeId = hEdge.parentNode.id,\n        url = (this._getNodeState(node, 'parent').exist) ?\n          (typeof opts.ajaxURL.siblings === 'function' ?\n            opts.ajaxURL.siblings(JSON.parse(node.dataset.source)) : opts.ajaxURL.siblings + nodeId) :\n          (typeof opts.ajaxURL.families === 'function' ?\n            opts.ajaxURL.families(JSON.parse(node.dataset.source)) : opts.ajaxURL.families + nodeId);\n\n      if (this._startLoading(hEdge, node)) {\n        this._getJSON(url)\n        .then(function (resp) {\n          if (that.chart.dataset.inAjax === 'true') {\n            if (resp.siblings || resp.children) {\n              that.addSiblings(node, resp);\n            }\n          }\n        })\n        .catch(function (err) {\n          console.error('Failed to get sibling nodes data', err);\n        })\n        .finally(function () {\n          that._endLoading(hEdge, node);\n        });\n      }\n    }\n  }\n  // event handler for toggle buttons in Hybrid(horizontal + vertical) OrgChart\n  _clickToggleButton(event) {\n    let that = this,\n      toggleBtn = event.target,\n      descWrapper = toggleBtn.parentNode.nextElementSibling,\n      descendants = Array.from(descWrapper.querySelectorAll('.node')),\n      children = Array.from(descWrapper.children).map(item => item.querySelector('.node'));\n\n    if (children.some((item) => item.classList.contains('slide'))) { return; }\n    toggleBtn.classList.toggle('fa-plus-square');\n    toggleBtn.classList.toggle('fa-minus-square');\n    if (descendants[0].classList.contains('slide-up')) {\n      descWrapper.classList.remove('hidden');\n      this._repaint(children[0]);\n      this._addClass(children, 'slide');\n      this._removeClass(children, 'slide-up');\n      this._one(children[0], 'transitionend', () => {\n        that._removeClass(children, 'slide');\n      });\n    } else {\n      this._addClass(descendants, 'slide slide-up');\n      this._one(descendants[0], 'transitionend', () => {\n        that._removeClass(descendants, 'slide');\n        descendants.forEach(desc => {\n          let ul = that._closest(desc, function (el) {\n            return el.nodeName === 'UL';\n          });\n\n          ul.classList.add('hidden');\n        });\n      });\n\n      descendants.forEach(desc => {\n        let subTBs = Array.from(desc.querySelectorAll('.toggleBtn'));\n\n        that._removeClass(subTBs, 'fa-minus-square');\n        that._addClass(subTBs, 'fa-plus-square');\n      });\n    }\n  }\n  _dispatchClickEvent(event) {\n    let classList = event.target.classList;\n\n    if (classList.contains('topEdge')) {\n      this._clickTopEdge(event);\n    } else if (classList.contains('rightEdge') || classList.contains('leftEdge')) {\n      this._clickHorizontalEdge(event);\n    } else if (classList.contains('bottomEdge')) {\n      this._clickBottomEdge(event);\n    } else if (classList.contains('toggleBtn')) {\n      this._clickToggleButton(event);\n    } else {\n      this._clickNode(event);\n    }\n  }\n  _onDragStart(event) {\n    let nodeDiv = event.target,\n      opts = this.options,\n      isFirefox = /firefox/.test(window.navigator.userAgent.toLowerCase());\n\n    if (isFirefox) {\n      event.dataTransfer.setData('text/html', 'hack for firefox');\n    }\n    // if users enable zoom or direction options\n    if (this.chart.style.transform) {\n      let ghostNode, nodeCover;\n\n      if (!document.querySelector('.ghost-node')) {\n        ghostNode = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        ghostNode.classList.add('ghost-node');\n        nodeCover = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        ghostNode.appendChild(nodeCover);\n        this.chart.appendChild(ghostNode);\n      } else {\n        ghostNode = this.chart.querySelector(':scope > .ghost-node');\n        nodeCover = ghostNode.children[0];\n      }\n      let transValues = this.chart.style.transform.split(','),\n        scale = Math.abs(window.parseFloat((opts.direction === 't2b' || opts.direction === 'b2t') ?\n          transValues[0].slice(transValues[0].indexOf('(') + 1) : transValues[1]));\n\n      ghostNode.setAttribute('width', nodeDiv.offsetWidth);\n      ghostNode.setAttribute('height', nodeDiv.offsetHeight);\n      nodeCover.setAttribute('x', 5 * scale);\n      nodeCover.setAttribute('y', 5 * scale);\n      nodeCover.setAttribute('width', 120 * scale);\n      nodeCover.setAttribute('height', 40 * scale);\n      nodeCover.setAttribute('rx', 4 * scale);\n      nodeCover.setAttribute('ry', 4 * scale);\n      nodeCover.setAttribute('stroke-width', 1 * scale);\n      let xOffset = event.offsetX * scale,\n        yOffset = event.offsetY * scale;\n\n      if (opts.direction === 'l2r') {\n        xOffset = event.offsetY * scale;\n        yOffset = event.offsetX * scale;\n      } else if (opts.direction === 'r2l') {\n        xOffset = nodeDiv.offsetWidth - event.offsetY * scale;\n        yOffset = event.offsetX * scale;\n      } else if (opts.direction === 'b2t') {\n        xOffset = nodeDiv.offsetWidth - event.offsetX * scale;\n        yOffset = nodeDiv.offsetHeight - event.offsetY * scale;\n      }\n      if (isFirefox) { // hack for old version of Firefox(< 48.0)\n        let ghostNodeWrapper = document.createElement('img');\n\n        ghostNodeWrapper.src = 'data:image/svg+xml;utf8,' + (new XMLSerializer()).serializeToString(ghostNode);\n        event.dataTransfer.setDragImage(ghostNodeWrapper, xOffset, yOffset);\n        nodeCover.setAttribute('fill', 'rgb(255, 255, 255)');\n        nodeCover.setAttribute('stroke', 'rgb(191, 0, 0)');\n      } else {\n        event.dataTransfer.setDragImage(ghostNode, xOffset, yOffset);\n      }\n    }\n    let dragged = event.target,\n      dragZone = this._closest(dragged, (el) => {\n        return el.classList && el.classList.contains('nodes');\n      }).parentNode.children[0].querySelector('.node'),\n      dragHier = Array.from(this._closest(dragged, (el) => {\n        return el.nodeName === 'TABLE';\n      }).querySelectorAll('.node'));\n\n    this.dragged = dragged;\n    Array.from(this.chart.querySelectorAll('.node')).forEach(function (node) {\n      if (!dragHier.includes(node)) {\n        if (opts.dropCriteria) {\n          if (opts.dropCriteria(dragged, dragZone, node)) {\n            node.classList.add('allowedDrop');\n          }\n        } else {\n          node.classList.add('allowedDrop');\n        }\n      }\n    });\n  }\n  _onDragOver(event) {\n    event.preventDefault();\n    let dropZone = event.currentTarget;\n\n    if (!dropZone.classList.contains('allowedDrop')) {\n      event.dataTransfer.dropEffect = 'none';\n    }\n  }\n  _onDragEnd(event) {\n    Array.from(this.chart.querySelectorAll('.allowedDrop')).forEach(function (el) {\n      el.classList.remove('allowedDrop');\n    });\n  }\n  _onDrop(event) {\n    let dropZone = event.currentTarget,\n      chart = this.chart,\n      dragged = this.dragged,\n      dragZone = this._closest(dragged, function (el) {\n        return el.classList && el.classList.contains('nodes');\n      }).parentNode.children[0].children[0];\n\n    this._removeClass(Array.from(chart.querySelectorAll('.allowedDrop')), 'allowedDrop');\n    // firstly, deal with the hierarchy of drop zone\n    if (!dropZone.parentNode.parentNode.nextElementSibling) { // if the drop zone is a leaf node\n      let bottomEdge = document.createElement('i');\n\n      bottomEdge.setAttribute('class', 'edge verticalEdge bottomEdge fa');\n      dropZone.appendChild(bottomEdge);\n      dropZone.parentNode.setAttribute('colspan', 2);\n      let table = this._closest(dropZone, function (el) {\n          return el.nodeName === 'TABLE';\n        }),\n        upperTr = document.createElement('tr'),\n        lowerTr = document.createElement('tr'),\n        nodeTr = document.createElement('tr');\n\n      upperTr.setAttribute('class', 'lines');\n      upperTr.innerHTML = `<td colspan=\"2\"><div class=\"downLine\"></div></td>`;\n      table.appendChild(upperTr);\n      lowerTr.setAttribute('class', 'lines');\n      lowerTr.innerHTML = `<td class=\"rightLine\">&nbsp;</td><td class=\"leftLine\">&nbsp;</td>`;\n      table.appendChild(lowerTr);\n      nodeTr.setAttribute('class', 'nodes');\n      table.appendChild(nodeTr);\n      Array.from(dragged.querySelectorAll('.horizontalEdge')).forEach((hEdge) => {\n        dragged.removeChild(hEdge);\n      });\n      let draggedTd = this._closest(dragged, (el) => el.nodeName === 'TABLE').parentNode;\n\n      nodeTr.appendChild(draggedTd);\n    } else {\n      let dropColspan = window.parseInt(dropZone.parentNode.colSpan) + 2;\n\n      dropZone.parentNode.setAttribute('colspan', dropColspan);\n      dropZone.parentNode.parentNode.nextElementSibling.children[0].setAttribute('colspan', dropColspan);\n      if (!dragged.querySelector('.horizontalEdge')) {\n        let rightEdge = document.createElement('i'),\n          leftEdge = document.createElement('i');\n\n        rightEdge.setAttribute('class', 'edge horizontalEdge rightEdge fa');\n        dragged.appendChild(rightEdge);\n        leftEdge.setAttribute('class', 'edge horizontalEdge leftEdge fa');\n        dragged.appendChild(leftEdge);\n      }\n      let temp = dropZone.parentNode.parentNode.nextElementSibling.nextElementSibling,\n        leftline = document.createElement('td'),\n        rightline = document.createElement('td');\n\n      leftline.setAttribute('class', 'leftLine topLine');\n      leftline.innerHTML = `&nbsp;`;\n      temp.insertBefore(leftline, temp.children[1]);\n      rightline.setAttribute('class', 'rightLine topLine');\n      rightline.innerHTML = `&nbsp;`;\n      temp.insertBefore(rightline, temp.children[2]);\n      temp.nextElementSibling.appendChild(this._closest(dragged, function (el) {\n        return el.nodeName === 'TABLE';\n      }).parentNode);\n\n      let dropSibs = this._siblings(this._closest(dragged, function (el) {\n        return el.nodeName === 'TABLE';\n      }).parentNode).map((el) => el.querySelector('.node'));\n\n      if (dropSibs.length === 1) {\n        let rightEdge = document.createElement('i'),\n          leftEdge = document.createElement('i');\n\n        rightEdge.setAttribute('class', 'edge horizontalEdge rightEdge fa');\n        dropSibs[0].appendChild(rightEdge);\n        leftEdge.setAttribute('class', 'edge horizontalEdge leftEdge fa');\n        dropSibs[0].appendChild(leftEdge);\n      }\n    }\n    // secondly, deal with the hierarchy of dragged node\n    let dragColSpan = window.parseInt(dragZone.colSpan);\n\n    if (dragColSpan > 2) {\n      dragZone.setAttribute('colspan', dragColSpan - 2);\n      dragZone.parentNode.nextElementSibling.children[0].setAttribute('colspan', dragColSpan - 2);\n      let temp = dragZone.parentNode.nextElementSibling.nextElementSibling;\n\n      temp.children[1].remove();\n      temp.children[1].remove();\n\n      let dragSibs = Array.from(dragZone.parentNode.parentNode.children[3].children).map(function (td) {\n        return td.querySelector('.node');\n      });\n\n      if (dragSibs.length === 1) {\n        dragSibs[0].querySelector('.leftEdge').remove();\n        dragSibs[0].querySelector('.rightEdge').remove();\n      }\n    } else {\n      dragZone.removeAttribute('colspan');\n      dragZone.querySelector('.node').removeChild(dragZone.querySelector('.bottomEdge'));\n      Array.from(dragZone.parentNode.parentNode.children).slice(1).forEach((tr) => tr.remove());\n    }\n    let customE = new CustomEvent('nodedropped.orgchart', { 'detail': {\n      'draggedNode': dragged,\n      'dragZone': dragZone.children[0],\n      'dropZone': dropZone\n    }});\n\n    chart.dispatchEvent(customE);\n  }\n  // create node\n  _createNode(nodeData, level) {\n    let that = this,\n      opts = this.options;\n\n    return new Promise(function (resolve, reject) {\n      if (nodeData.children) {\n        for (let child of nodeData.children) {\n          child.parentId = nodeData.id;\n        }\n      }\n\n      // construct the content of node\n      let nodeDiv = document.createElement('div');\n\n      delete nodeData.children;\n      nodeDiv.dataset.source = JSON.stringify(nodeData);\n      if (nodeData[opts.nodeId]) {\n        nodeDiv.id = nodeData[opts.nodeId];\n      }\n      let inEdit = that.chart.dataset.inEdit,\n        isHidden;\n\n      if (inEdit) {\n        isHidden = inEdit === 'addChildren' ? ' slide-up' : '';\n      } else {\n        isHidden = level >= opts.depth ? ' slide-up' : '';\n      }\n      nodeDiv.setAttribute('class', 'node ' + (nodeData.className || '') + isHidden);\n      if (opts.draggable) {\n        nodeDiv.setAttribute('draggable', true);\n      }\n      if (nodeData.parentId) {\n        nodeDiv.setAttribute('data-parent', nodeData.parentId);\n      }\n      nodeDiv.innerHTML = `\n        <div class=\"title\">${nodeData[opts.nodeTitle]}</div>\n        ${opts.nodeContent ? `<div class=\"content\">${nodeData[opts.nodeContent]}</div>` : ''}\n      `;\n      // append 4 direction arrows or expand/collapse buttons\n      let flags = nodeData.relationship || '';\n\n      if (opts.verticalDepth && (level + 2) > opts.verticalDepth) {\n        if ((level + 1) >= opts.verticalDepth && Number(flags.substr(2, 1))) {\n          let toggleBtn = document.createElement('i'),\n            icon = level + 1 >= opts.depth ? 'plus' : 'minus';\n\n          toggleBtn.setAttribute('class', 'toggleBtn fa fa-' + icon + '-square');\n          nodeDiv.appendChild(toggleBtn);\n        }\n      } else {\n        if (Number(flags.substr(0, 1))) {\n          let topEdge = document.createElement('i');\n\n          topEdge.setAttribute('class', 'edge verticalEdge topEdge fa');\n          nodeDiv.appendChild(topEdge);\n        }\n        if (Number(flags.substr(1, 1))) {\n          let rightEdge = document.createElement('i'),\n            leftEdge = document.createElement('i');\n\n          rightEdge.setAttribute('class', 'edge horizontalEdge rightEdge fa');\n          nodeDiv.appendChild(rightEdge);\n          leftEdge.setAttribute('class', 'edge horizontalEdge leftEdge fa');\n          nodeDiv.appendChild(leftEdge);\n        }\n        if (Number(flags.substr(2, 1))) {\n          let bottomEdge = document.createElement('i'),\n            symbol = document.createElement('i'),\n            title = nodeDiv.querySelector(':scope > .title');\n\n          bottomEdge.setAttribute('class', 'edge verticalEdge bottomEdge fa');\n          nodeDiv.appendChild(bottomEdge);\n          symbol.setAttribute('class', 'fa ' + opts.parentNodeSymbol + ' symbol');\n          title.insertBefore(symbol, title.children[0]);\n        }\n      }\n\n      nodeDiv.addEventListener('mouseenter', that._hoverNode.bind(that));\n      nodeDiv.addEventListener('mouseleave', that._hoverNode.bind(that));\n      nodeDiv.addEventListener('click', that._dispatchClickEvent.bind(that));\n      if (opts.draggable) {\n        nodeDiv.addEventListener('dragstart', that._onDragStart.bind(that));\n        nodeDiv.addEventListener('dragover', that._onDragOver.bind(that));\n        nodeDiv.addEventListener('dragend', that._onDragEnd.bind(that));\n        nodeDiv.addEventListener('drop', that._onDrop.bind(that));\n      }\n      // allow user to append dom modification after finishing node create of orgchart\n      if (opts.createNode) {\n        opts.createNode(nodeDiv, nodeData);\n      }\n\n      resolve(nodeDiv);\n    });\n  }\n  buildHierarchy(appendTo, nodeData, level, callback) {\n    // Construct the node\n    let that = this,\n      opts = this.options,\n      nodeWrapper,\n      childNodes = nodeData.children,\n      isVerticalNode = opts.verticalDepth && (level + 1) >= opts.verticalDepth;\n\n    if (Object.keys(nodeData).length > 1) { // if nodeData has nested structure\n      nodeWrapper = isVerticalNode ? appendTo : document.createElement('table');\n      if (!isVerticalNode) {\n        appendTo.appendChild(nodeWrapper);\n      }\n      this._createNode(nodeData, level)\n      .then(function (nodeDiv) {\n        if (isVerticalNode) {\n          nodeWrapper.insertBefore(nodeDiv, nodeWrapper.firstChild);\n        } else {\n          let tr = document.createElement('tr');\n\n          tr.innerHTML = `\n            <td ${childNodes ? `colspan=\"${childNodes.length * 2}\"` : ''}>\n            </td>\n          `;\n          tr.children[0].appendChild(nodeDiv);\n          nodeWrapper.insertBefore(tr, nodeWrapper.children[0] ? nodeWrapper.children[0] : null);\n        }\n        if (callback) {\n          callback();\n        }\n      })\n      .catch(function (err) {\n        console.error('Failed to creat node', err);\n      });\n    }\n    // Construct the inferior nodes and connectiong lines\n    if (childNodes) {\n      if (Object.keys(nodeData).length === 1) { // if nodeData is just an array\n        nodeWrapper = appendTo;\n      }\n      let isHidden,\n        isVerticalLayer = opts.verticalDepth && (level + 2) >= opts.verticalDepth,\n        inEdit = that.chart.dataset.inEdit;\n\n      if (inEdit) {\n        isHidden = inEdit === 'addSiblings' ? '' : ' hidden';\n      } else {\n        isHidden = level + 1 >= opts.depth ? ' hidden' : '';\n      }\n\n      // draw the line close to parent node\n      if (!isVerticalLayer) {\n        let tr = document.createElement('tr');\n\n        tr.setAttribute('class', 'lines' + isHidden);\n        tr.innerHTML = `\n          <td colspan=\"${ childNodes.length * 2 }\">\n            <div class=\"downLine\"></div>\n          </td>\n        `;\n        nodeWrapper.appendChild(tr);\n      }\n      // draw the lines close to children nodes\n      let lineLayer = document.createElement('tr');\n\n      lineLayer.setAttribute('class', 'lines' + isHidden);\n      lineLayer.innerHTML = `\n        <td class=\"rightLine\">&nbsp;</td>\n        ${childNodes.slice(1).map(() => `\n          <td class=\"leftLine topLine\">&nbsp;</td>\n          <td class=\"rightLine topLine\">&nbsp;</td>\n          `).join('')}\n        <td class=\"leftLine\">&nbsp;</td>\n      `;\n      let nodeLayer;\n\n      if (isVerticalLayer) {\n        nodeLayer = document.createElement('ul');\n        if (isHidden) {\n          nodeLayer.classList.add(isHidden.trim());\n        }\n        if (level + 2 === opts.verticalDepth) {\n          let tr = document.createElement('tr');\n\n          tr.setAttribute('class', 'verticalNodes' + isHidden);\n          tr.innerHTML = `<td></td>`;\n          tr.firstChild.appendChild(nodeLayer);\n          nodeWrapper.appendChild(tr);\n        } else {\n          nodeWrapper.appendChild(nodeLayer);\n        }\n      } else {\n        nodeLayer = document.createElement('tr');\n        nodeLayer.setAttribute('class', 'nodes' + isHidden);\n        nodeWrapper.appendChild(lineLayer);\n        nodeWrapper.appendChild(nodeLayer);\n      }\n      // recurse through children nodes\n      childNodes.forEach((child) => {\n        let nodeCell;\n\n        if (isVerticalLayer) {\n          nodeCell = document.createElement('li');\n        } else {\n          nodeCell = document.createElement('td');\n          nodeCell.setAttribute('colspan', 2);\n        }\n        nodeLayer.appendChild(nodeCell);\n        that.buildHierarchy(nodeCell, child, level + 1, callback);\n      });\n    }\n  }\n  _clickChart(event) {\n    let closestNode = this._closest(event.target, function (el) {\n      return el.classList && el.classList.contains('node');\n    });\n\n    if (!closestNode && this.chart.querySelector('.node.focused')) {\n      this.chart.querySelector('.node.focused').classList.remove('focused');\n    }\n  }\n  _clickExportButton() {\n    let opts = this.options,\n      chartContainer = this.chartContainer,\n      mask = chartContainer.querySelector(':scope > .mask'),\n      sourceChart = chartContainer.querySelector('.orgchart:not(.hidden)'),\n      flag = opts.direction === 'l2r' || opts.direction === 'r2l';\n\n    if (!mask) {\n      mask = document.createElement('div');\n      mask.setAttribute('class', 'mask');\n      mask.innerHTML = `<i class=\"fa fa-circle-o-notch fa-spin spinner\"></i>`;\n      chartContainer.appendChild(mask);\n    } else {\n      mask.classList.remove('hidden');\n    }\n      chartContainer.classList.add('canvasContainer');\n   \n    window.html2canvas(sourceChart, {\n      'width': flag ? sourceChart.clientHeight : sourceChart.clientWidth,\n      'height': flag ? sourceChart.clientWidth : sourceChart.clientHeight,\n      'onclone': function (cloneDoc) {\n        let canvasContainer = cloneDoc.querySelector('.canvasContainer');\n\n        canvasContainer.style.overflow = 'visible';\n        canvasContainer.querySelector('.orgchart:not(.hidden)').transform = '';\n      }\n    })\n    .then((canvas) => {\n      let downloadBtn = chartContainer.querySelector('.oc-download-btn');\n\n      chartContainer.querySelector('.mask').classList.add('hidden');\n      downloadBtn.setAttribute('href', canvas.toDataURL());\n      downloadBtn.click();\n    })\n    .catch((err) => {\n      console.error('Failed to export the curent orgchart!', err);\n    })\n    .finally(() => {\n      chartContainer.classList.remove('canvasContainer');\n    });\n  }\n  _loopChart(chart) {\n    let subObj = { 'id': chart.querySelector('.node').id };\n\n    if (chart.children[3]) {\n      Array.from(chart.children[3].children).forEach((el) => {\n        if (!subObj.children) { subObj.children = []; }\n        subObj.children.push(this._loopChart(el.firstChild));\n      });\n    }\n    return subObj;\n  }\n  getHierarchy() {\n    if (!this.chart.querySelector('.node').id) {\n      return 'Error: Nodes of orghcart to be exported must have id attribute!';\n    }\n    return this._loopChart(this.chart.querySelector('table'));\n  }\n  _onPanStart(event) {\n    let chart = event.currentTarget;\n\n    if (this._closest(event.target, (el) => el.classList && el.classList.contains('node')) ||\n      (event.touches && event.touches.length > 1)) {\n      chart.dataset.panning = false;\n      return;\n    }\n    chart.style.cursor = 'move';\n    chart.dataset.panning = true;\n\n    let lastX = 0,\n      lastY = 0,\n      lastTf = window.getComputedStyle(chart).transform;\n\n    if (lastTf !== 'none') {\n      let temp = lastTf.split(',');\n\n      if (!lastTf.includes('3d')) {\n        lastX = Number.parseInt(temp[4], 10);\n        lastY = Number.parseInt(temp[5], 10);\n      } else {\n        lastX = Number.parseInt(temp[12], 10);\n        lastY = Number.parseInt(temp[13], 10);\n      }\n    }\n    let startX = 0,\n      startY = 0;\n\n    if (!event.targetTouches) { // pan on desktop\n      startX = event.pageX - lastX;\n      startY = event.pageY - lastY;\n    } else if (event.targetTouches.length === 1) { // pan on mobile device\n      startX = event.targetTouches[0].pageX - lastX;\n      startY = event.targetTouches[0].pageY - lastY;\n    } else if (event.targetTouches.length > 1) {\n      return;\n    }\n    chart.dataset.panStart = JSON.stringify({ 'startX': startX, 'startY': startY });\n    chart.addEventListener('mousemove', this._onPanning.bind(this));\n    chart.addEventListener('touchmove', this._onPanning.bind(this));\n  }\n  _onPanning(event) {\n    let chart = event.currentTarget;\n\n    if (chart.dataset.panning === 'false') {\n      return;\n    }\n    let newX = 0,\n      newY = 0,\n      panStart = JSON.parse(chart.dataset.panStart),\n      startX = panStart.startX,\n      startY = panStart.startY;\n\n    if (!event.targetTouches) { // pand on desktop\n      newX = event.pageX - startX;\n      newY = event.pageY - startY;\n    } else if (event.targetTouches.length === 1) { // pan on mobile device\n      newX = event.targetTouches[0].pageX - startX;\n      newY = event.targetTouches[0].pageY - startY;\n    } else if (event.targetTouches.length > 1) {\n      return;\n    }\n    let lastTf = window.getComputedStyle(chart).transform;\n\n    if (lastTf === 'none') {\n      if (!lastTf.includes('3d')) {\n        chart.style.transform = 'matrix(1, 0, 0, 1, ' + newX + ', ' + newY + ')';\n      } else {\n        chart.style.transform = 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + newX + ', ' + newY + ', 0, 1)';\n      }\n    } else {\n      let matrix = lastTf.split(',');\n\n      if (!lastTf.includes('3d')) {\n        matrix[4] = newX;\n        matrix[5] = newY + ')';\n      } else {\n        matrix[12] = newX;\n        matrix[13] = newY;\n      }\n      chart.style.transform = matrix.join(',');\n    }\n  }\n  _onPanEnd(event) {\n    let chart = this.chart;\n\n    if (chart.dataset.panning === 'true') {\n      chart.dataset.panning = false;\n      chart.style.cursor = 'default';\n      document.body.removeEventListener('mousemove', this._onPanning);\n      document.body.removeEventListener('touchmove', this._onPanning);\n    }\n  }\n  _setChartScale(chart, newScale) {\n    let lastTf = window.getComputedStyle(chart).transform;\n\n    if (lastTf === 'none') {\n      chart.style.transform = 'scale(' + newScale + ',' + newScale + ')';\n    } else {\n      let matrix = lastTf.split(',');\n\n      if (!lastTf.includes('3d')) {\n        matrix[0] = 'matrix(' + newScale;\n        matrix[3] = newScale;\n        chart.style.transform = lastTf + ' scale(' + newScale + ',' + newScale + ')';\n      } else {\n        chart.style.transform = lastTf + ' scale3d(' + newScale + ',' + newScale + ', 1)';\n      }\n    }\n    chart.dataset.scale = newScale;\n  }\n  _onWheeling(event) {\n    event.preventDefault();\n\n    let newScale = event.deltaY > 0 ? 0.8 : 1.2;\n\n    this._setChartScale(this.chart, newScale);\n  }\n  _getPinchDist(event) {\n    return Math.sqrt((event.touches[0].clientX - event.touches[1].clientX) *\n      (event.touches[0].clientX - event.touches[1].clientX) +\n      (event.touches[0].clientY - event.touches[1].clientY) *\n      (event.touches[0].clientY - event.touches[1].clientY));\n  }\n  _onTouchStart(event) {\n    let chart = this.chart;\n\n    if (event.touches && event.touches.length === 2) {\n      let dist = this._getPinchDist(event);\n\n      chart.dataset.pinching = true;\n      chart.dataset.pinchDistStart = dist;\n    }\n  }\n  _onTouchMove(event) {\n    let chart = this.chart;\n\n    if (chart.dataset.pinching) {\n      let dist = this._getPinchDist(event);\n\n      chart.dataset.pinchDistEnd = dist;\n    }\n  }\n  _onTouchEnd(event) {\n    let chart = this.chart;\n\n    if (chart.dataset.pinching) {\n      chart.dataset.pinching = false;\n      let diff = chart.dataset.pinchDistEnd - chart.dataset.pinchDistStart;\n\n      if (diff > 0) {\n        this._setChartScale(chart, 1);\n      } else if (diff < 0) {\n        this._setChartScale(chart, -1);\n      }\n    }\n  }\n}\n", "export default function appendStyle() {\n\n    var Linkx = document.createElement('style')\n    Linkx.textContent = `\n\n.left-panel-class {\n  position: fixed; /* Sticks to the left side of the page */\ndisplay: flex;\n     flex-direction: row; /* Align children in a row */\nz-index: 9999; /* Bring the panel to the front */\n  background-color: #f4f4f4; /* Light gray background */\n  border-right: 1px solid #ccc; /* Optional border */\n  padding: 15px; /* Padding inside the panel */\n}\n\n.nested {\n    list-style-type: none;\n    padding-left: 20px; /* Indent nested lists */\n    margin-left: 10px; /* Provide left margin for nested lists */\n    display: block; /* Ensure it's vertically aligned */\n}\n\n\n\n/* Add some space between the checkbox and text */\n.filterCheckBox {\n    margin-left: 10px;\n}\n.OrgChartFilterCheckBox {\n    margin-left: 10px;\n}\n/* Optional: Style the toggle button */\n.toggle {\n    cursor: pointer;\n    color: #007BFF;\n    text-decoration: underline;\n    margin-right: 10px; /* Space between the toggle and checkbox */\n}\n.select2-container {\n    width: 100% !important;  /* Ensure Select2 matches the input width */\n    box-sizing: border-box;\n}\n\n.select2-selection {\n    height: 100% !important;  /* Match input height */\n    line-height: normal;\n}\n\n.select2-selection__rendered {\n    padding: 8px !important;  /* Adjust text alignment */\n}\n\n.select2-selection__arrow {\n    height: 100% !important;\n}\n\n.select2-container .select2-choice {\n    height: 100% !important;\n    line-height: normal;\n    padding: 0 8px;\n}\n\n    .flex-container {\n        display: flex;\n     flex-direction: row; /* Align children in a row */\n}\n\n    .icon {\n    position: fixed; /* Fix the position relative to the viewport */\n    bottom: 20px;    /* Distance from the bottom */\n    right: 20px;     /* Distance from the right */\n    width: 50px;     /* Width of the icon */\n    height: 50px;    /* Height of the icon */\n    z-index: 1000;   /* Ensure it is above other content */\n}\n\n.flex-container {\n  display: flex;\n  border: 1px solid #ccc;\n  padding: 10px;\n  box-sizing: border-box; /* Includes padding and border in width/height */\n}\n\n     .CardContent {\n            background-color: lightblue;\n            padding: 20px;\n            width: auto;\n            align-items: center; /* Optional: aligns items vertically centered */\n                white-space: nowrap; /* Prevents text from wrapping */\n        }\n\n.CardContent span {\n    display: block; /* Ensures each span is on a new line */\n    margin-bottom: 5px; /* Adds space between the lines */\n    font-style: italic; /* Applies italic styling */\n}\n.CardTitle span {\n    display: block; /* Ensures each span is on a new line */\n    margin-bottom: 5px; /* Adds space between the lines */\n    font-family: Arial; /* Applies italic styling */\n}\n   #SectionTable {\n    table-layout: auto; /* Allow the table to resize based on content */\n    width: 100%;\n      border-collapse: collapse; /* Optional: removes space between borders */\n\n  }\n  \n        .CardTitle {\n            background-color: #eee2ed;\n            padding: 20px;\n            width: auto;\n               white-space: nowrap; /* Prevents text from wrapping */\n    align-items: center; /* Optional: aligns items vertically centered */\n        }\n\n            .dragging{z-index:111!important}.block{position:absolute;z-index:9}.indicator{width:12px;height:12px;border-radius:60px;background-color:#217ce8;margin-top:-5px;opacity:1;transition:all .3s cubic-bezier(.05,.03,.35,1);transform:scale(1);position:absolute;z-index:2}.invisible{opacity:0!important;transform:scale(0)}.indicator:after{content:\"\";display:block;width:12px;height:12px;background-color:#217ce8;transform:scale(1.7);opacity:.2;border-radius:60px}.arrowblock{position:absolute;width:100%;overflow:visible;pointer-events:none}.arrowblock svg{width: -webkit-fill-available;overflow: visible;}\n\n  .side-div {\n    display: flex;\n    flex-direction: row; /* Aligns child elements in a row */\n    background-color: #f1f1f1;\n}\n  .wrapper{\n    overflow-x: auto;\n}\n\n  .chart-side-div {\n    display: flex;\n    flex-direction: row; /* Aligns child elements in a row */\n    width: auto;\n       background-color: #ffffff;\n    min-height: 100px; /* Sets a minimum height */\n    position: relative; /* Required for absolute positioning of ::before */\n}\n\n    .content {\n    background-color: #f8f9fa;\n    }\n    .tab {\n          overflow: hidden;\n          border: 1px solid #ccc;\n          background-color: #f1f1f1;\n        }\n        .tab button {\n          background-color: inherit;\n          float: left;\n          border: none;\n          outline: none;\n          cursor: pointer;\n          padding: 14px 16px;\n          transition: 0.3s;\n        }\n        .tab button:hover {\n          background-color: #ddd;\n        }\n        .tab button.active {\n          background-color: #ccc;\n        }\n        .tabcontent {\n          display: none;\n          padding: 6px 12px;\n          border: 1px solid #ccc;\n          border-top: none;\n            animation: fadeEffect 1s; /* Fading effect takes 1 second */\n\n        }\n        @keyframes fadeEffect {\n          from {opacity: 0;}\n          to {opacity: 1;}\n        }\n   .EmployeeImg {\n    width: 100%;\n    height: auto; /* Maintain aspect ratio */\n    object-fit: cover; /* Or 'contain' depending on your requirement */\n}\n\n\n#chart-container {\n    background-color: #f8f9fa;\n  height: auto;\n  border: 1px solid #aaa;\n  margin: 0.5rem;\n}\n\n#orgChartContainer {\n    background-color: #f8f9fa;\n  height: auto;\n  border: 1px solid #aaa;\n  margin: 0.5rem;\n}\n\n  .content {\n       display: flex;\n    flex-direction: column; /* Stack children vertically */\nheight: 100vh; /* Make sure the body and html take full height */\nmargin: 0;\n        }\n\n#GridDiv {\n\n  display: block;\noverflow: hidden;\nposition: relative;\n}\n\n .div2 {\n    flex: 0.5; /* Takes 7 parts of the total height */\n\nheight:10%;\n}\n\n.orgchart {\n  box-sizing: border-box;\n  display: inline-block;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  linear-gradient(to right, rgba(200, 0, 0, 0.15) 5%, rgba(0, 0, 0, 0) 5%),\n  linear-gradient(to bottom, rgba(200, 0, 0, 0.15) 5%, rgba(0, 0, 0, 0) 5%),\n  linear-gradient(to left, rgba(200, 0, 0, 0.15) 5%, rgba(0, 0, 0, 0) 5%);\n  background-size: 10px 10px; /* background square size */\n  padding: 20px 20px 0 20px;\n  /* border: 0.5px solid rgba(200, 0, 0, 0.15); */\n}\n\n.orgchart .hidden, .orgchart~.hidden {\n  display: none;\n}\n\n.orgchart div,\n.orgchart div::before,\n.orgchart div::after {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n.orgchart.b2t {\n  -ms-transform: rotate(180deg);\n  -moz-transform: rotate(180deg);\n  -webkit-transform: rotate(180deg);\n  transform: rotate(180deg);\n}\n\n.orgchart.l2r {\n  position: absolute;\n  -ms-transform: rotate(-90deg) rotateY(180deg);\n  -moz-transform: rotate(-90deg) rotateY(180deg);\n  -webkit-transform: rotate(-90deg) rotateY(180deg);\n  transform: rotate(-90deg) rotateY(180deg);\n  -ms-transform-origin: left top;\n  -moz-transform-origin: left top;\n  -webkit-transform-origin: left top;\n  transform-origin: left top;\n}\n\n.orgchart .verticalNodes ul {\n  list-style: none;\n  margin: 0;\n  padding-left: 18px;\n  text-align: left;\n}\n\n.orgchart .verticalNodes ul:first-child {\n  margin-top: 3px;\n}\n\n.orgchart .verticalNodes>td::before {\n  content: '';\n  border: 1px solid #AFAFAF;\n\n}\n\n.orgchart .verticalNodes>td>ul>li:first-child::before {\n  top: -4px;\n  height: 30px;\n  width: calc(50% - 2px);\n  border-width: 2px 0 0 2px;\n}\n\n.orgchart .verticalNodes ul>li {\n  position: relative;\n}\n\n.orgchart .verticalNodes ul>li::before,\n.orgchart .verticalNodes ul>li::after {\n  content: '';\n  position: absolute;\n  left: -6px;\n  border-color: #AFAFAF;\n  border-style: solid;\n  border-width: 0 0 2px 2px;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n.orgchart .verticalNodes ul>li::before {\n  top: -4px;\n  height: 30px;\n  width: 11px;\n}\n\n.orgchart .verticalNodes ul>li::after {\n  top: 1px;\n  height: 100%;\n}\n\n.orgchart .verticalNodes ul>li:first-child::after {\n  top: 24px;\n  width: 11px;\n  border-width: 2px 0 0 2px;\n}\n\n.orgchart .verticalNodes ul>li:last-child::after {\n  border-width: 2px 0 0;\n}\n\n.orgchart.r2l {\n  position: absolute;\n  -ms-transform: rotate(90deg);\n  -moz-transform: rotate(90deg);\n  -webkit-transform: rotate(90deg);\n  transform: rotate(90deg);\n  -ms-transform-origin: left top;\n  -moz-transform-origin: left top;\n  -webkit-transform-origin: left top;\n  transform-origin: left top;\n}\n\n.orgchart>.spinner {\n  font-size: 100px;\n  margin-top: 30px;\n  color: rgba(68, 157, 68, 0.8);\n}\n\n.orgchart table {\n  border-spacing: 0;\n  border-collapse: separate;\n}\n\n.orgchart>table:first-child{\n  margin: 20px auto;\n}\n\n.orgchart td {\n  text-align: center;\n  vertical-align: top;\n  padding: 0;\n}\n\n.orgchart tr.lines .topLine {\n  border-top: 2px solid #AFAFAF;\n}\n\n.orgchart tr.lines .rightLine {\n  border-right: 1px solid  #AFAFAF;\n  float: none;\n  border-radius: 0;\n}\n\n.orgchart tr.lines .leftLine {\n  border-left: 1px solid  #AFAFAF;\n  float: none;\n  border-radius: 0;\n}\n\n.orgchart tr.lines .downLine {\n  background-color:  #AFAFAF;\n  margin: 0 auto;\n  height: 20px;\n  width: 2px;\n  float: none;\n}\n\n/* node styling */\n.orgchart .node {\n         display: flex;\n  box-sizing: border-box;\n  display: inline-block;\n  position: relative;\n    margin: 0 0 20px 0;\n  padding: 3px;\n  border: 2px dashed transparent;\n  text-align: center;\n    flex-direction: row; /* Align children in a row */\n\n}\n\n.orgchart.l2r .node, .orgchart.r2l .node {\n  width: 50px;\n  height: 130px;\n}\n\n.orgchart .node>.hazy {\n  opacity: 0.2;\n}\n\n.orgchart .node>.spinner {\n  position: absolute;\n  top: calc(50% - 15px);\n  left: calc(50% - 15px);\n  vertical-align: middle;\n  font-size: 30px;\n  color: rgba(68, 157, 68, 0.8);\n}\n\n.delete-node-icon {\n    /* Hide any potential background, border, or box-shadow */\n    background: none; /* Remove background color */\n    border: none; /* Remove border */\n    box-shadow: none; /* Remove box-shadow */\n}\n\n.delete-node-icon.active {\n    /* Adjust this based on the class or state that triggers the rectangle */\n    background: none;\n    border: none;\n    box-shadow: none;\n}\n\n.orgchart .node:hover {\n    background-color:#BFBFBF;\n\n  transition: .5s;\n}\n\n\n.orgchart .ghost-node {\n  position: fixed;\n  left: -10000px;\n  top: -10000px;\n}\n\n.orgchart .ghost-node rect {\n  fill: #ffffff;\n  stroke: #bf0000;\n}\n\n.orgchart .node.allowedDrop {\n  border-color: rgba(68, 157, 68, 0.9);\n}\n\n\n\n.orgchart.b2t .node .title {\n  -ms-transform: rotate(-180deg);\n  -moz-transform: rotate(-180deg);\n  -webkit-transform: rotate(-180deg);\n  transform: rotate(-180deg);\n  -ms-transform-origin: center bottom;\n  -moz-transform-origin: center bottom;\n  -webkit-transform-origin: center bottom;\n  transform-origin: center bottom;\n    \n}\n\n.orgchart.l2r .node .title {\n  -ms-transform: rotate(-90deg) translate(-40px, -40px) rotateY(180deg);\n  -moz-transform: rotate(-90deg) translate(-40px, -40px) rotateY(180deg);\n  -webkit-transform: rotate(-90deg) translate(-40px, -40px) rotateY(180deg);\n  transform: rotate(-90deg) translate(-40px, -40px) rotateY(180deg);\n  -ms-transform-origin: bottom center;\n  -moz-transform-origin: bottom center;\n  -webkit-transform-origin: bottom center;\n  transform-origin: bottom center;\n  width: 120px;\n}\n\n.orgchart.r2l .node .title {\n  -ms-transform: rotate(-90deg) translate(-40px, -40px);\n  -moz-transform: rotate(-90deg) translate(-40px, -40px);\n  -webkit-transform: rotate(-90deg) translate(-40px, -40px);\n  transform: rotate(-90deg) translate(-40px, -40px);\n  -ms-transform-origin: bottom center;\n  -moz-transform-origin: bottom center;\n  -webkit-transform-origin: bottom center;\n  transform-origin: bottom center;\n  width: 120px;\n}\n\n.orgchart .node .title .symbol {\n  float: left;\n  margin-top: 4px;\n  margin-left: 2px;\n}\n\n\n.orgchart .node .title {\n  box-sizing: border-box;\n  width: 120px;\n  text-align: center;\n  font-size: 12px;\n  font-weight: bold;\n  height: 20px;\n  line-height: 20px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n    background-color: #f1f1f1;\n\n  color:#A9A9A9;\n  border-radius: 4px 4px 0 0;\n}\n.orgchart .node .content {\n  box-sizing: border-box;\n  width: 120px;\n  height: 20px;\n  line-height: 20px;\n  font-size: 10px;\n  border: 1px solid rgba(217, 83, 79, 0.8);\n  border-width: 0 1px 1px 1px;\n  border-radius: 0 0 0.25rem 0.25rem;\n  text-align: center;\n  background-color: #fff;\n  color: #333;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n\n.orgchart.b2t .node .content {\n  -ms-transform: rotate(180deg);\n  -moz-transform: rotate(180deg);\n  -webkit-transform: rotate(180deg);\n  transform: rotate(180deg);\n  -ms-transform-origin: center top;\n  -moz-transform-origin: center top;\n  -webkit-transform-origin: center top;\n  transform-origin: center top;\n}\n\n.orgchart.l2r .node .content {\n  -ms-transform: rotate(-90deg) translate(-40px, -40px) rotateY(180deg);\n  -moz-transform: rotate(-90deg) translate(-40px, -40px) rotateY(180deg);\n  -webkit-transform: rotate(-90deg) translate(-40px, -40px) rotateY(180deg);\n  transform: rotate(-90deg) translate(-40px, -40px) rotateY(180deg);\n  -ms-transform-origin: top center;\n  -moz-transform-origin: top center;\n  -webkit-transform-origin: top center;\n  transform-origin: top center;\n  width: 120px;\n}\n\n.orgchart.r2l .node .content {\n  -ms-transform: rotate(-90deg) translate(-40px, -40px);\n  -moz-transform: rotate(-90deg) translate(-40px, -40px);\n  -webkit-transform: rotate(-90deg) translate(-40px, -40px);\n  transform: rotate(-90deg) translate(-40px, -40px);\n  -ms-transform-origin: top center;\n  -moz-transform-origin: top center;\n  -webkit-transform-origin: top center;\n  transform-origin: top center;\n  width: 200px;\n}\n\n.orgchart .node .edge {\n  font-size: 15px;\n  position: absolute;\n  color: rgba(68, 157, 68, 0.5);\n  cursor: default;\n  transition: .2s;\n  -webkit-transition: .2s;\n}\n\n.orgchart.noncollapsable .node .edge {\n  display: none;\n}\n\n.orgchart .edge:hover {\n  color: #449d44;\n  cursor: pointer;\n}\n\n.orgchart .node .verticalEdge {\n  width: calc(100% - 10px);\n  width: -webkit-calc(100% - 10px);\n  width: -moz-calc(100% - 10px);\n  left: 5px;\n}\n\n.orgchart .node .topEdge {\n  top: -4px;\n}\n\n.orgchart .node .bottomEdge {\n  bottom: -4px;\n}\n\n.orgchart .node .horizontalEdge {\n  width: 15px;\n  height: calc(100% - 10px);\n  height: -webkit-calc(100% - 10px);\n  height: -moz-calc(100% - 10px);\n  top: 5px;\n}\n\n.orgchart .node .rightEdge {\n  right: -4px;\n}\n\n.orgchart .node .leftEdge {\n  left: -4px;\n}\n\n.orgchart .node .horizontalEdge::before {\n  position: absolute;\n  top: calc(50% - 7px);\n  top: -webkit-calc(50% - 7px);\n  top: -moz-calc(50% - 7px);\n}\n\n.orgchart .node .rightEdge::before {\n  right: 3px;\n}\n\n.orgchart .node .leftEdge::before {\n  left: 3px;\n}\n\n.orgchart .node .toggleBtn {\n  position: absolute;\n  left: 5px;\n  bottom: -2px;\n  color: rgba(68, 157, 68, 0.6);\n}\n\n.orgchart .node .toggleBtn:hover {\n  color: rgba(68, 157, 68, 0.8);\n}\n\n.oc-export-btn {\n  display: inline-block;\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  padding: 6px 12px;\n  margin-bottom: 0;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.42857143;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  color: #fff;\n  background-color: #5cb85c;\n  border: 1px solid transparent;\n  border-color: #4cae4c;\n  border-radius: 4px;\n}\n\n.oc-export-btn:hover,.oc-export-btn:focus,.oc-export-btn:active  {\n  background-color: #449d44;\n  border-color: #347a34;\n}\n\n.orgchart~.mask {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 999;\n  text-align: center;\n  background-color: rgba(0,0,0,0.3);\n}\n\n.orgchart~.mask .spinner {\n  position: absolute;\n  top: calc(50% - 54px);\n  left: calc(50% - 54px);\n  color: rgba(255,255,255,0.8);\n  font-size: 108px;\n}\n\n.orgchart .node {\n  -webkit-transition: all 0.3s;\n  transition: all 0.3s;\n  top: 0;\n  left: 0;\n}\n\n.orgchart .slide-down {\n  opacity: 0;\n  top: 40px;\n}\n\n.orgchart.l2r .node.slide-down, .orgchart.r2l .node.slide-down {\n  top: 130px;\n}\n\n.orgchart .slide-up {\n  opacity: 0;\n  top: -40px;\n}\n\n.orgchart.l2r .node.slide-up, .orgchart.r2l .node.slide-up {\n  top: -130px;\n}\n\n.orgchart .slide-right {\n  opacity: 0;\n  left: 130px;\n}\n\n.orgchart.l2r .node.slide-right, .orgchart.r2l .node.slide-right {\n  left: 40px;\n}\n\n.orgchart .slide-left {\n  opacity: 0;\n  left: -130px;\n}\n\n.orgchart.l2r .node.slide-left, .orgchart.r2l .node.slide-left {\n  left: -40px;\n}\n\n \n    .orgchart .node .title {\n        display:flex;\n      height: unset;\n      text-align: left;\n      line-height: 40px;\n      width: auto;\n    padding: 0 10px;\n\n    }\n     .select2-container {\n      width: 100% !important; /* Full width of the parent container */\n    }\n    .select2-dropdown {\n      width: 100% !important; /* Same width as the container */\n      box-sizing: border-box; /* Ensure padding and border are included in width calculation */\n    }\n\n    /* Ensure that the selection box is also full width */\n    .select2-selection {\n      width: 100% !important;\n      box-sizing: border-box;\n    }\n  #EmployeeSelection {\n    position: absolute;\n    border: 1px solid #ccc;\n    background: white;\n    z-index: 1000; /* Ensure it stays on top */\n  }\n    .orgchart .node .content {\n                display:flex;\n\n      text-align: left;\n      padding: 0 10px;\n      width: auto;\n      border: 1px\n    }\n    .orgchart .node .content .symbol {\n      color: #aaa;\n      margin-right: 20px;\n    }\n    .oci-leader::before, .oci-leader::after {\n      background-color: rgba(217, 83, 79, 0.8);\n    }\n    .orgchart .node .avatar {\n      width: 60px;\n      height: 60px;\n      float: left;\n      margin: 5px;\n\n    }\n    .orgchart .node .verticalEdge, .orgchart .node .horizontalEdge { display: none; }\n\n    .dot {\n  height: 15px;\n  width: 15px;\n      background-color: lightgreen; /* Set the dot color to green */\n        right: 0;\n        position: absolute;\n\n}\n\n.orgchart .node:hover {\n      background-color:#BFBFBF;\n}\n.dot:hover {\n  background-color: green; /* Change to green on hover */\n}\n.CheckBox:hover {\n  background-color: blue; /* Change to green on hover */\n}    \n.CheckBox:hover {\n  background-color: blue; /* Change to green on hover */\n}\n\n`\n\n    return Linkx\n}", "import { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { OrganisationChartGrid } from './OrganisationChartGrid';\nimport OrgChart from \"../OrgChart.js/src/orgchart.js\"\nimport appendStyle from './OrgChartStyle';\nimport { isEmptyOrNull, serviceCall } from '@serenity-is/corelib/q';\nimport { isEmptyObject } from 'jquery';\nimport { EmployeeProfileRow, EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\nimport { getLookup } from '@serenity-is/corelib/q';\nimport { EmployeeRightsService, FinalOrganisationChartService, FullProfileService, OrganisationChartService, SplitOrganisationChartService, SplitOrganisationStructureService } from '../../../ServerTypes/OrganisationChart';\nimport { DivisionService, SectionService, DepartmentService } from '../../../ServerTypes/OrganisationHierarchy';\nimport { confirmDialog, confirm, notifySuccess, notifyError, notifyInfo } from '@serenity-is/corelib/q';\nimport { Decorators, EditorUtils, EntityDialog, RetrieveResponse, Select2Editor, Criteria } from '@serenity-is/corelib';\nimport { alertDialog, Authorization } from '@serenity-is/corelib/q';\nimport { PermissionKeys } from '../../../ServerTypes/Administration';\nimport { EmployeeProfileDialog } from '../../EmployeeProfile/EmployeeProfile/EmployeeProfileDialog';\nimport { EmployeePersonalProfileDialog } from '../../EmployeeProfile/EmployeePersonalProfile/EmployeePersonalProfileDialog';\nimport { EmployeeBasicDataDialog } from '../../EmployeeBasicData/EmployeeBasicData/EmployeeBasicDataDialog';\n\nexport default function pageInit() {\n    enum CardType {\n        DIRECTOR = 0,\n        DIVISION = 1,\n        DEPARTMENT = 2,\n        SECTION = 3\n    }\n    enum ChartType {\n        OrgChart = 0,\n        OrgStruct = 1,\n    }\n    function capitalizeFirstLetter(string) {\n        if (isEmptyOrNull(string))\n            return ''; // Handle empty strings\n        // Convert the first character to uppercase and the rest to lowercase\n        return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n    }\n    function getEnumNameFromValue(value: number): string | undefined {\n        return CardType[value];\n    }\n    function findMax(numbers: number[]): number {\n        if (numbers.length === 0)\n            throw new Error(\"The list is empty.\");\n        return Math.max(...numbers);\n    }\n    // Recursive function to extract all nodeContentPro values\n    function GenerateEmployeeChoosingDialog() {\n        var CustomDialog = document.createElement('dialog')\n        CustomDialog.style.top = \"50%\";\n        CustomDialog.style.left = \"50%\";\n        CustomDialog.style.transform = \"translate(-50%, -50%)\";\n        CustomDialog.innerHTML = `  <button id=\"confirmAddEmployee\" type=\"button\" class=\"btn btn-light btn-rounded   \" data-mdb-ripple-color=\"#ffffff\" style=\"background-color:#c2f0c2\">Confirm</button>  <button id=\"closeDialog\" type=\"button\" class=\"btn btn-light btn-rounded   \" data-mdb-ripple-color=\"#ffffff\" style=\"background-color:#ffcccc\">Close</button> <span style=\" white-space: nowrap;\" id = \"TargetElementSpan\"></span>`;\n        CustomDialog.id = \"EmployeeSelection\"\n        CustomDialog.addEventListener(\"\", () => {\n            CustomDialog.close();\n        });\n        const CustomDialogCloseButton = CustomDialog.querySelector(\"#closeDialog\") as HTMLButtonElement;\n        CustomDialogCloseButton.addEventListener(\"click\", () => {\n            CustomDialog.close();\n        });\n        const CustomDialogConfirmButton = CustomDialog.querySelector(\"#confirmAddEmployee\") as HTMLButtonElement;\n        CustomDialogConfirmButton.addEventListener(\"click\", () => {\n            var EmployeeIdInput = document.getElementById('EmployeeIdInput') as HTMLInputElement;\n            if ($(EmployeeIdInput).val() == '') {\n                notifyError('Please fill in the Employee')\n                return\n            }\n            let ListCounter = 0, name\n            for (ListCounter = 0; ListCounter < ListOfEmployeeData.length; ListCounter++) {\n                if (ListOfEmployeeData[ListCounter].id == $(EmployeeIdInput).val()) {\n                    name = ListOfEmployeeData[ListCounter].EmployeeName\n                    break\n                }\n            }\n            var HierarchyLevelToSetEmployee = DecomposeStringToList(ElementToSetEmployee, 0x88, 0x99)\n            var FinalOrgChartBuffer = JSON.parse(JSON.stringify(datascource2))\n            var TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n            var HierarchyLevel\n            if (HierarchyLevelToSetEmployee.length > 1) {\n                for (let i = 1; i < HierarchyLevelToSetEmployee.length; i++) {\n                    HierarchyLevel = HierarchyLevelToSetEmployee[i]\n                    var HierarchyKey = getEnumNameFromValue(i)\n                    TargetedFinalOrgChartBuffer = findByClassName(TargetedFinalOrgChartBuffer, HierarchyLevel)\n                    var DatabaseData = `${HierarchyKey}${ListOfEmployeeData[ListCounter][capitalizeFirstLetter(HierarchyKey) + 'Id']} Class`\n                    if (DatabaseData != TargetedFinalOrgChartBuffer.className) {\n                        var correctDepartment = GetLookupValueFromId(capitalizeFirstLetter(getEnumNameFromValue(CardType.DEPARTMENT)), ListOfEmployeeData[ListCounter][capitalizeFirstLetter(getEnumNameFromValue(CardType.DEPARTMENT)) + 'Id'])\n                        var correctDivision = GetLookupValueFromId(capitalizeFirstLetter(getEnumNameFromValue(CardType.DIVISION)), ListOfEmployeeData[ListCounter][capitalizeFirstLetter(getEnumNameFromValue(CardType.DIVISION)) + 'Id'])\n                        var correctSection = GetLookupValueFromId(capitalizeFirstLetter(getEnumNameFromValue(CardType.SECTION)), ListOfEmployeeData[ListCounter][capitalizeFirstLetter(getEnumNameFromValue(CardType.SECTION)) + 'Id'])\n                        var string = `${ListOfEmployeeData[ListCounter][\"EmployeeName\"]} should be in `;\n                        if (!isEmptyOrNull(correctSection))\n                            string += `${correctSection} ${capitalizeFirstLetter(getEnumNameFromValue(CardType.SECTION))}, under `\n                        if (!isEmptyOrNull(correctDepartment))\n                            string += `${correctDepartment} ${capitalizeFirstLetter(getEnumNameFromValue(CardType.DEPARTMENT))}, under `\n                        if (!isEmptyOrNull(correctDivision))\n                            string += `${correctDivision} ${capitalizeFirstLetter(getEnumNameFromValue(CardType.DIVISION))}`\n                        alertDialog(string)\n                        break\n                    }\n                }\n            }\n            HierarchyLevel = HierarchyLevelToSetEmployee[HierarchyLevelToSetEmployee.length - 1]\n            SetEmployeeByClassName(TargetedFinalOrgChartBuffer, HierarchyLevel, parseInt($(EmployeeIdInput).val()))\n            datascource2 = FinalOrgChartBuffer\n            GenerateSaveOrgStructure()\n            CustomDialog.close();\n        });\n        var CustomTable = document.createElement('table');\n        CustomTable.id = \"EmployeeSelectionTable\"\n        var CustomTableRow = document.createElement('tr');\n        var CustomTableRow2 = document.createElement('DIV');\n        var fragment = document.createElement(\"img\");\n        fragment.setAttribute(\"id\", \"employeeImg\");\n        fragment.width = 63;\n        fragment.height = 112.5;\n        fragment.style.display = 'block';\n        fragment.style.margin = '0 auto';\n        CustomTableRow2.appendChild(fragment)\n        var EmployeeIdTextNode = document.createElement('span');\n        EmployeeIdTextNode.textContent = \"ID\"\n        EmployeeIdTextNode.style.display = 'block'; // Ensure it's a block-level element\n        EmployeeIdTextNode.style.whiteSpace = 'nowrap'; // Prevent text from wrapping\n        var EmployeeIdTextNodeContainer = document.createElement('TD');\n        EmployeeIdTextNodeContainer.appendChild(EmployeeIdTextNode);\n        var EmployeeNameTextNode = document.createElement('span');\n        EmployeeNameTextNode.textContent = \"Name\"\n        EmployeeNameTextNode.style.display = 'block'; // Ensure it's a block-level element\n        EmployeeNameTextNode.style.whiteSpace = 'nowrap'; // Prevent text from wrapping\n        var EmployeeNameTextNodeContainer = document.createElement('TD');;\n        EmployeeNameTextNodeContainer.appendChild(EmployeeNameTextNode);\n\n        var EmployeeIdSelector = document.createElement('TD');\n        var EmployeeIdInput = document.createElement('input');\n        EmployeeIdInput.id = \"EmployeeIdInput\"\n        EmployeeIdSelector.appendChild(EmployeeIdInput)\n\n        var EmployeeNameSelector = document.createElement('TD');\n        var EmployeeNameInput = document.createElement('input');\n        EmployeeNameInput.id = \"EmployeeNameInput\"\n        EmployeeNameSelector.appendChild(EmployeeNameInput)\n\n        CustomTableRow.appendChild(EmployeeIdTextNodeContainer)\n        CustomTableRow.appendChild(EmployeeIdSelector)\n        CustomTableRow.appendChild(EmployeeNameTextNodeContainer)\n        CustomTableRow.appendChild(EmployeeNameSelector)\n        CustomTable.appendChild(CustomTableRow)\n        CustomDialog.appendChild(CustomTableRow2)\n        CustomDialog.appendChild(CustomTable)\n        document.body.appendChild(CustomDialog);\n\n        return CustomDialog\n    }\n    document.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape') {\n            pdfDialog.close();\n            var dlg = document.getElementById('EmployeeSelection')\n            dlg.close();\n        }\n    });\n    function GeneratePdfDialog() {\n        var pdfDialog = document.createElement('dialog')\n        pdfDialog.id = 'pdfDialog'\n        pdfDialog.innerHTML = `\n    <button id=\"closePdf\" type=\"button\" style=\"position: absolute; top: 10px; right: 10px; background-color: #ffcccc; border: none; font-size: 20px; cursor: pointer;\">\n        &times;\n    </button>\n     <div id=\"pdfTitle\" style=\"margin: 20px 0; font-size: 20px;\"></div>\n\n     <div style=\"margin-top: 10px;\">\n        <button id=\"prevPdf\" class=\"pdf-nav-btn btn btn-light btn-rounded\">&lt;</button>\n        <button id=\"nextPdf\" class=\"pdf-nav-btn btn btn-light btn-rounded\">&gt;</button>\n    </div>\n`;\n\n        pdfDialog.style.border = \"none\"; // Optional: remove border for aesthetics\n        pdfDialog.style.width = \"80%\"; // Set a width for the dialog\n        pdfDialog.style.height = \"80%\"; // Set a height for the dialog\n        pdfDialog.style.transform = \"translate(-50%, -50%)\"; // Offset for centering\n        pdfDialog.style.position = \"fixed\"; // Fixed positioning\n        pdfDialog.style.top = \"50%\"; // Center vertically\n        pdfDialog.style.left = \"50%\"; // Center horizontally\n\n        const CustomDialogCloseButton = pdfDialog.querySelector(\"#closePdf\") as HTMLButtonElement;\n        CustomDialogCloseButton.addEventListener(\"click\", () => {\n            pdfDialog.close();\n        });\n        //img.src = `/upload/${imgPath}`;\n        var pdf = document.createElement('iframe')\n        //pdf.src = `/upload/EmployeeProfile/00000/00000034_ug53pfwxuh2sk.pdf`;\n        pdf.type = `application/pdf`\n        pdf.style.width = \"100%\"; // Full width of the dialog\n        pdf.style.height = \"calc(100% - 40px)\"; // Full height minus button height (adjust as needed)\n        pdf.id = 'pdf'\n        pdfDialog.appendChild(pdf)\n        document.body.appendChild(pdfDialog);\n        document.getElementById(\"prevPdf\").addEventListener(\"click\", () => {\n            currentPdfIndex = (currentPdfIndex - 1 + pdfSources.length) % pdfSources.length; // Loop to the end\n            updatePdf();\n        });\n\n        document.getElementById(\"nextPdf\").addEventListener(\"click\", () => {\n            currentPdfIndex = (currentPdfIndex + 1) % pdfSources.length; // Loop to the beginning\n            updatePdf();\n        });\n\n    }\n    function updatePdf() {\n        const pdfEmbed = document.getElementById(\"pdf\");\n        pdfEmbed.src = pdfSources[currentPdfIndex];\n        const pdfTitle = document.getElementById(\"pdfTitle\");\n        pdfTitle.textContent = pdfOriginalName[currentPdfIndex]; // Assuming you have access to the original name\n\n        document.getElementById(\"prevPdf\").disabled = currentPdfIndex === 0; // Disable if first PDF\n        document.getElementById(\"nextPdf\").disabled = currentPdfIndex === pdfSources.length - 1; // Disable if last PDF\n    }\n    GeneratePdfDialog()\n    var Style = null;\n    var DataPanStart = null;\n    const sortedValues = Object.values(CardType)\n        .filter(value => typeof value == 'number') // Ensure we are working with numbers\n        .sort((a, b) => b - a); // Sort in descending order\n    const numbers: number[] = [];\n    let ElementToSetEmployee = '';\n    for (const key of Object.keys(CardType)) {\n        // Skip numeric keys which are reverse mappings\n        if (isNaN(Number(key))) {\n            const value = CardType[key as keyof typeof CardType];\n            numbers.push(value)\n        }\n    }\n    const minimmumVal = Math.min(...numbers);\n    const maximumVal: number = findMax(numbers);\n    const EmployeeEnum = maximumVal + 1\n    let EmployeeChoosingDialog = GenerateEmployeeChoosingDialog()\n    var StyleLink = appendStyle()\n    document.head.appendChild(StyleLink)\n    var container = document.createElement('div')\n    container.id = \"chart-container\"\n    container.className = \"BigTab\"\n    var DepartmentPanel = document.createElement('div')\n    DepartmentPanel.id = \"DepartmentPanel\"\n    DepartmentPanel.className = \"tabcontent\"\n    var DivisionPanel = document.createElement('div')\n    DivisionPanel.id = \"DivisionPanel\"\n    DivisionPanel.className = \"tabcontent\"\n    var SectionPanel = document.createElement('div')\n    SectionPanel.id = \"SectionPanel\"\n    SectionPanel.className = \"tabcontent\"\n    interface Node {\n        id: string;\n        name: string;   // The name of the person\n        title: string;  // The job title of the person\n        className: string;\n        children?: Node[];\n        hierarchyLevel: number;\n        hierarchyId: number;\n        childrenIndex?: number;\n        EmployeeRowId: number;\n        Rights?: EmployeeAdminRights;\n    }\n    interface NodeRow {\n        id: string;\n        EmployeeRowId: number;\n        name: string;\n        title: string;\n        className: string;\n        hierarchyLevel: number;\n        parentId: string | null; // Added parentId to track relationships\n        Rights?: EmployeeAdminRights;\n        children?: NodeRow[];\n        childrenIndex?: number;\n        hierarchyId?: number;\n\n    }\n    interface NodeRights {\n        id: string;\n        Rights: EmployeeAdminRights;\n        EmployeeRowId: number;\n        nodeHierarchy: number;\n    }\n    interface Employee {\n        id: number;\n        Rights?: EmployeeAdminRights;\n        ImgPath: string;\n        JobDescPath?: string;\n        EmployeeId: string;\n        OccupationId: number;\n        EmployeeName: string;\n        DepartmentId: number;\n        DivisionId: number;\n        SectionId: number;\n        JobGradeId: number;\n        SalaryDetails: number;\n    }\n\n    interface EmployeeAdminRights {\n        LeaveApproval: boolean;\n        OtApproval: boolean;\n        MoneyClaiming: boolean;\n        Appraisal: boolean;\n        Training: boolean;\n    }\n\n    interface OrganisationHierarchy {\n        Id: number;\n        Name: string;\n    }\n    var ListOfDivision: OrganisationHierarchy[] = []\n    var ListOfDepartment: OrganisationHierarchy[] = []\n    var ListOfSection: OrganisationHierarchy[] = []\n    let SplitOrgChartList: NodeRow[] = []\n\n    var ListOfEmployeeData: Employee[] = []\n    var EmployeeFilter: any[] = [] //list for employee that has retired, terminated or resigned\n    //{'nodeTitlePro': hierarchy , 'id':'{Department/Division/Section Id}', 'name': '{EmployeeName}', 'title': 'Department/Division/Section Name', 'className': \"Hierarchy\" }\n    // node content pro is employee row id\n    let datascource\n    let datascource2\n    let FinalDatascource\n    let FinalDatascource2\n    var OccupationTable = getLookup(\"Occupation.Occupation\")\n    var JobGradeTable = getLookup(\"JobGrade.JobGrade\")\n    var criteria: any;\n    let SectionList: number[] = [];\n    let DepartmentList: number[] = [];\n    let DivisionList: number[] = [];\n    var spareOrgStructJson = null;\n    var spareOrgChartJson = null;\n\n\n    let SplitOrgStructList: NodeRow[] = []\n\n    FullProfileService.List({\n\n    }, response => {\n        for (var index in response.Entities) {\n            if (response.Entities[index].Resigned == 1 ||\n                response.Entities[index].Terminated == 1 ||\n                response.Entities[index].Retired == 1\n                || response.Entities[index].IsActive == -1\n            ) {\n                EmployeeFilter.push(response.Entities[index].Id)\n                continue\n            }    \n            ListOfEmployeeData.push({\n                'id': response.Entities[index].Id, 'ImgPath': response.Entities[index].EmployeeImg, 'OccupationId': response.Entities[index].OccupationId,\n                'EmployeeName': response.Entities[index].EmployeeName, 'EmployeeId': response.Entities[index].EmployeeId,\n                'DivisionId': response.Entities[index].DivisionId,\n                'DepartmentId': response.Entities[index].DepartmentId, \"SectionId\": response.Entities[index].SectionId,\n                'JobDescPath': response.Entities[index].JobDescription, \"JobGradeId\": response.Entities[index].JobGradeId,\n                'SalaryDetails': response.Entities[index].BasicSalary\n            })\n        }\n\n\n        OrganisationChartService.List({\n        }, response => {\n            if (response.Entities.length > 0)\n                spareOrgStructJson = response.Entities[0].OrgChart\n            GenerateOrgStructure()\n\n        })\n\n        FinalOrganisationChartService.List({\n        }, response => {\n            if (response.Entities.length > 0)\n                spareOrgChartJson = response.Entities[0].FinalOrgChart\n            GenerateOrgChart()\n        })\n\n\n        if (Authorization.userDefinition.Permissions[PermissionKeys.HumanResources])//is HR\n        {\n            DivisionService.List({}, response => {\n                var DivisionContent = document.createElement('div')\n                DivisionContent.className = 'side-div'\n                var DivisionTable = document.createElement('div')\n                DivisionTable.id = \"DivisionTable\"\n                DivisionTable.className = \"wrapper\"\n                DivisionContent.appendChild(DivisionTable)\n                var DivisionRow = document.createElement('div')\n                DivisionRow.className = \"wrapper\"\n\n                for (var index in response.Entities) {\n                    var ElementId = response.Entities[index].Id\n                    var CardText = response.Entities[index].Name\n                    ListOfDivision.push({\n                        Id: ElementId,\n                        Name: CardText\n                    })\n                    var EmployeeCard = GenerateCard(ElementId, CardText, CardType.DIVISION)\n                    EmployeeCard.className = \"item\"\n                    if (!isEmptyOrNull(EmployeeCard))\n                        DivisionRow.appendChild(EmployeeCard)\n                }\n                DivisionTable.appendChild(DivisionRow)\n                DivisionPanel.appendChild(DivisionContent)\n\n                DepartmentService.List({}, response => {\n                    var DepartmentContent = document.createElement('div')\n                    DepartmentContent.className = 'side-div'\n                    var DepartmentTable = document.createElement('div')\n                    DepartmentTable.id = \"DepartmentTable\"\n                    DepartmentTable.className = \"wrapper\"\n\n                    DepartmentContent.appendChild(DepartmentTable)\n                    var DepartmentRow = document.createElement('div')\n                    DepartmentRow.className = \"wrapper\"\n\n                    for (var index in response.Entities) {\n                        var ElementId = response.Entities[index].Id\n                        var CardText = response.Entities[index].Name\n                        ListOfDepartment.push({\n                            Id: ElementId,\n                            Name: CardText\n                        })\n                        var EmployeeCard = GenerateCard(ElementId, CardText, CardType.DEPARTMENT)\n                        EmployeeCard.className = \"item\"\n                        if (!isEmptyOrNull(EmployeeCard))\n                            DepartmentRow.appendChild(EmployeeCard)\n                    }\n                    DepartmentTable.appendChild(DepartmentRow)\n                    DepartmentPanel.appendChild(DepartmentContent)\n                    SectionService.List({}, response => {\n                        var SectionContent = document.createElement('div')\n                        SectionContent.className = 'side-div'\n                        var SectionTable = document.createElement('div')\n                        SectionTable.id = \"SectionTable\"\n                        SectionTable.className = \"wrapper\"\n\n                        SectionContent.appendChild(SectionTable)\n                        var SectionRow = document.createElement('div')\n                        SectionRow.className = \"wrapper\"\n\n                        for (var index in response.Entities) {\n                            var ElementId = response.Entities[index].Id\n                            var CardText = response.Entities[index].Name\n                            ListOfSection.push({\n                                Id: ElementId,\n                                Name: CardText\n                            })\n                            var EmployeeCard = GenerateCard(ElementId, CardText, CardType.SECTION)\n                            EmployeeCard.className = \"item\"\n                            if (!isEmptyOrNull(EmployeeCard))\n                                SectionRow.appendChild(EmployeeCard)\n                        }\n\n                        SectionTable.appendChild(SectionRow)\n                        SectionPanel.appendChild(SectionContent)\n                        $('#defaultOpen').click()\n                        setCallbacks()\n                        var EmployeeIdInputElement = document.getElementById(\"EmployeeIdInput\")\n                        $(EmployeeIdInputElement).on('change', async function () {\n                            if ($(EmployeeNameInputElement).val() != $(EmployeeIdInputElement).val())\n                                $(EmployeeNameInputElement).val($(EmployeeIdInputElement).val()).trigger('change')\n                            var BufferEmployeeImage = document.createElement(\"img\");\n                            BufferEmployeeImage.width = 63;\n                            BufferEmployeeImage.height = 112.5;\n                            BufferEmployeeImage.style.display = 'block';\n                            BufferEmployeeImage.style.margin = '0 auto';\n                            var EmployeeImage = $(\"#employeeImg\")\n                            if (isEmptyOrNull($(EmployeeIdInputElement).val())) {\n                                EmployeeImage.replaceWith(BufferEmployeeImage)\n                                BufferEmployeeImage.setAttribute(\"id\", \"employeeImg\");\n                                return\n                            }\n                            let ListCounter = 0, imgPath\n                            for (ListCounter = 0; ListCounter < ListOfEmployeeData.length; ListCounter++) {\n                                if (ListOfEmployeeData[ListCounter].id == parseInt($(EmployeeNameInputElement).val())) {\n                                    imgPath = ListOfEmployeeData[ListCounter].ImgPath\n                                    break\n                                }\n                            }\n                            if (!isEmptyOrNull($(EmployeeNameInputElement).val()))\n                                BufferEmployeeImage.src = \"/upload/\" + imgPath\n                            EmployeeImage.replaceWith(BufferEmployeeImage)\n                            BufferEmployeeImage.setAttribute(\"id\", \"employeeImg\");\n                        })\n                        var EmployeeNameInputElement = document.getElementById(\"EmployeeNameInput\")\n                        $(EmployeeNameInputElement).on('change', async function () {\n                            if ($(EmployeeNameInputElement).val() != $(EmployeeIdInputElement).val())\n                                $(EmployeeIdInputElement).val($(EmployeeNameInputElement).val()).trigger('change')\n\n                            var BufferEmployeeImage = document.createElement(\"img\");\n                            BufferEmployeeImage.width = 63;\n                            BufferEmployeeImage.height = 112.5;\n                            BufferEmployeeImage.style.display = 'block';\n                            BufferEmployeeImage.style.margin = '0 auto';\n                            var EmployeeImage = $(\"#employeeImg\")\n                            if (isEmptyOrNull($(EmployeeNameInputElement).val())) {\n                                EmployeeImage.replaceWith(BufferEmployeeImage)\n                                BufferEmployeeImage.setAttribute(\"id\", \"employeeImg\");\n                                return\n                            }\n                            let ListCounter = 0, imgPath\n                            for (ListCounter = 0; ListCounter < ListOfEmployeeData.length; ListCounter++) {\n                                if (ListOfEmployeeData[ListCounter].id == parseInt($(EmployeeNameInputElement).val())) {\n                                    imgPath = ListOfEmployeeData[ListCounter].ImgPath\n                                    break\n                                }\n                            }\n                            if (!isEmptyOrNull($(EmployeeNameInputElement).val()))\n                                BufferEmployeeImage.src = \"/upload/\" + imgPath\n                            EmployeeImage.replaceWith(BufferEmployeeImage)\n                            BufferEmployeeImage.setAttribute(\"id\", \"employeeImg\");\n                        })\n\n                        $('#searcher').on('input', async function () {\n                            var searcherInput = $('#searcher').val()\n                            var tabcontent = document.getElementsByClassName('tabcontent')\n                            let i\n                            for (i = 0; i < tabcontent.length; i++) {\n                                if (tabcontent[i].style.display == 'block')\n                                    break\n                            }\n                            var ChildrenList = tabcontent[i].children[0].querySelector('.wrapper').querySelector('.wrapper').children\n                            const regex = new RegExp(searcherInput, 'gi');\n                            for (i = 0; i < ChildrenList.length; i++) {\n                                if (!regex.test(ChildrenList[i].textContent))\n                                    ChildrenList[i].style.display = 'none'\n                                else\n                                    ChildrenList[i].style.display = ''\n\n                            }\n\n                        })\n                        var counter = 0\n                        var ListLength = ListOfEmployeeData.length\n                        let EmployeeIdInputEditor = new Select2Editor($(\"#EmployeeIdInput\"))\n                        let EmployeeNameInputEditor = new Select2Editor($(\"#EmployeeNameInput\"))\n                        ListOfEmployeeData.forEach(option => {\n                            counter += 1\n                            EmployeeIdInputEditor.addItem({ id: (option.id).toString(), text: (option.EmployeeId).toString(), }); // 8am - 6pm , will consider lates\n                            EmployeeNameInputEditor.addItem({ id: (option.id).toString(), text: (option.EmployeeName).toString(), }); // 8am - 6pm , will consider lates\n                            if (counter == ListLength) {\n                                $('#EmployeeIdInput').trigger('change')\n                                $('#EmployeeNameInput').trigger('change')\n                            }\n                        });\n\n\n                    })\n\n                })\n            })\n\n        }\n\n        var ContentRow = document.createElement(\"div\")\n        ContentRow.setAttribute(\"class\", \"row div2\")\n        ContentRow.setAttribute(\"id\", \"ElementsTab\")\n\n\n\n        var TabRowNode = document.createElement('div');\n        TabRowNode.setAttribute(\"class\", \"tab\");\n        var naviBar = document.createElement('nav')\n        var naviBarContent = document.createElement('div')\n        naviBarContent.innerHTML = `<div class=\"nav nav-tabs nav-fill\" id=\"nav-tab\" role=\"tablist\">\n                          <a class=\"tab-nav-item nav-link \" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"false\">Organisation Structure</a>\n                          <a class=\"tab-nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Organisation Chart</a>\n                        </div>`\n        naviBar.appendChild(naviBarContent)\n\n\n        document.querySelector('#GridDiv').appendChild(naviBar);\n        document.querySelector('#GridDiv').appendChild(container);\n        var orgChartContainer = document.createElement('div')\n        orgChartContainer.id = 'orgChartContainer'\n        orgChartContainer.className = 'BigTab'\n        document.querySelector('#GridDiv').appendChild(orgChartContainer);\n        function openBig(evt, id) {\n            // Declare all variables\n            var i, tabcontent, tablinks;\n            if (id == OrgStructId) {\n                $('.tab').show()\n                const activeTabLink = document.querySelector('.tablinks.active');\n                if (activeTabLink) {\n                    var idBuffer = activeTabLink.textContent + \"Panel\"\n                    if (document.getElementById(idBuffer) != null)\n                        document.getElementById(idBuffer).style.display = \"block\";\n                }\n            }\n            else if (id == OrgChartId) {\n                $('.tab').hide()\n                $('.tabcontent').hide()\n            }\n            // Get all elements with class=\"tabcontent\" and hide them\n            tabcontent = document.getElementsByClassName(\"BigTab\");\n            for (i = 0; i < tabcontent.length; i++)\n                tabcontent[i].style.display = \"none\";\n            // Get all elements with class=\"tablinks\" and remove the class \"active\"\n            tablinks = document.getElementsByClassName(\"tab-nav-item\");\n            for (i = 0; i < tablinks.length; i++)\n                tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n            // Show the current tab, and add an \"active\" class to the button that opened the tab\n            if (document.getElementById(id) != null)\n                document.getElementById(id).style.display = \"block\";\n            evt.currentTarget.className += \" active\";\n            var OrgChart = document.getElementById('orgChartContainer')\n            if (OrgChart.children.length == 0 &&\n                !isEmptyOrNull(FinalDatascource2)) {\n                GenerateOrgChart()\n                DisableOrgChartMovement()\n            }\n        }\n        function open(evt, id) {\n            // Declare all variables\n            var i, tabcontent, tablinks;\n            // Get all elements with class=\"tabcontent\" and hide them\n            tabcontent = document.getElementsByClassName(\"tabcontent\");\n            for (i = 0; i < tabcontent.length; i++)\n                tabcontent[i].style.display = \"none\";\n            // Get all elements with class=\"tablinks\" and remove the class \"active\"\n            tablinks = document.getElementsByClassName(\"tablinks\");\n            for (i = 0; i < tablinks.length; i++)\n                tablinks[i].className = tablinks[i].className.replace(\"active\", \"\");\n            // Show the current tab, and add an \"active\" class to the button that opened the tab\n            if (document.getElementById(id) != null)\n                document.getElementById(id).style.display = \"block\";\n            var cards = document.getElementById(id).children[0].querySelector('.wrapper').querySelector('.wrapper').children\n            for (let i = 0; i < cards.length; i++)\n                cards[i].style.display = ''\n            evt.currentTarget.className += \" active\";\n        }\n        var OrgStructId = 'chart-container'\n        var OrgChartId = 'orgChartContainer'\n        var OrgStructButton = document.getElementById('nav-home-tab')\n        OrgStructButton.addEventListener('click', function () { openBig(event, OrgStructId); }, false);\n        var OrgChartButton = document.getElementById('nav-profile-tab')\n        OrgChartButton.addEventListener('click', function () { openBig(event, OrgChartId); }, false);\n        OrgStructButton.click();\n        if (Authorization.userDefinition.Permissions[PermissionKeys.HumanResources]) {\n            ContentRow.appendChild(TabRowNode)\n            ContentRow.appendChild(DivisionPanel)\n            ContentRow.appendChild(SectionPanel)\n            ContentRow.appendChild(DepartmentPanel)\n            document.querySelector('.content').appendChild(ContentRow);\n        }\n        var ButtonHolder = document.createElement('div')\n        var DepartmentTableButton = document.createElement('button');\n        DepartmentTableButton.addEventListener('click', function () { open(event, 'DepartmentPanel'); }, false);\n        DepartmentTableButton.setAttribute(\"class\", \"tablinks\");\n        DepartmentTableButton.innerText = 'Department'\n        DepartmentTableButton.setAttribute(\"id\", \"defaultOpen\");\n        var DivisionTableButton = document.createElement('button');\n        DivisionTableButton.addEventListener('click', function () { open(event, 'DivisionPanel'); }, false);\n        DivisionTableButton.setAttribute(\"class\", \"tablinks\");\n        DivisionTableButton.innerText = 'Division'\n        var SectionTableButton = document.createElement('button');\n        SectionTableButton.addEventListener('click', function () { open(event, 'SectionPanel'); }, false);\n        SectionTableButton.setAttribute(\"class\", \"tablinks\");\n        SectionTableButton.innerText = 'Section'\n        ButtonHolder.appendChild(DivisionTableButton)\n        ButtonHolder.appendChild(DepartmentTableButton)\n        ButtonHolder.appendChild(SectionTableButton)\n\n        var TextInputHolder = document.createElement('div')\n        TextInputHolder.innerHTML = `    <input id=\"searcher\" type=\"text\" placeholder=\"Search...\" style=\"margin-left: 10px;\">`\n        TabRowNode.appendChild(ButtonHolder)\n        TabRowNode.appendChild(TextInputHolder)\n\n        let orgchart = null\n\n    })\n    function addChildren(root, TargetClassName: string, newNode: Node): boolean {\n        // If the current node's name matches the target name, add the new node\n        if (root.className.includes(TargetClassName)) {\n            if (!root.children)\n                root.children = [newNode];\n            else {\n                const checkId = (id: string): boolean => root.children.some((item) => item.id === id);\n                if (checkId(newNode.id))//repeated children\n                    return false\n                root.children.push(newNode);\n            }\n            return true; // Node found and new node added\n        }\n        if (root.children)\n            for (const child of root.children)\n                if (addChildren(child, TargetClassName, newNode))\n                    return false; // Stop recursion after adding the node\n        return false; // Target node not found\n    }\n\n    function hasChild(root, newNode) {\n        if (root.children) {\n            for (const child of root.children) {\n                if (child.className === newNode.className)\n                    return true; // Duplicate found\n\n            }\n        }\n        return false; // No duplicate found\n    }\n\n    function checkRepeatedChildren(root, TargetClassName: string, newNode: Node): boolean {\n        // If the current node's name matches the target name, add the new node\n        //   console.log(root)\n        if (!TargetClassName.endsWith(\"Class\"))\n            TargetClassName = TargetClassName + \" Class\"\n        if (root.className === TargetClassName) {\n            var result = hasChild(root, newNode)\n            return result\n        }\n        if (root.children)\n            for (const child of root.children)\n                if (checkRepeatedChildren(child, TargetClassName, newNode))\n                    return true; // Stop recursion after adding the node\n        return false; // Target node not found\n    }\n\n    function findTitleByClassName(data, className) {\n        // Check if current node has the className\n        if (data.className === className)\n            return data.title;\n        // If there are children, search them recursively\n        if (data.children) {\n            for (const child of data.children) {\n                const result = findTitleByClassName(child, className);\n                if (result)\n                    return result;\n            }\n        }\n        // Return null if className is not found\n        return null;\n    }\n    function findIdByClassName(data, className) {\n\n        if (data.className === className)\n            return data.id;\n        // If there are children, search them recursively\n        if (data.children) {\n            for (const child of data.children) {\n                const result = findIdByClassName(child, className);\n                if (result)\n                    return result;\n            }\n        }\n        // Return null if className is not found\n        return null;\n    }\n    function deleteNodeById(data, id) {\n        if (Array.isArray(data)) {\n            // Process each item in the array\n            for (let i = 0; i < data.length; i++) {\n                const child = data[i];\n                // Recursively check and modify children\n                deleteNodeById(child, child.id);\n                // Remove the node if it matches the criteria\n                if (child.id == id) {\n                    data.splice(i, 1); // Remove the node from the array\n                    i--; // Adjust the index after removal\n                }\n            }\n        } else if (data.children) {\n            // Process children nodes\n            deleteNodeById(data.children, id);\n            if (data.id == id) {\n                return null; // Indicate deletion for parent array processing\n            }\n        }\n    }\n\n    function removeEmptyChildren(obj) {\n        if (isEmptyOrNull(obj))\n            return\n        if (obj.children) {\n            // Recursively process each child\n            obj.children.forEach(child => removeEmptyChildren(child));\n            // Remove the 'children' property if it is empty\n            if (obj.children.length === 0)\n                delete obj.children;\n        }\n    }\n    function findChildrenById(root, id) {\n        // If the current node matches the className, return its children\n        if (!isEmptyOrNull(root.id)) {\n            if (root.id.trim() === id.trim())\n                return root.children || [];\n        }\n        if (root.children && Array.isArray(root.children)) {\n            for (let child of root.children) {\n                let result = findChildrenById(child, id);\n                if (result)\n                    return result;\n            }\n        }\n        return null;\n    }\n    function DisableOrgChartMovement() { //callback for node on orgchart\n        const observer = new MutationObserver((mutationsList) => {\n            for (const mutation of mutationsList) {\n                if (mutation.type === 'childList') {\n\n                    var orgChartElement = document.getElementById(\"orgChartContainer\")\n                    if (!isEmptyOrNull(orgChartElement)) {\n                        var orgDiv = orgChartElement.querySelector(\".orgchart\");\n                        if (!isEmptyOrNull(orgDiv)) {\n                            var nodes = orgDiv.getElementsByClassName('node')\n                            for (let i = 0; i < nodes.length; i++) {\n                                var jsonObject = JSON.parse(nodes[i].getAttribute('data-source'));\n                                if (jsonObject.hierarchyLevel != EmployeeEnum)\n                                    nodes[i].draggable = false\n                            }\n                        }\n                    }\n\n\n                }\n            }\n        });\n        observer.observe(document.body, { childList: true, subtree: true });\n    }\n    var pdfSources = [];\n    var pdfOriginalName = [];\n    let currentPdfIndex = 0;\n\n    function setCallbacks() { //callback for node on orgchart\n        const observer = new MutationObserver((mutationsList) => {\n            for (const mutation of mutationsList) {\n                if (mutation.type === 'childList') {\n                    var nodes = document.getElementsByClassName(\"node\");\n                    if (nodes.length > 0) {\n                        let ElementArray: any[] = []\n                        for (let j = 0; j < nodes.length; j++) {\n                            var TargetElement = nodes[j] as HTMLDivElement\n                            //console.log(TargetElement.className)\n                            ElementArray.push(TargetElement)\n                            ElementArray[j].addEventListener(\"dragover\", function (event) {\n                                const dragEvent = event as DragEvent;\n                                if (dragEvent.dataTransfer) {\n                                    event.preventDefault()\n                                    dragEvent.dataTransfer.dropEffect = 'move';  // Indicate the drop action\n                                    event.stopImmediatePropagation();\n                                }\n                            })\n                            var jsonObject = JSON.parse(ElementArray[j].getAttribute('data-source'));\n                            var relation = jsonObject.relationship\n                            if (relation != '001' || nodes.length == 1)\n                                if (Authorization.userDefinition.Permissions[PermissionKeys.HumanResources])//is HR\n                                    ElementArray[j].draggable = true\n                            ElementArray[j].addEventListener(\"drop\", function (event) {\n                                event.stopImmediatePropagation();\n                                var StartPointData = event.dataTransfer.getData('text/plain'); // oobtain the data of the dropped element\n                                if (isEmptyOrNull(StartPointData))\n                                    return\n                                var StartPointJson = JSON.parse(StartPointData);\n                                var EventTargetElement = $(event.target)\n                                if (!isEmptyOrNull(EventTargetElement.attr('class'))) {\n                                    if (EventTargetElement.attr('class').includes('avatar'))\n                                        EventTargetElement = EventTargetElement.parent()\n                                }\n                                if (isEmptyOrNull(EventTargetElement.parent().attr('data-source'))) {\n                                    while (isEmptyOrNull(EventTargetElement.parent().attr('data-source')))\n                                        EventTargetElement = EventTargetElement.parent()\n                                }\n                                var destinationJson = JSON.parse(EventTargetElement.parent().attr('data-source'));\n                                var EventTargetHierarchy = destinationJson.hierarchyLevel\n                                var destinationClassName = destinationJson.className\n                                var destinationId = destinationJson.id\n                                var HierarchyLevelToSearch: any[] = DecomposeStringToList(destinationId, 0x88, 0x99)\n                                if (!isEmptyOrNull(StartPointData)) {\n                                    var StartPointTitle = null\n                                    var StartPointName = null\n                                    var StartPointId = null\n                                    var StartPointHierarchyId = null\n                                    var StartPointHierarchy = null\n                                    if (StartPointJson.external) { // externla move\n                                        StartPointId = StartPointJson.id\n                                        StartPointHierarchyId = StartPointJson.hierarchyId\n                                        StartPointTitle = StartPointJson.title\n                                        StartPointName = StartPointJson.name\n                                        StartPointHierarchy = StartPointJson.hierarchyLevel\n                                        if (EventTargetHierarchy > StartPointHierarchy && !isEmptyOrNull(destinationJson.parentId)) {\n                                            var StringToShow = capitalizeFirstLetter(getEnumNameFromValue(EventTargetHierarchy)) + ' cannot be above ' +\n                                                capitalizeFirstLetter(getEnumNameFromValue(StartPointHierarchy))\n                                            notifyError(StringToShow)\n                                            event.stopImmediatePropagation();\n                                            return\n                                        }\n                                    }\n                                    var targetElementId = parseInt(EventTargetElement.parent().attr('class').replace('node', '').replace('Class', '').trim())\n                                    if (targetElementId == parseInt(StartPointJson.parentId) &&\n                                        StartPointJson.parentId !== undefined && targetElementId !== undefined)\n                                        return\n                                    if (isEmptyOrNull(StartPointJson.parentId) && isEmptyOrNull(StartPointJson.external))\n                                        return\n                                    if (isEmptyOrNull(EventTargetElement.parent().attr('class')))\n                                        return\n                                    var ClassName = StartPointJson.className\n                                    if (StartPointHierarchy == null)\n                                        StartPointHierarchy = StartPointJson.hierarchyLevel\n                                    var DestinationNode = EventTargetElement.parent().attr('class').replace('node', '').trim().replace('focused', '')\n                                    if (DestinationNode == ClassName)\n                                        return\n                                    if (StartPointHierarchy == EmployeeEnum) {\n                                        let i = 0\n                                        var EmployeeRowId = parseInt(StartPointJson.EmployeeRowId)\n                                        for (i = 0; i < ListOfEmployeeData.length; i++) {\n                                            if (ListOfEmployeeData[i][\"id\"] == EmployeeRowId)\n                                                break\n                                        }\n                                        var FinalOrgChartBuffer = JSON.parse(JSON.stringify(datascource2))\n                                        var TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n                                        /*\n                                        var Counter = 1\n                                        for (const key of Object.keys(CardType)) {\n                                            if (isNaN(Number(key))) {\n                                                var id = ListOfEmployeeData[i][`${capitalizeFirstLetter(key)}Id`]\n                                                if (isEmptyOrNull(id))\n                                                    continue\n                                                var TargetedClassName = `${key}${id}`\n                                                if (HierarchyLevelToSearch[Counter] != TargetedClassName) {\n                                                    var correctDepartment = GetLookupValueFromId(capitalizeFirstLetter(getEnumNameFromValue(CardType.DEPARTMENT)), ListOfEmployeeData[i][capitalizeFirstLetter(getEnumNameFromValue(CardType.DEPARTMENT)) + 'Id'])\n                                                    var correctDivision = GetLookupValueFromId(capitalizeFirstLetter(getEnumNameFromValue(CardType.DIVISION)), ListOfEmployeeData[i][capitalizeFirstLetter(getEnumNameFromValue(CardType.DIVISION)) + 'Id'])\n                                                    var correctSection = GetLookupValueFromId(capitalizeFirstLetter(getEnumNameFromValue(CardType.SECTION)), ListOfEmployeeData[i][capitalizeFirstLetter(getEnumNameFromValue(CardType.SECTION)) + 'Id'])\n                                                    var string = `${ListOfEmployeeData[i][\"EmployeeName\"]} should be in `;\n\n                                                    if (!isEmptyOrNull(correctSection))\n                                                        string += `${correctSection} ${capitalizeFirstLetter(getEnumNameFromValue(CardType.SECTION))}, under `\n                                                    if (!isEmptyOrNull(correctDepartment))\n                                                        string += `${correctDepartment} ${capitalizeFirstLetter(getEnumNameFromValue(CardType.DEPARTMENT))}, under `\n                                                    if (!isEmptyOrNull(correctDivision))\n                                                        string += `${correctDivision} ${capitalizeFirstLetter(getEnumNameFromValue(CardType.DIVISION))}`\n                                                    alertDialog(string)\n                                                    break\n                                                    //return\n                                                }\n                                                Counter+=1\n                                            }\n                                        }\n                                        */\n                                    }\n                                    if (StartPointJson.external == null) {\n                                        if (StartPointHierarchy == EmployeeEnum)\n                                            StartPointTitle = findTitleByClassName(FinalDatascource2, ClassName);\n                                        else\n                                            StartPointTitle = findTitleByClassName(datascource2, ClassName);\n                                    }\n                                    if (StartPointId == null) {\n                                        if (StartPointHierarchy == EmployeeEnum)\n                                            StartPointId = findIdByClassName(FinalDatascource2, ClassName);\n                                        else\n                                            StartPointId = findIdByClassName(datascource2, ClassName);\n                                    }\n                                    if (StartPointName == null)\n                                        StartPointName = ClassName.replace('Class', '').trim()\n                                    StartPointName = StartPointName.replace('focused', '')\n                                    //  console.log(StartPointHierarchy)\n                                    //  console.log(EventTargetElement.parent().attr('data-source'))\n                                    //   console.log(destinationJson)\n                                    //   console.log('from ' + StartPointJson.className)\n                                    //    console.log('to ' + EventTargetElement.parent().attr('class'))\n                                    var child_list;\n                                   // console.log(datascource2)\n                                   // console.log(StartPointId)\n\n                                    if (StartPointHierarchy == EmployeeEnum)\n                                        child_list = findChildrenById(FinalDatascource2, StartPointId);\n                                    else\n                                        child_list = findChildrenById(datascource2, StartPointId);\n                                    for (var index in child_list) {\n                                        if (child_list[index].id == StartPointJson.id)\n                                            return\n                                    }\n                                    var StartPointParentId = StartPointJson.parentId\n                                    var HierarchyValue = parseInt(StartPointJson.hierarchyLevel)\n                                    var EmployeeRowId = parseInt(StartPointJson.EmployeeRowId)\n                                    var bufferNode: Node = {\n                                        'EmployeeRowId': null,\n                                        'hierarchyLevel': HierarchyValue,\n                                        'id': StartPointId, 'name': StartPointTitle,\n                                        'title': StartPointTitle, 'className': `${StartPointId} Class`,\n                                        'hierarchyId': StartPointHierarchyId\n                                    };\n                                    if (StartPointHierarchy == EmployeeEnum) {\n                                        bufferNode.EmployeeRowId = EmployeeRowId\n                                        bufferNode.className = `EMPLOYEE${EmployeeRowId} Class`\n                                    }\n                                    if (StartPointHierarchy == EmployeeEnum) {\n                                        var TargetedFinalOrgChartBuffer = FinalDatascource2\n                                        TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, destinationId)\n                                        if (!isEmptyOrNull(TargetedFinalOrgChartBuffer)) {\n                                            if (checkRepeatedChildren(TargetedFinalOrgChartBuffer, destinationClassName, bufferNode))//check repeated children\n                                                return\n                                        }\n                                    }\n                                    else {\n                                        var TargetedFinalOrgChartBuffer = datascource2\n                                        TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, destinationId)\n                                        if (checkRepeatedChildren(TargetedFinalOrgChartBuffer, destinationClassName, bufferNode))//check repeated children\n                                            return\n                                    }\n                                    if (StartPointHierarchy == EmployeeEnum) {\n\n                                        var FinalOrgChartBuffer = JSON.parse(JSON.stringify(FinalDatascource2))\n                                        var TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n                                        TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, StartPointParentId)\n                                        TargetedFinalOrgChartBuffer.children\n                                            = TargetedFinalOrgChartBuffer.children.filter(child => child.EmployeeRowId !== StartPointJson.EmployeeRowId);\n                                        for (var index in child_list)\n                                            TargetedFinalOrgChartBuffer.children.push(child_list[index])\n                                        FinalDatascource2 = FinalOrgChartBuffer\n                                        TargetedFinalOrgChartBuffer = FinalDatascource2\n                                        TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, destinationId)\n                                        if (!isEmptyOrNull(TargetedFinalOrgChartBuffer.children)) {\n                                            if (TargetedFinalOrgChartBuffer.children.length == 1 && isEmptyOrNull(TargetedFinalOrgChartBuffer.EmployeeRowId)) {\n                                                if (TargetedFinalOrgChartBuffer.children[0].title == TargetedFinalOrgChartBuffer.title)//go down\n                                                {\n                                                    if (!isEmptyOrNull(TargetedFinalOrgChartBuffer.children[0].EmployeeRowId)) {\n                                                        destinationId = TargetedFinalOrgChartBuffer.children[0].id\n                                                        DestinationNode = TargetedFinalOrgChartBuffer.children[0].className\n                                                        TargetedFinalOrgChartBuffer = TargetedFinalOrgChartBuffer.children[0]\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        var EncodingBuffer = EncodeString(`EMPLOYEE${parseInt(StartPointJson.EmployeeRowId)}`, 0x88, 0x99)\n                                        bufferNode.id = `${destinationId}${EncodingBuffer}`\n                                        addChildren(TargetedFinalOrgChartBuffer, DestinationNode, bufferNode)\n                                        removeEmptyChildren(FinalDatascource2)\n\n                                        //var orgChartElement = document.getElementById(\"orgChartContainer\")\n                                        //var orgDiv = orgChartElement.querySelector(\".orgchart\");\n                                        //Style = orgDiv.getAttribute('style')\n                                        //DataPanStart = orgDiv.getAttribute('data-pan-start')\n                                        //orgChartElement.innerHTML = ''\n\n                                        if (!isEmptyOrNull(FinalDatascource2))\n                                            GenerateSaveOrgChart()\n\n                                        //orgDiv = orgChartElement.querySelector(\".orgchart\");\n                                        //orgDiv.setAttribute('style', Style)\n                                        //orgDiv.setAttribute('data-pan-start', DataPanStart)\n\n                                    }\n                                    else {\n                                        var bufferId = EncodeString(StartPointId, 0x88, 0x99)\n                                        if (!isEmptyOrNull(destinationId))\n                                            bufferId = destinationId + bufferId\n                                        var bufferNode: Node = {\n                                            'EmployeeRowId': null,\n                                            'hierarchyId': StartPointHierarchyId,\n                                            'hierarchyLevel': HierarchyValue,\n                                            'id': bufferId, 'name': StartPointTitle,\n                                            'title': StartPointTitle, 'className': `${StartPointId} Class`\n                                        };\n                                        var TargetedFinalOrgChartBuffer = datascource2\n                                        if (isEmptyOrNull(StartPointJson.external)) {\n                                            TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, StartPointParentId)\n                                            if (!isEmptyOrNull(TargetedFinalOrgChartBuffer.children)) {\n                                                TargetedFinalOrgChartBuffer.children\n                                                    = TargetedFinalOrgChartBuffer.children.filter(child => child.id !== StartPointJson.id);\n                                                for (var index in child_list)\n                                                    TargetedFinalOrgChartBuffer.children.push(child_list[index])\n                                            }\n                                        }\n\n                                        TargetedFinalOrgChartBuffer = datascource2\n\n                                        if (!isEmptyOrNull(HierarchyLevelToSearch))\n                                            TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, destinationId)\n                                        addChildren(TargetedFinalOrgChartBuffer, DestinationNode, bufferNode)\n                                        removeEmptyChildren(datascource2)\n                                       // console.log(bufferNode.name)\n                                       // console.log(destinationId)\n                                        addListItem(destinationId, bufferId, bufferNode.name)\n                                        if (!isEmptyOrNull(datascource2))\n                                            GenerateSaveOrgStructure()\n                                    }\n                                    setCallbacks()\n                                    event.dataTransfer.dropEffect = 'none';\n                                }\n                            })\n                            ElementArray[j].addEventListener(\"dragstart\", function (event) {\n                                event.stopImmediatePropagation();\n                                var text = event.target.getAttribute('data-source')\n                                // console.log(text)\n                                // console.log(jsonObject.relationship)\n                                event.dataTransfer.setData('text/plain', text);\n                                event.dataTransfer.dropEffect = 'move';  // Set the drop effect\n                            })\n                        }\n                        observer.disconnect(); // Stop observing after finding the nodes\n                    }\n                    var AvatarNodes = document.getElementsByClassName(\"avatar\")\n                    for (let j = 0; j < AvatarNodes.length; j++) {\n                        var AvatarNode = AvatarNodes[j] as HTMLElement\n                        AvatarNode.draggable = false\n                    }\n                    var panel = document.getElementsByClassName(\"side-div\");\n                    for (let i = 0; i < panel.length; i++) {\n                        panel[i].addEventListener(\"drop\", function (event) {\n                            event.stopImmediatePropagation();\n                            var data = event.dataTransfer.getData('text/plain');\n                            var StartPointJsonObject = JSON.parse(data)\n                            var hierarchy = StartPointJsonObject.hierarchyLevel\n                            if (StartPointJsonObject.external)\n                                return\n                            var destinationHierarchy = StartPointJsonObject.hierarchyLevel\n                            var id = StartPointJsonObject.id\n                            var StartPointHierarchyId = StartPointJsonObject.hierarchyId\n                            var title = StartPointJsonObject.title\n                            var name = StartPointJsonObject.name\n                            var ClassName = StartPointJsonObject.className\n                            var StartPointParentId = StartPointJsonObject.parentId\n                            if (ClassName == null)\n                                ClassName = StartPointJsonObject.id\n                            var child_list = findChildrenById(datascource2, id)\n                            if (destinationHierarchy != EmployeeEnum) {\n                                // removeListItem(id)\n                                var FinalOrgChartBuffer = JSON.parse(JSON.stringify(datascource2))\n                                var TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n                                TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, StartPointParentId)\n                                deleteNodeById(TargetedFinalOrgChartBuffer, id)\n                                TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n                                var targetedIdList: any[] = DecomposeStringToList(StartPointParentId, 0x88, 0x99)\n                                var targetedClass = `${targetedIdList[targetedIdList.length - 1]}`\n                                var targetedId = `${targetedClass} Class`\n                                TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, StartPointParentId)\n                                for (var index in child_list) {\n                                    var bufferIdSuffix = EncodeString(child_list[index].className, 0x88, 0x99)\n                                    var bufferId = `${StartPointParentId}${bufferIdSuffix}`\n                                    var bufferNode: Node = {\n                                        'hierarchyId': StartPointHierarchyId,\n                                        'EmployeeRowId': null,\n                                        'hierarchyLevel': child_list[index].hierarchyLevel,\n                                        'id': bufferId, 'name': child_list[index].name,\n                                        'title': child_list[index].title, 'className': child_list[index].className\n                                    };\n                                    addChildren(TargetedFinalOrgChartBuffer, targetedId, bufferNode)\n                                }\n                                datascource2 = FinalOrgChartBuffer\n                                removeEmptyChildren(datascource2)\n                                datascource = JSON.parse(JSON.stringify(datascource2))\n                                GenerateSaveOrgStructure()\n                                var key = getEnumNameFromValue(hierarchy)\n                                id = id.replace(key, \"\")\n\n                            }\n\n                        })\n                        panel[i].addEventListener(\"dragover\", function (event) {\n                            event.stopImmediatePropagation();\n                            event.preventDefault()\n                        })\n                    }\n\n                    var CheckBoxes = document.getElementsByClassName(\"CheckBox\");\n                    for (let i = 0; i < CheckBoxes.length; i++) {\n                        CheckBoxes[i].addEventListener('change', function handleCheckboxChange(this) {\n                            event.stopImmediatePropagation();\n                            const isChecked = this.checked;\n                            var targetJson = JSON.parse(this.parentElement.parentElement.getAttribute('data-source'))\n                            var targetEmployeeRowId = targetJson.EmployeeRowId\n                            for (let ListCounter = 0; ListCounter < ListOfEmployeeData.length; ListCounter++) {\n                                if (ListOfEmployeeData[ListCounter].id == targetEmployeeRowId) {\n                                    break\n                                }\n                            }\n                            var ElementToSetEmployee = targetJson.id\n                            var FinalOrgChartBuffer = JSON.parse(JSON.stringify(FinalDatascource2))\n                            var TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n                            TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, ElementToSetEmployee)\n                            TargetedFinalOrgChartBuffer.Rights[this.id] = isChecked\n                            FinalDatascource2 = FinalOrgChartBuffer\n                            var ListOfRights: NodeRights[] = extractRights(FinalOrgChartBuffer)\n\n                            EmployeeRightsService.ClearOldAdminRightRecord({\n                            }, response => {\n                                for (let i = 0; i < ListOfRights.length; i++) {\n                                    if (ListOfRights[i].nodeHierarchy != EmployeeEnum && !isEmptyOrNull(ListOfRights[i].EmployeeRowId)) {\n                                        EmployeeRightsService.Create({\n                                            Entity: {\n                                                \"EmployeeRowId\": ListOfRights[i].EmployeeRowId,\n                                                \"NodeId\": ListOfRights[i].id,\n                                                \"Appraisal\": ListOfRights[i].Rights.Appraisal,\n                                                \"LeaveApproval\": ListOfRights[i].Rights.LeaveApproval,\n                                                \"OtApproval\": ListOfRights[i].Rights.OtApproval,\n                                                \"Training\": ListOfRights[i].Rights.Training,\n                                                \"MoneyClaiming\": ListOfRights[i].Rights.MoneyClaiming,\n                                            }\n                                        })\n                                    }\n\n                                }\n\n\n\n                            })\n                        })\n                    }\n                    let SelectEmployee = $(\".SelectEmployee\")\n                    SelectEmployee.on('click', function (event) {\n                        event.stopImmediatePropagation();\n                        let target = $(this)\n                        let targetJson = JSON.parse(target.parent().attr('data-source'))\n                        var targetId = targetJson.id\n                        var ElementToSet = target.parent().attr('class')\n                        ElementToSetEmployee = targetId\n                        var ElementToSetEmployeeClassName = ElementToSet.replace('node', '').trim()\n                        var TargetElementSpan = document.getElementById('TargetElementSpan')\n                        TargetElementSpan.textContent = findTitleByClassName(datascource2, ElementToSetEmployeeClassName)\n                        findTitleByClassName(datascource2, ElementToSetEmployeeClassName)\n                        EmployeeChoosingDialog.show()\n                    })\n                    var filterCheckBox = document.getElementsByClassName(\"filterCheckBox\");\n                    for (let i = 0; i < filterCheckBox.length; i++) {\n                        filterCheckBox[i].addEventListener('change', function handleCheckboxChange(this) {\n                            event.stopImmediatePropagation();\n                            GenerateOrgStructure()\n                        })\n                    }\n                    var OrgChartFilterCheckBox = document.getElementsByClassName(\"OrgChartFilterCheckBox\");\n                    for (let i = 0; i < OrgChartFilterCheckBox.length; i++) {\n                        OrgChartFilterCheckBox[i].addEventListener('change', function handleCheckboxChange(this) {\n                            event.stopImmediatePropagation();\n                            GenerateOrgChart()\n                            console.log('haha')\n                        })\n                    }\n\n\n                    $('.clickable-icon').on('click', function (e) {\n                        e.stopImmediatePropagation();\n                        var target = $(e.target)\n                        var targetData = null\n                        while (isEmptyOrNull(targetData)) {\n                            targetData = target.attr('data-source')\n                            target = target.parent()\n                        }\n                        var targetJson = JSON.parse(targetData)\n                        var targetId = targetJson.id\n                        var targetClassName = targetJson.className\n                        var FinalOrgChartBuffer = JSON.parse(JSON.stringify(datascource2))\n                        var TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n                        TargetedFinalOrgChartBuffer = SearchById(TargetedFinalOrgChartBuffer, targetId)\n                        SetEmployeeByClassName(TargetedFinalOrgChartBuffer, targetClassName, null)\n                        datascource2 = FinalOrgChartBuffer\n                        GenerateSaveOrgStructure()\n                    })\n                    $('#generateOrgChartButton').on('click', function (e) {\n                        e.stopImmediatePropagation();\n\n                        if (!isEmptyOrNull(FinalDatascource2)) {\n                            confirmDialog(\"Do you want to generate Organization Chart? The original chart will be override.\", () => {\n                                GenerateOrgChartData()\n                                setCallbacks()\n                            });\n                        }\n                        else {\n                            GenerateOrgChartData()\n                            setCallbacks()\n                        }\n                    })\n                    $('#togglePanel').on('click', function (e) {\n                      //  console.log('haha')\n                        e.stopImmediatePropagation();\n                        function isDivHidden(div) {\n                            // Get the computed style of the div\n                            const style = window.getComputedStyle(div);\n                            return style.display === 'none';\n                        }\n                        const myDiv = document.getElementById('ElementsTab');\n                        if (isDivHidden(myDiv)) {\n                            myDiv.style.display = 'block'\n                            this.textContent = 'Hide Tab'\n                        } else {\n                            myDiv.style.display = 'none'\n                            this.textContent = 'Display Tab'\n                        }\n                    })\n                    $('#toggleSidePanel').on('click', function (e) {\n                      //  console.log('haha')\n                        function isDivHidden(div) {\n                            // Get the computed style of the div\n                            const style = window.getComputedStyle(div);\n                            // Check if display is 'none'\n                            return style.display === 'none';\n                        }\n\n                        // Usage example\n                        const myDiv = document.getElementById('left-panel');\n\n                        if (isDivHidden(myDiv)) {\n                            myDiv.style.display = 'block'\n                            this.textContent = 'Hide Tab'\n                        } else {\n                            myDiv.style.display = 'none'\n                            this.textContent = 'Display Tab'\n                        }\n                         console.log('haha')\n                        e.stopImmediatePropagation();\n\n                    })\n                    $('#toggleOrgChartSidePanel').on('click', function (e) {\n                        function isDivHidden(div) {\n                            // Get the computed style of the div\n                            const style = window.getComputedStyle(div);\n                            // Check if display is 'none'\n                            return style.display === 'none';\n                        }\n                        console.log('haha')\n                        // Usage example\n                        const myDiv = document.getElementById('chart-left-panel');\n\n                        if (isDivHidden(myDiv)) {\n                            myDiv.style.display = 'block'\n                            this.textContent = 'Hide Tab'\n                        } else {\n                            myDiv.style.display = 'none'\n                            this.textContent = 'Display Tab'\n                        }\n                        e.stopImmediatePropagation();\n\n                    })\n\n\n                    $('.orgchart').addClass('noncollapsable'); // deactivate\n                    var orgChartElement = document.getElementById(\"orgChartContainer\")\n\n                    if (!isEmptyOrNull(orgChartElement) && Authorization.userDefinition.Permissions[PermissionKeys.HumanResources]) {\n                        var orgDiv = orgChartElement.querySelector(\".orgchart\");\n                        if (!isEmptyOrNull(orgDiv)) {\n                            var nodes = orgDiv.getElementsByClassName('node')\n                            for (let i = 0; i < nodes.length; i++) {\n\n                                var jsonObject = JSON.parse(nodes[i].getAttribute('data-source'));\n                                if (jsonObject.hierarchyLevel != EmployeeEnum)\n                                    nodes[i].draggable = false\n                                if (!isEmptyOrNull(jsonObject.EmployeeRowId)) {\n                                    nodes[i].addEventListener(\"click\", function (event) {\n                                        event.stopImmediatePropagation();\n                                        var target = $(event.target)\n                                        let displayPdf = false\n\n                                        if (target.hasClass('CheckBox'))\n                                            return\n                                        else if (target.hasClass('dot'))//display pdf\n                                            displayPdf = true\n                                        var targetData = null\n                                        while (isEmptyOrNull(targetData)) {\n                                            targetData = target.attr('data-source')\n                                            target = target.parent()\n                                        }\n                                        var targetJson = JSON.parse(targetData);\n                                        var targetEmployeeRowId = targetJson.EmployeeRowId\n                                        if (displayPdf == true) {\n                                            //display pdf\n                                            //console.log(ListOfEmployeeData)\n                                            const employeeRow = ListOfEmployeeData.find(employee => employee.id === targetEmployeeRowId);\n                                            //console.log(employeeRow)\n                                            var pdf = document.getElementById('pdf')\n                                          //  console.log(pdf)\n                                          //  console.log($(pdf))\n                                            pdfSources = []\n                                            pdfOriginalName = []\n                                            try {\n                                                const result = JSON.parse(employeeRow.JobDescPath);\n                                               // console.log(result); // This line will not be executed if jsonString is invalid\n                                                for (let i = 0; i < result.length; i++) {\n                                                    pdfSources.push(`/upload/${result[i].Filename}`)\n                                                    pdfOriginalName.push(`${result[i].OriginalName}`)\n                                                }\n                                            } catch (error) {\n                                                pdf.src = `/upload/${employeeRow.JobDescPath}`\n                                            }\n                                            updatePdf(); // Load the first PDF\n                                            currentPdfIndex = 0;\n                                            pdfDialog.show()\n                                            //pdf.src = `/upload/EmployeeProfile/00000/00000034_ug53pfwxuh2sk.pdf`;\n                                            //img.src = `/upload/${imgPath}`;\n                                            return\n                                        }\n\n                                        else {//display employee profile\n                                            var dlg = new EmployeeBasicDataDialog(targetEmployeeRowId)\n                                            dlg.loadByIdAndOpenDialog(targetEmployeeRowId)\n\n                                        }\n                                    })\n                                }\n                            }\n                        }\n                    }\n\n                }\n            }\n        });\n        observer.observe(document.body, { childList: true, subtree: true });\n    }\n    function extractEmployeeInOrgChart(node) {\n        let results = [];\n        if (node.EmployeeRowId !== undefined && !isEmptyOrNull(node.EmployeeRowId))\n            results.push(parseInt(node.EmployeeRowId))\n        if (node.children && Array.isArray(node.children)) {\n            for (let child of node.children)\n                results = results.concat(extractEmployeeInOrgChart(child));\n        }\n        return results;\n    }\n    function ExtendTree(children) {\n        function stripClassSuffix(str: string): string {\n            return str.endsWith(\"Class\") ? str.slice(0, -5) : str;\n        }\n\n        for (let child of children) {\n            // Check if the child has children and store them\n            const nestedChildren = child.children || [];\n            var idBuffer = `${child.id}`;\n\n            // Condition to modify child\n            if (child.EmployeeRowId != null && child.hierarchyLevel !== EmployeeEnum) {\n                child.children = [];\n                // Encode the ID\n                idBuffer = `${child.id}${EncodeString(`EMPLOYEE${child.EmployeeRowId}`, 0x88, 0x99)}`;\n                var bufferNode = {\n                    EmployeeRowId: child.EmployeeRowId,\n                    hierarchyLevel: child.hierarchyLevel,\n                    name: child.name,\n                    id: idBuffer,\n                    title: child.title,\n                    className: `EMPLOYEE${child.EmployeeRowId} Class`,\n                    children: nestedChildren.length ? nestedChildren : undefined // Only add children if they exist\n                }\n                // Push modified child information into the children array\n                child.children.push(bufferNode);\n                // Clear EmployeeRowId\n                child.EmployeeRowId = null;\n            }\n            if (nestedChildren.length > 0) {\n                for (let nestedChild of nestedChildren) {\n                    var strip = stripClassSuffix(nestedChild.className)\n                    var newId = `${idBuffer}${EncodeString(strip, 0x88, 0x99)}`;\n                    nestedChild.id = newId\n                }\n                ExtendTree(nestedChildren);\n            }\n        }\n        return children;\n    }\n    function SearchById(node, id) {\n        // Check if the current node has Rights and EmployeeRowId\n        if (node.id == id)\n            return node\n\n        if (node.children) {\n            for (const child of node.children) {\n                var result = SearchById(child, id);\n                if (result)\n                    return result\n            }\n        }\n        return null;\n    }\n    function GenerateOrgChartData() {\n        interface ExtractedData {\n            id: string | null;\n            EmployeeRowId: number | null;\n            Rights: EmployeeAdminRights | null;\n        }\n        // Recursive function to traverse the employee structure and collect data\n        function extractRightsAndEmployeeRowId(node): ExtractedData[] {\n            let result: ExtractedData[] = [];\n            // Check if the current node has Rights and EmployeeRowId\n            if (node.Rights && node.EmployeeRowId) {\n                result.push({\n                    id: node.id,\n                    EmployeeRowId: node.EmployeeRowId,\n                    Rights: node.Rights\n                });\n            }\n            // Recursively process children if they exist\n            if (node.children) {\n                for (const child of node.children)\n                    result = result.concat(extractRightsAndEmployeeRowId(child));\n            }\n            return result;\n        }\n\n\n        function fillInRights(node) {\n            if (node.hierarchy == CardType.DIRECTOR) {\n                var Right = {\n                    'Appraisal': true,\n                    'LeaveApproval': true,\n                    'OtApproval': true,\n                    'MoneyClaiming': true,\n                    'Training': true\n                }\n                node.Rights = Right\n            }\n            else if (isEmptyOrNull(node.Rights) && !isEmptyOrNull(node.EmployeeRowId)) {\n                var Right = {\n                    'Appraisal': false,\n                    'LeaveApproval': false,\n                    'OtApproval': false,\n                    'MoneyClaiming': false,\n                    'Training': false\n                }\n                node.Rights = Right\n            }\n            if (node.children) {\n                for (const child of node.children)\n                    fillInRights(child);\n            }\n        }\n\n        if (!isEmptyOrNull(FinalDatascource2))\n            var ListOfRights: any[] = extractRightsAndEmployeeRowId(FinalDatascource2)\n        let EmployeeInOrgChart: any[] = extractEmployeeInOrgChart(datascource2)\n        //console.log(JSON.parse(JSON.stringify(datascource2)))\n        var GenerativeOrgChartBuffer = JSON.parse(JSON.stringify(datascource2))\n        var FinalOrgChartBuffer\n        /*\n        for (let i = 0; i < ListOfEmployeeData.length; i++) {\n             FinalOrgChartBuffer = JSON.parse(JSON.stringify(datascource2))\n            var TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n            for (const key of Object.keys(CardType)) {\n                if (isNaN(Number(key))) {\n                var id = ListOfEmployeeData[i][`${capitalizeFirstLetter(key)}Id`];\n                if (isEmptyOrNull(id))\n                    continue\n                var TargetedClassName = `${key}${id} Class`\n                    TargetedFinalOrgChartBuffer = findByClassName(TargetedFinalOrgChartBuffer, TargetedClassName)\n                    if (TargetedFinalOrgChartBuffer == null) {\n                        var correctDepartment = GetLookupValueFromId(capitalizeFirstLetter(getEnumNameFromValue(CardType.DEPARTMENT)), ListOfEmployeeData[i][capitalizeFirstLetter(getEnumNameFromValue(CardType.DEPARTMENT)) + 'Id'])\n                        var correctDivision = GetLookupValueFromId(capitalizeFirstLetter(getEnumNameFromValue(CardType.DIVISION)), ListOfEmployeeData[i][capitalizeFirstLetter(getEnumNameFromValue(CardType.DIVISION)) + 'Id'])\n                        var correctSection = GetLookupValueFromId(capitalizeFirstLetter(getEnumNameFromValue(CardType.SECTION)), ListOfEmployeeData[i][capitalizeFirstLetter(getEnumNameFromValue(CardType.SECTION)) + 'Id'])\n                        var string = `${ListOfEmployeeData[i][\"EmployeeName\"]} should be in `;\n                        if (!isEmptyOrNull(correctSection))\n                            string += `${correctSection} ${capitalizeFirstLetter(getEnumNameFromValue(CardType.SECTION))}, under `\n                        if (!isEmptyOrNull(correctDepartment))\n                            string += `${correctDepartment} ${capitalizeFirstLetter(getEnumNameFromValue(CardType.DEPARTMENT))}, under `\n                        if (!isEmptyOrNull(correctDivision))\n                            string += `${correctDivision} ${capitalizeFirstLetter(getEnumNameFromValue(CardType.DIVISION))}`\n                        alertDialog(string)\n                    break\n                    }\n            }\n            }\n        }\n        */\n        FinalOrgChartBuffer = JSON.parse(JSON.stringify(GenerativeOrgChartBuffer))\n\n\n        //fill in employee\n        //START\n\n        for (let i = 0; i < ListOfEmployeeData.length; i++) {\n            //if (EmployeeInOrgChart.includes(ListOfEmployeeData[i].id) || EmployeeFilter.includes(ListOfEmployeeData[i].id)) \n            //    continue\n            if (EmployeeInOrgChart.includes(ListOfEmployeeData[i].id))\n                continue\n\n            var TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n            var str\n            for (var LookupIndex in OccupationTable.items) {\n                if (OccupationTable.items[LookupIndex].Id == ListOfEmployeeData[i][\"OccupationId\"]) {\n                    str = OccupationTable.items[LookupIndex].Name\n                    break\n                }\n            }\n\n            var id = EncodeString(`EMPLOYEE${ListOfEmployeeData[i][\"id\"]}`, 0x88, 0x99)\n            var bufferNode: Node = {\n                'hierarchyId': ListOfEmployeeData[i][\"id\"],\n                'EmployeeRowId': ListOfEmployeeData[i][\"id\"],\n                'hierarchyLevel': EmployeeEnum,\n                'id': id, 'name': str,\n                'title': str, 'className': `EMPLOYEE${ListOfEmployeeData[i][\"id\"]} Class`\n            };\n            var PrevDestination;\n            let counter = 0;\n            let ignore = 0;\n            for (const key of Object.keys(CardType)) {\n                if (isNaN(Number(key))) {\n                    if (isEmptyOrNull(ListOfEmployeeData[i][`${capitalizeFirstLetter(key)}Id`]))\n                        continue\n                    var DestinationNode = `${key}${ListOfEmployeeData[i][capitalizeFirstLetter(key) + 'Id']} Class`\n                    var Holder = TargetedFinalOrgChartBuffer\n                    TargetedFinalOrgChartBuffer = findByClassName(TargetedFinalOrgChartBuffer, DestinationNode)\n                    if (isEmptyOrNull(TargetedFinalOrgChartBuffer)) {\n                        if (counter > 0) {\n                            TargetedFinalOrgChartBuffer = Holder\n                            DestinationNode = PrevDestination\n                        }\n                        else {\n                            ignore = 1;\n                        }\n                        break\n                    }\n                    PrevDestination = DestinationNode\n                    counter+=1\n                }\n            }\n            /*\n            if (TargetedFinalOrgChartBuffer.children.length == 1) {\n                bufferNode.id = TargetedFinalOrgChartBuffer.children[0].id + bufferNode.id\n                ForceChildren(TargetedFinalOrgChartBuffer.children[0], bufferNode)\n            }\n            else {\n            */\n            if (!isEmptyOrNull(TargetedFinalOrgChartBuffer)&&ignore == 0) {\n                if (!EmployeeInOrgChart.includes(ListOfEmployeeData[i].id)) {\n                    bufferNode.id = TargetedFinalOrgChartBuffer.id + bufferNode.id\n                    addChildren(TargetedFinalOrgChartBuffer, DestinationNode, bufferNode)\n                }\n            }\n\n            // }\n\n        }\n        //END\n\n\n\n\n\n\n        var obj = FinalOrgChartBuffer\n        var edited = ExtendTree(obj.children)\n        obj.children = []\n        obj.children = edited\n\n\n\n\n\n\n        //THIS SECTION WILL fill in rights\n        //START\n        if (!isEmptyOrNull(ListOfRights)) {\n            for (let i = 0; i < ListOfRights.length; i++) {\n                var TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n                var buffer = SearchById(TargetedFinalOrgChartBuffer, ListOfRights[i].id)\n                if (!isEmptyOrNull(buffer))\n                    buffer.Rights = ListOfRights[i].Rights\n            }\n        }\n        TargetedFinalOrgChartBuffer = FinalOrgChartBuffer\n        fillInRights(TargetedFinalOrgChartBuffer)\n        // END\n\n        FinalDatascource2 = FinalOrgChartBuffer\n        //    var orgChartElement = document.getElementById(\"orgChartContainer\")\n        //    orgChartElement.innerHTML = ''\n        //   for (let i = 0; i < orgChartElement.children.length; i++)\n        //       orgChartElement.children[i].remove()\n        GenerateSaveOrgChart()\n\n    }\n    function GenerateCard(ElementId, CardText, Type) {\n        var EmployeeCol_2 = document.createElement('div')\n        EmployeeCol_2.className = \"flex-child\"\n        var EmployeeContainer = document.createElement('td')\n        var Employee = document.createElement('div')\n        EmployeeContainer.appendChild(Employee)\n        var CardClass = CardType[Type];\n        Employee.className = \"flex-container \" + CardClass;\n        Employee.style.border = '1px solid #ccc';\n        Employee.style.padding = '10px';\n        Employee.draggable = true;\n\n        var DataSource = `{ \"EmployeeRowId\":\"null\",\"hierarchyLevel\":\"${Type}\",\"hierarchyId\":\"${ElementId}\" ,\"id\":\"${CardClass + ElementId}\",\n        \"type\":\"${Type}\",\"title\":\"${CardText}\",\"external\": \"true\",\"ElementId\": \"\", \"className\":\"${CardClass + ElementId} Class\"}`;\n        Employee.setAttribute('data-source', DataSource);\n        Employee.id = CardClass + ElementId.toString();\n        var TitleContent = document.createElement('div');\n        TitleContent.textContent = CardText;\n        TitleContent.className = \"CardTitle\"\n        EmployeeCol_2.appendChild(TitleContent)\n        Employee.appendChild(EmployeeCol_2)\n        Employee.addEventListener(\"dragstart\", function (event) {\n            var dragEvent = event.target as Element\n            var StringToTransfer = dragEvent.getAttribute('data-source')\n            event.dataTransfer.setData('text/plain', StringToTransfer);\n            event.dataTransfer.dropEffect = 'move';  // Set the drop effect\n        })\n        Employee.addEventListener(\"dragend\", function (event) {\n        })\n        return EmployeeContainer\n    }\n    function SetEmployeeByClassName(root, TargetClassName, EmployeeRowId) {\n        if (!TargetClassName.endsWith(\"Class\"))\n            TargetClassName = TargetClassName + \" Class\"\n        // If the current node's name matches the target name, add the new node\n        if (root.className === TargetClassName) {\n            if (isEmptyOrNull(EmployeeRowId))\n                root.EmployeeRowId = null\n            else\n                root.EmployeeRowId = parseInt(EmployeeRowId)\n            return true; // Node found and new node added\n        }\n        if (root.children)\n            for (const child of root.children)\n                if (SetEmployeeByClassName(child, TargetClassName, EmployeeRowId))\n                    return false; // Stop recursion after adding the node\n        return false; // Target node not found\n    }\n    function findByClassName(data, className) {\n        // console.log(data)\n\n        if (!className.endsWith(\"Class\"))\n            className = className + \" Class\"\n        let result = null; // Variable to hold the result\n        if (isEmptyOrNull(data))\n            return result\n\n        const queue = [data]; // Initialize a queue with the root object\n\n        while (queue.length > 0) {\n            const current = queue.shift(); // Get the first element in the queue\n\n            // Check if the current object has the className we're looking for\n            if (current.className === className) {\n                return current; // Return the found object\n            }\n\n            // Add children to the queue for later processing\n            if (current.children) {\n                queue.push(...current.children);\n            }\n        }\n\n        return result; // Return null if no match is found\n        /*\n    function search(obj) {\n        console.log(obj)\n        // Check if the current object has the className we're looking for\n        if (\"className\" in obj) {\n            if (obj.className === className) {\n                result = obj; // Store the result\n                return; // Exit the function once a match is found\n            }\n        }\n      \n        // Recursively search through children if the result is not found\n        if (obj.children) {\n            for (const child of obj.children) {\n                search(child);\n                if (result)  // If result is found, no need to continue searching\n                    return;\n            }\n        }\n    }\n    search(data);\n    return result;\n    */\n    }\n    function traceParents(item, allData) {\n        let parents = [];\n        let parent = allData.find(obj => obj.id == item);\n        while (parent) {\n            parents.push(parent);\n            parent = allData.find(obj => obj.id == parent.parentId);\n        }\n        return parents;\n    }\n    function GenerateOrgStructure() {\n        SplitOrganisationStructureService.List({\n        }, response => {\n            if (SplitOrgStructList.length == 0) {\n                for (let i = 0; i < response.Entities.length; i++) {\n                    var EmployeeRowId = response.Entities[i].EmployeeRowId\n                    if (EmployeeFilter.indexOf(response.Entities[i].EmployeeRowId) != -1) {\n                        EmployeeRowId = null\n                        SplitOrganisationStructureService.Update({\n                            EntityId: response.Entities[i].Id,\n                            Entity:\n                            {\n                                \"EmployeeRowId\": null\n                            }\n                        });\n                    }\n                    SplitOrgStructList.push({\n                        id: response.Entities[i].NodeId,\n                        EmployeeRowId: EmployeeRowId,\n                        name: response.Entities[i].Name,\n                        title: response.Entities[i].Title,\n                        className: response.Entities[i].ClassName,\n                        hierarchyLevel: response.Entities[i].HierarchyLevel,\n                        parentId: response.Entities[i].ParentId,\n                        hierarchyId: response.Entities[i].hierarchyId,\n                        childrenIndex: response.Entities[i].childrenIndex\n                    })\n                }\n            }\n            const checkedBoxes = Array.from(document.querySelectorAll('.filterCheckBox:checked'));\n            const checkedIds = checkedBoxes.map(box => box.getAttribute('wantedId'));\n            var Json, filterFlag = 0;\n            if (checkedIds.length > 0) {\n                filterFlag = 1;\n                let OrgStructFinalResult = [];\n                checkedIds.forEach(item => {\n                    OrgStructFinalResult.push(item);\n                    const parents = traceParents(item, SplitOrgStructList);\n                    OrgStructFinalResult.push(...parents);\n                });\n                OrgStructFinalResult = Array.from(new Set(OrgStructFinalResult.map(obj => obj.id)))\n                    .map(id => SplitOrgStructList.find(obj => obj.id === id));\n                Json = GenerateJson(OrgStructFinalResult)\n            }\n            else\n                Json = GenerateJson(SplitOrgStructList)\n\n            if (isEmptyOrNull(Json)) {\n                if (isEmptyOrNull(spareOrgStructJson))\n                    Json = GenerateDefaultOrgStruct()\n                else\n                    Json = JSON.parse(spareOrgStructJson)\n            }\n\n\n            datascource2 = JSON.parse(JSON.stringify(Json))\n            var orgChartElement = document.getElementById(\"chart-container\")\n            var panel = orgChartElement.querySelector(\"#left-panel\");\n            if (isEmptyOrNull(panel)) {\n                var LeftPanel = document.createElement(\"div\")\n                LeftPanel.id = \"left-panel\"\n                LeftPanel.className = \"left-panel-class\"\n                orgChartElement.append(LeftPanel)\n                var BulletList = GenerateUl(Json, ChartType.OrgStruct)\n                $('#left-panel').append(BulletList)\n            }\n\n            GenerateStructure(Json, 'chart-container', filterFlag);\n\n            if (Authorization.userDefinition.Permissions[PermissionKeys.HumanResources]) {\n                console.log('haha')\n                var generateOrgChartButton = orgChartElement.querySelector(\"#chart-container .buttonGroup\");\n                if (isEmptyOrNull(generateOrgChartButton)) {\n                    console.log('haha')\n\n                    generateOrgChartButton = document.createElement('div')\n                    generateOrgChartButton.className = 'buttonGroup'\n                    generateOrgChartButton.innerHTML =\n                        `\n            <button id=\"generateOrgChartButton\" class=\"btn btn-light btn-rounded\" style=\"top: 50px; right: 10px; position: absolute; background-color: rgb(197, 216, 240);\">Generate Organisation Chart</button>\n            <button id=\"togglePanel\" class=\"btn btn-light btn-rounded\" style=\"bottom: 10px; right: 10px; position: absolute; background-color: rgb(197, 216, 240);\">Hide Tab</button>\n            <button id=\"toggleSidePanel\" class=\"btn btn-light btn-rounded\" style=\"bottom: 10px; left: 10px; position: absolute; background-color: rgb(197, 216, 240);\">Hide Filter Tab</button>\n            `\n                    orgChartElement.appendChild(generateOrgChartButton)\n                }\n            }\n            setCallbacks()\n\n        })\n\n\n    }\n    function GenerateSaveOrgStructure() {\n        SplitOrganisationStructureService.DeleteAll({\n        }, response => {\n            datascource = JSON.parse(JSON.stringify(datascource2))\n            let StructArray: NodeRow[] = splitIntoNodes(datascource2)\n            for (let i = 0; i < StructArray.length; i++) {\n                SplitOrganisationStructureService.Create({\n                    Entity:\n                    {\n                        \"ParentId\": StructArray[i].parentId,\n                        \"NodeId\": StructArray[i].id,\n                        \"Name\": StructArray[i].name,\n                        \"Title\": StructArray[i].title,\n                        \"ClassName\": StructArray[i].className,\n                        \"HierarchyLevel\": StructArray[i].hierarchyLevel,\n                        \"EmployeeRowId\": StructArray[i].EmployeeRowId,\n                        \"hierarchyId\": StructArray[i].hierarchyId,\n                        \"childrenIndex\": StructArray[i].childrenIndex\n                    },\n                });\n            }\n            SplitOrgStructList = StructArray\n            const checkedBoxes = Array.from(document.querySelectorAll('.filterCheckBox:checked'));\n            const checkedIds = checkedBoxes.map(box => box.getAttribute('wantedId'));\n            var Json, filterFlag = 0;\n            if (checkedIds.length > 0) {\n                filterFlag = 1\n                let OrgStructFinalResult = [];\n                checkedIds.forEach(item => {\n                    OrgStructFinalResult.push(item);\n                    const parents = traceParents(item, SplitOrgStructList);\n                    OrgStructFinalResult.push(...parents);\n                });\n                OrgStructFinalResult = Array.from(new Set(OrgStructFinalResult.map(obj => obj.id)))\n                    .map(id => SplitOrgStructList.find(obj => obj.id === id));\n                Json = GenerateJson(OrgStructFinalResult)\n            }\n            else\n                Json = GenerateJson(SplitOrgStructList)\n            var BulletList = GenerateUl(Json, ChartType.OrgStruct)\n            $('#left-panel').html('');\n            $('#left-panel').append(BulletList);\n            GenerateStructure(Json, 'chart-container', filterFlag)\n            setCallbacks()\n        })\n\n    }\n    function GenerateDefaultOrgStruct() {\n        var title = getEnumNameFromValue(CardType.DIRECTOR)\n        var name = title\n        var id = EncodeString(title, 0x88, 0x99)\n        var bufferNode: Node = {\n            'hierarchyId': CardType.DIRECTOR,\n            'EmployeeRowId': null,\n            'hierarchyLevel': CardType.DIRECTOR,\n            'id': id, 'name': name,\n            'title': title, 'className': title + \" Class\"\n        };\n        return bufferNode\n    }\n    function GenerateStructure(InputJson, containerId, filter) {\n        var orgChartElement = document.getElementById(containerId)\n        if (orgChartElement) {\n            var orgDiv = orgChartElement.querySelector(\".orgchart\");\n            if (orgDiv) {\n                Style = orgDiv.getAttribute('style')\n                DataPanStart = orgDiv.getAttribute('data-pan-start')\n                orgDiv.remove()\n            }\n        }\n\n        let orgchart = new OrgChart({\n            'chartContainer': `#${containerId}`,\n            'data': InputJson,\n            'nodeContent': 'title',\n            'nodeId': 'thisOrgChart',\n            'zoom': true,\n            'pan': true,\n            'createNode': function (node, data) {\n                let image = \"\"\n                if (node.hierarchyLevel != EmployeeEnum)\n                    node.draggable = false\n                let $jqueryObject = $(node);\n\n                if (isEmptyOrNull(data.EmployeeRowId)) { // no employee\n                    if (Authorization.userDefinition.Permissions[PermissionKeys.HumanResources]) {\n                        image = `<button type=\"button\"  class=\"btn btn-light btn-rounded SelectEmployee\" data-mdb-ripple-color=\"#ffffff\" style=\"background-color:#e4dbd8\"> <span style=\"display:block;\">Select Employee</span> </button>`\n                        $jqueryObject.append(image)\n                    }\n                }\n                else {\n                    var employeeRow = ListOfEmployeeData.find(employee => employee.id === data.EmployeeRowId);\n                    var imgPath = employeeRow.ImgPath;\n                    image = ` \n\n                    <div  style=\"display: flex; align-items: center; height: 100%;\" class=\" row\">\n                        </div>\n                <div style=\"text-align: left;height: 100%;padding-right:0;align-items: center;justify-content: center;display: flex;padding-top: 5px;padding-bottom: 5px\">\n                    <div style=\"text-align: left;height: 100%;width:100%;padding-right:0\">\n                            <div class=\"col-1\"  style=\"font-size: 10px; display: flex; justify-content: space-between; align-items: center; width: 100%; white-space: nowrap;\"> <span  style=\"display: block;white-space: nowrap;\"> ${employeeRow.EmployeeName} </span>  </div>\n                            </div>\n                    `\n                    $jqueryObject.append(image)\n                    if (data.hierarchyLevel != EmployeeEnum && Authorization.userDefinition.Permissions[PermissionKeys.HumanResources]) {\n                        let cancelButton = `<div class=\"fa fa-times btn clickable-icon\"></div>`\n                        let div = $jqueryObject.find(\".col-1\")\n                        div.append(cancelButton)\n\n                    }\n                    var imgContainer = document.createElement('div');\n\n                    var img = document.createElement('img');\n                    img.src = `/upload/${imgPath}`;\n                    img.className = 'avatar';\n                    img.crossOrigin = 'anonymous'\n                    img.draggable = false\n                    img.width = 63;\n                    img.height = 112.5;\n                    img.style.marginRight = '20px'\n                    // Add an error event listener\n\n                    img.onerror = function () {\n                        // Handle the error, e.g., set a placeholder image\n                        img.src = ''; // Replace with your placeholder path\n                    };\n\n                    imgContainer.appendChild(img)\n                    let row = $jqueryObject.find(\".row\")\n                    row.append(imgContainer)\n                }\n                let content = $jqueryObject.find(\".content\")\n                content.remove()\n            }\n        });\n        if (filter == 0)\n            orgchart.chart.style = Style\n        return orgchart\n    }\n    function GenerateUl(node, type) {\n        if (isEmptyOrNull(node))\n            return\n        const checkbox = document.createElement('input');\n        checkbox.type = 'checkbox';\n        if (type === ChartType.OrgStruct) {\n            checkbox.className = 'filterCheckBox';\n        } else if (type === ChartType.OrgChart) {\n            checkbox.className = 'OrgChartFilterCheckBox';\n        }\n\n        // Step 1: Collect the state of all checkboxes with the class 'filterCheckBox' before generating the list\n        const checkedCheckboxes = {};\n        const toggleStates = {};  // To track the toggle state (expanded/collapsed)\n\n        const allCheckboxes = document.querySelectorAll(`input.${checkbox.className}`);\n        allCheckboxes.forEach(checkbox => {\n            checkedCheckboxes[checkbox.getAttribute('wantedId')] = checkbox.checked;\n        });\n\n        const allToggles = document.querySelectorAll(`.${checkbox.className}.toggle`);\n        allToggles.forEach(toggle => {\n            const nodeId = toggle.getAttribute('wantedid');\n            toggleStates[nodeId] = toggle.textContent === '-';  // If the text is '-', it's expanded\n        });\n        // Step 2: Create the main <ul> element for the current level\n        const ul = document.createElement('ul');\n        ul.classList.add('nested'); // Add class for collapsibility\n        ul.id = 'bulletList';\n        const li = document.createElement('li');\n        li.textContent = `${node.name}`;\n        if (!isEmptyOrNull(node.EmployeeRowId)) {\n          //  console.log(node)\n            const employeeRow = ListOfEmployeeData.find(employee => employee.id === node.EmployeeRowId);\n            //console.log(employeeRow)\n            if (!isEmptyOrNull(employeeRow))\n            li.textContent = `${li.textContent} (${employeeRow.EmployeeId})`;\n        }\n        // Step 3: Create the checkbox\n        checkbox.setAttribute('wantedId', node.id); // Set a custom attribute for the node ID\n        checkbox.style.marginLeft = '10px';\n        // Restore the checked state if applicable\n        if (checkedCheckboxes[node.id] !== undefined && checkedCheckboxes[node.id] === true) \n            checkbox.checked = checkedCheckboxes[node.id];\n        // Add the checkbox to the <li> element\n        li.appendChild(checkbox);\n\n        // Step 4: Only add a toggle button if the node has children (and is not of type DIRECTOR)\n        if (node.children && node.children.length > 0 && node.hierarchyLevel !== CardType.DIRECTOR) {\n            const toggleSpan = document.createElement('span');\n            toggleSpan.classList.add('toggle');\n            toggleSpan.classList.add(`${checkbox.className}`);\n\n            toggleSpan.textContent = '+'; // Default to '+' for collapsed state\n            toggleSpan.style.cursor = 'pointer';\n            toggleSpan.style.color = '#007BFF';\n            toggleSpan.style.textDecoration = 'underline';\n            toggleSpan.setAttribute('wantedId', node.id); // Set a custom attribute for the node ID\n\n            li.prepend(toggleSpan);\n\n            // Attach the toggle event listener\n            toggleSpan.addEventListener('click', () => {\n                // Toggle the visibility of the child <ul> element\n                const childUl = li.querySelector('ul');\n                if (childUl) {\n                    childUl.style.display = (childUl.style.display === 'none' || childUl.style.display === '') ? 'block' : 'none';\n                    toggleSpan.textContent = (childUl.style.display === 'none') ? '+' : '-'; // Change the toggle symbol\n                }\n            });\n\n            // Check if this node was previously expanded and set its state\n            if (toggleStates[node.id]) {\n                toggleSpan.textContent = '-'; // If previously expanded, set to '-'\n            }\n        }\n\n        // Step 5: If the node has children, create child <ul> elements\n        if (node.children && node.children.length > 0) {\n            const childUl = document.createElement('ul');\n\n            // For DIRECTOR level, always show children by default\n            const childUlState = node.hierarchyLevel === CardType.DIRECTOR ? 'block' : (toggleStates[node.id] ? 'block' : 'none');\n            childUl.style.display = childUlState; // Set the visibility based on the previous toggle state or default for DIRECTOR\n\n            node.children.forEach((child) => {\n                childUl.appendChild(GenerateUl(child, type)); // Recursively generate <ul> for children\n            });\n            li.appendChild(childUl);\n        }\n\n        // Append the <li> to the <ul>\n        ul.appendChild(li);\n\n        // Step 6: Return the generated <ul>\n        return ul;\n    }\n\n    function addListItem(parentId, newItemId, newItemContent, checkboxClass = 'filterCheckBox') {\n        // Find the checkbox with the matching parent ID\n        const targetCheckbox = document.querySelector(`[wantedid=\"${parentId}\"]`);\n\n        if (!targetCheckbox) {\n            console.error(`No element found with wantedId: ${parentId}`);\n            return;\n        }\n\n        // Locate the closest parent <li> for the checkbox\n        const parentListItem = targetCheckbox.closest('li');\n\n        if (!parentListItem) {\n            console.error(`No parent <li> found for wantedId: ${parentId}`);\n            return;\n        }\n\n        // Check if the parent <li> already has a nested <ul>\n        let nestedUl = parentListItem.querySelector('ul.nested');\n        if (!nestedUl) {\n            // If no nested <ul>, create one\n            nestedUl = document.createElement('ul');\n            nestedUl.classList.add('nested');\n            nestedUl.style.display = 'none'; // Hidden initially\n            // Add a toggle span (+/-) for collapsibility\n            const toggleSpan = document.createElement('span');\n            toggleSpan.classList.add('toggle');\n            toggleSpan.textContent = '+'; // Default collapsed state\n            toggleSpan.style.cursor = 'pointer';\n            toggleSpan.style.color = '#007BFF';\n            toggleSpan.style.textDecoration = 'underline';\n\n            // Add the toggle event listener\n            toggleSpan.addEventListener('click', () => {\n                if (nestedUl.style.display === 'none') {\n                    nestedUl.style.display = 'block';\n                    toggleSpan.textContent = '-';\n                } else {\n                    nestedUl.style.display = 'none';\n                    toggleSpan.textContent = '+';\n                }\n            });\n\n            // Prepend the toggle button to the parent <li>\n            parentListItem.prepend(toggleSpan);\n\n            // Append the nested <ul> to the parent <li>\n            parentListItem.appendChild(nestedUl);\n        }\n\n        // Check if an <li> with the same wantedId already exists\n        const existingItem = nestedUl.querySelector(`[wantedid=\"${newItemId}\"]`);\n        if (existingItem) {\n            console.warn(`Item with wantedId \"${newItemId}\" already exists.`);\n            return;\n        }\n\n        // Create the new <li> item with a checkbox inside the nested <ul>\n        const newListItem = document.createElement('li');\n        const checkedBoxes = Array.from(document.querySelectorAll('.filterCheckBox:checked'));\n        if (checkedBoxes.length > 0)\n            newListItem.innerHTML = `\n        ${newItemContent}\n        <input type=\"checkbox\" class=\"${checkboxClass}\" wantedid=\"${newItemId}\" style=\"margin-left: 10px;\" checked>\n    `;\n        else\n            newListItem.innerHTML = `\n        ${newItemContent}\n        <input type=\"checkbox\" class=\"${checkboxClass}\" wantedid=\"${newItemId}\" style=\"margin-left: 10px;\">\n    `;\n\n        // Append the new <li> to the nested <ul>\n        nestedUl.appendChild(newListItem);\n    }\n\n    function GenerateJson(ListOfStruct) {\n        return buildHierarchy(ListOfStruct);\n    }\n\n    function GenerateOrgChart() {\n        function findParentByEmployeeRowId(children, employeeRowIdToRemove) {\n            for (let child of children) {\n                // Check if this child is the one to remove\n                if (child.EmployeeRowId === employeeRowIdToRemove)\n                    return child; // Found the child\n                // If not found, check its children recursively\n                if (child.children) {\n                    const found = findParentByEmployeeRowId(child.children, employeeRowIdToRemove);\n                    if (found)\n                        return found; // Return if found in nested children\n                }\n            }\n            return null; // Not found\n        }\n        function filterChildren(children, employeeRowIdToRemove) {\n            let wasFiltered = false; // Track if any child was removed\n\n            const filteredChildren = children\n                .filter(child => {\n                    if (child.EmployeeRowId === employeeRowIdToRemove) {\n                        wasFiltered = true; // Found a match to remove\n                        return false; // Exclude this child\n                    }\n                    return true; // Keep this child\n                })\n                .map(child => {\n                    if (child.children) {\n                        const result = filterChildren(child.children, employeeRowIdToRemove);\n                        if (result.wasFiltered) {\n                            wasFiltered = true; // Update if nested filtering removed anything\n                        }\n                        child.children = result.children; // Update child.children with the filtered children\n                    }\n                    return child;\n                });\n\n            return {\n                wasFiltered: wasFiltered,\n                children: filteredChildren\n            };\n        }\n        function removeNodeByEmployeeRowId(data, employeeRowIdToRemove) {\n            var result = false\n            if (isEmptyOrNull(data.children))\n                return\n            var parentNode = findParentByEmployeeRowId(data.children, employeeRowIdToRemove)\n            if (isEmptyOrNull(parentNode))\n                return\n            var Route: any[] = DecomposeStringToList(parentNode.id, 0x88, 0x99)\n            if (parentNode) {\n                var parent = data\n                parent = SearchById(parent, parentNode.id)\n                // Get children to move\n                const childrenToMove = parent.children || [];\n                parent = data\n                for (let i = 0; i < Route.length - 1; i++)\n                    parent = findByClassName(parent, Route[i])\n                if (parent) {\n                    if (parent.children) {\n                        const bufferOutput = filterChildren(parent.children, employeeRowIdToRemove);\n                        parent.children = bufferOutput.children\n                        if (isEmptyOrNull(parent.children))\n                            parent.children = childrenToMove\n                        else\n                            parent.children.push(...childrenToMove);\n                        result = bufferOutput.wasFiltered\n                        data = parent\n                    }\n                }\n            }\n            return result\n        }\n\n        SplitOrganisationChartService.List({\n        }, response => {\n            var insert = 0\n            if (SplitOrgChartList.length == 0) {\n                insert = 1\n                for (let i = 0; i < response.Entities.length; i++) {\n                    var EmployeeRowId = response.Entities[i].EmployeeRowId\n                    SplitOrgChartList.push({\n                        id: response.Entities[i].NodeId,\n                        EmployeeRowId: EmployeeRowId,\n                        name: response.Entities[i].Name,\n                        title: response.Entities[i].Title,\n                        className: response.Entities[i].ClassName,\n                        hierarchyLevel: response.Entities[i].HierarchyLevel,\n                        parentId: response.Entities[i].ParentId,\n                        childrenIndex: response.Entities[i].childrenIndex\n                    })\n                }\n            }\n            EmployeeRightsService.List({\n            }, response => {\n                if (insert == 1) {\n                    for (let i = 0; i < response.Entities.length; i++) {\n                        var ObjToInsertRghts = SplitOrgChartList.find(obj => obj.id === response.Entities[i].NodeId);\n                        if (ObjToInsertRghts) {\n                            var EmployeeRightBuffer: EmployeeAdminRights = {\n                                Appraisal: response.Entities[i].Appraisal,\n                                LeaveApproval: response.Entities[i].LeaveApproval,\n                                OtApproval: response.Entities[i].OtApproval,\n                                Training: response.Entities[i].Training,\n                                MoneyClaiming: response.Entities[i].MoneyClaiming\n                            }\n                            ObjToInsertRghts.Rights = EmployeeRightBuffer\n                        }\n                    }\n                }\n                const checkedBoxes = Array.from(document.querySelectorAll('.OrgChartFilterCheckBox:checked'));\n                const checkedIds = checkedBoxes.map(box => box.getAttribute('wantedId'));\n                var Json\n                if (checkedIds.length > 0) {\n                    let OrgChartFinalResult = [];\n                    checkedIds.forEach(item => {\n                        OrgChartFinalResult.push(item);\n                        const parents = traceParents(item, SplitOrgChartList);\n                        OrgChartFinalResult.push(...parents);\n                    });\n                    // Remove duplicates\n                    OrgChartFinalResult = Array.from(new Set(OrgChartFinalResult.map(obj => obj.id)))\n                        .map(id => SplitOrgChartList.find(obj => obj.id === id));\n                    Json = GenerateJson(OrgChartFinalResult)\n                }\n                else\n                    Json = GenerateJson(SplitOrgChartList)\n                if (isEmptyOrNull(Json)) {\n                    if (isEmptyOrNull(spareOrgStructJson))\n                        return\n                    else\n                        Json = JSON.parse(spareOrgChartJson)\n                }\n\n                var orgChartElement = document.getElementById(\"orgChartContainer\")\n                var panel = orgChartElement.querySelector(\"#chart-left-panel\");\n                //console.log(Json)\n                FinalDatascource2 = JSON.parse(JSON.stringify(Json))\n                var GenerateSave = false\n                for (let i = 0; i < EmployeeFilter.length; i++) {\n                  //  console.log(EmployeeFilter[i])\n                    var result = removeNodeByEmployeeRowId(FinalDatascource2, EmployeeFilter[i])\n                    if (result == true && GenerateSave == false)\n                        GenerateSave = result\n                }\n              //  console.log('here')\n              //  console.log(GenerateSave)\n              //  console.log(FinalDatascource2)\n                if (GenerateSave == true) {\n                    GenerateSaveOrgChart()\n                    return\n                }\n                if (isEmptyOrNull(panel)) {\n                    var LeftPanel = document.createElement(\"div\")\n                    LeftPanel.id = \"chart-left-panel\"\n                    LeftPanel.className = \"left-panel-class\"\n                    orgChartElement.append(LeftPanel)\n                    var BulletList = GenerateUl(Json, ChartType.OrgChart)\n                    $('#chart-left-panel').append(BulletList)\n                }\n                var orgChartElement = document.getElementById(\"orgChartContainer\")\n                if (orgChartElement) {\n                    var orgDiv = orgChartElement.querySelector(\".orgchart\");\n                    if (orgDiv) {\n                        Style = orgDiv.getAttribute('style')\n                        orgDiv.remove()\n                    }\n                }\n\n                FinalDatascource = JSON.parse(JSON.stringify(FinalDatascource2))\n                let orgchart = new OrgChart({\n                    'chartContainer': '#orgChartContainer',\n                    'data': FinalDatascource,\n                    'nodeContent': 'title',\n                    'zoom': true,\n                    'pan': true,\n                    'createNode': function (node, data) {\n                        //console.log(FinalDatascource)\n                        let image = \"\"\n                        if (node.hierarchyLevel == EmployeeEnum)\n                            node.draggable = false\n                        let $jqueryObject = $(node);\n                        if (!isEmptyOrNull(data.EmployeeRowId)) {\n                            var employeeRow = ListOfEmployeeData.find(employee => employee.id === data.EmployeeRowId);\n                            var JobGradeName = '-';\n                           // console.log(employeeRow)\n                            if (!isEmptyOrNull(employeeRow.JobGradeId)) {\n                                if (!isEmptyOrNull(JobGradeTable.itemById[employeeRow.JobGradeId].Name))\n                                    JobGradeName = JobGradeTable.itemById[employeeRow.JobGradeId].Name;\n                            }\n                            var basicPay = Authorization.userDefinition.Permissions[PermissionKeys.HumanResources] == true ? employeeRow.SalaryDetails : 'N/A'\n                            var imgPath = employeeRow.ImgPath;\n                            image = ` \n                    <div  style=\" display: flex; align-items: center; height: 100%; flex-direction: column;\" class=\" rowData\">\n                        </div>\n                    <div style=\" text-align: left;height: 100%;padding-right:0;align-items: center;justify-content: center;display: flex;padding-top: 5px;padding-bottom: 5px\">\n                    <div style=\"text-align: left;height: 100%;width:100%;padding-right:0\">\n                            <div class=\"col-1\"  style=\"font-size: 10px; display: flex; justify-content: space-between; align-items: center; width: 100%; white-space: nowrap;\"> <span  style=\"display: block;white-space: nowrap;\"> Name : ${employeeRow.EmployeeName} <br> Job Grade : ${JobGradeName} <br> Salary Details : ${basicPay} </span>  </div>\n                            </div>\n                    `;\n                            if (Authorization.userDefinition.Permissions[PermissionKeys.HumanResources])//is HR\n                            {\n                                if (data.hierarchyLevel != EmployeeEnum && data.hierarchyLevel != CardType.DIRECTOR) {\n                                    var button\n                                    if (!isEmptyOrNull(data.Rights)) {\n                                        button = `\n                                <div>\n                                    <i class=\"fas fa-band-aid\" title=\"Approve Leave Requests\"></i>\n                                    <i class=\"fa fa-wrench\" title=\"Approve Overtime Requests\"></i>\n                                   <i class=\"fa fa-money-bill\" title=\"Approve Money Claiming Requests\"></i>\n                                    <i class=\"fa fa-check\" title=\"Evaluate Employee Requests\"></i>\n                                    <i class=\"far fa-clock\" title=\"Manage Training Requests\"></i>\n                                </div>\n                                <div>\n                            `;\n                                        var desiredOrder: (keyof EmployeeAdminRights)[] = [\n                                            'LeaveApproval',\n                                            'OtApproval',\n                                            'MoneyClaiming',\n                                            'Appraisal',\n                                            'Training'\n                                        ];\n                                        // Loop through the rights object to create the checkbox elements\n                                        for (const key of desiredOrder) {\n                                            var value = data.Rights[key]\n                                            // Determine the checked attribute based on the value\n                                            const checkedAttribute = value ? 'checked' : '';\n                                            button += `\n                    <input class=\"CheckBox\" id=\"${key}\" type=\"checkbox\" title=\"${key.replace(/([A-Z])/g, ' $1')}\" ${checkedAttribute}>\n                `;\n                                        }\n                                        button += '</div>';\n                                    }\n                                    else {\n                                        button = `\n                    <div>\n                    <i class=\"fas fa-band-aid\" title=\"Approve Leave Requests\" ></i>\n                    <i class=\"fa fa-wrench\" title=\"Approve Overtime Requests\"></i>\n                    <i class=\"fa fa-money-bill\" title=\"Approve Money Claiming Requests\"></i>\n                    <i class=\"fa fa-check\"  title=\"Evaluate Employee Requests\"></i>\n                    <i class=\"far fa-clock\" title=\"Manage Training Requests\"></i>\n                    </div>\n                    <div>\n                    <input class = \"CheckBox\"  id=\"LeaveApproval\" type=\"checkbox\"  title=\"Approve Leave Requests\">\n                    <input  class = \"CheckBox\" id=\"OtApproval\" type=\"checkbox\" title=\"Approve Overtime Requests\">\n                    <input class = \"CheckBox\"  id=\"MoneyClaiming\" type=\"checkbox\" title=\"Approve Money Claiming Requests\" >\n                    <input class = \"CheckBox\"  id=\"Appraisal\" type=\"checkbox\" title=\"Evaluate Employee Requests\" >\n                    <input class = \"CheckBox\"  id=\"Training\" type=\"checkbox\" title=\"Manage Training Requests\" >\n\n                    </div>    \n`\n                                    }\n                                    image = button + image\n                                }\n\n                            }\n                            $jqueryObject.append(image)\n                            var img = document.createElement('img');\n                            img.src = `/upload/${imgPath}`;\n                            img.className = 'avatar';\n                            img.crossOrigin = 'anonymous'\n                            img.draggable = false\n                            img.width = 63;\n                            img.height = 112.5;\n                            img.style.marginRight = '20px'\n                            img.onerror = function () {\n                                // Handle the error, e.g., set a placeholder image\n                                img.src = ''; // Replace with your placeholder path\n                            };\n                            let row = $jqueryObject.find(\".rowData\")\n                            row.append(img)\n                            var ViewButton = document.createElement('span');\n                            ViewButton.className = 'dot';\n                            if (Authorization.userDefinition.Permissions[PermissionKeys.HumanResources])//is HR\n                                row.append(ViewButton)\n                        }\n                        let content = $jqueryObject.find(\".content\")\n                        content.remove()\n                    }\n                });\n                setCallbacks()\n                if (Authorization.userDefinition.Permissions[PermissionKeys.HumanResources]) {\n                    var generateOrgChartButton = orgChartElement.querySelector(\"#orgChartContainer .buttonGroup\");\n                    if (isEmptyOrNull(generateOrgChartButton)) {\n                        generateOrgChartButton = document.createElement('div')\n                        generateOrgChartButton.className = 'buttonGroup'\n                        generateOrgChartButton.innerHTML =\n                            `\n            <button id=\"toggleOrgChartSidePanel\" class=\"btn btn-light btn-rounded\" style=\"bottom: 10px; left: 10px; position: absolute; background-color: rgb(197, 216, 240);\">Hide Filter Tab</button>\n            `\n                        orgChartElement.appendChild(generateOrgChartButton)\n                    }\n                }\n\n\n            })\n        })\n\n    }\n    function GenerateSaveOrgChart() {\n        SplitOrganisationChartService.DeleteAll({\n        }, response => {\n            SplitOrgChartList = splitIntoNodes(FinalDatascource2)\n            for (let i = 0; i < SplitOrgChartList.length; i++) {\n                SplitOrganisationChartService.Create({\n                    Entity:\n                    {\n                        \"ParentId\": SplitOrgChartList[i].parentId,\n                        \"NodeId\": SplitOrgChartList[i].id,\n                        \"Name\": SplitOrgChartList[i].name,\n                        \"Title\": SplitOrgChartList[i].title,\n                        \"ClassName\": SplitOrgChartList[i].className,\n                        \"HierarchyLevel\": SplitOrgChartList[i].hierarchyLevel,\n                        \"EmployeeRowId\": SplitOrgChartList[i].EmployeeRowId,\n                        \"childrenIndex\": SplitOrgChartList[i].childrenIndex\n                    },\n                });\n            }\n            var ListOfRights: NodeRights[] = extractRights(FinalDatascource2)\n\n            EmployeeRightsService.ClearOldAdminRightRecord({\n            }, response => {\n                for (let i = 0; i < ListOfRights.length; i++) {\n                    if (ListOfRights[i].nodeHierarchy != EmployeeEnum && !isEmptyOrNull(ListOfRights[i].EmployeeRowId))\n                        EmployeeRightsService.Create({\n                            Entity: {\n                                \"EmployeeRowId\": ListOfRights[i].EmployeeRowId,\n                                \"NodeId\": ListOfRights[i].id,\n                                \"Appraisal\": ListOfRights[i].Rights.Appraisal,\n                                \"LeaveApproval\": ListOfRights[i].Rights.LeaveApproval,\n                                \"OtApproval\": ListOfRights[i].Rights.OtApproval,\n                                \"Training\": ListOfRights[i].Rights.Training,\n                                \"MoneyClaiming\": ListOfRights[i].Rights.MoneyClaiming,\n                            }\n                        })\n                }\n            })\n\n\n            var orgChartElement = document.getElementById(\"orgChartContainer\")\n            if (orgChartElement) {\n                var orgDiv = orgChartElement.querySelector(\".orgchart\");\n                if (orgDiv) {\n                    Style = orgDiv.getAttribute('style')\n                    DataPanStart = orgDiv.getAttribute('data-pan-start')\n                    orgDiv.remove()\n                }\n            }\n\n            var BulletList = GenerateUl(FinalDatascource2, ChartType.OrgChart)\n            $('#chart-left-panel').html('');\n            $('#chart-left-panel').append(BulletList);\n\n            removeEmptyChildren(FinalDatascource2)\n\n            FinalDatascource = JSON.parse(JSON.stringify(FinalDatascource2))\n            let orgchart = new OrgChart({\n                'chartContainer': '#orgChartContainer',\n                'data': FinalDatascource,\n                'nodeContent': 'title',\n                'nodeId': 'thisOrgChart',\n                'zoom': true,\n                'pan': true,\n                'id': 'orgChart',\n                'createNode': function (node, data) {\n                    let image = \"\"\n                    let $jqueryObject = $(node);\n                    if (!isEmptyOrNull(data.EmployeeRowId)) {\n                        var employeeRow = ListOfEmployeeData.find(employee => employee.id === data.EmployeeRowId);\n                     //   console.log(JobGradeTable.itemById)\n                      //  console.log(employeeRow.JobGradeId)\n                        var JobGradeName = '-' \n                        if (!isEmptyOrNull(employeeRow.JobGradeId)) {\n                            if (!isEmptyOrNull(JobGradeTable.itemById[employeeRow.JobGradeId].Name))\n                                 JobGradeName = JobGradeTable.itemById[employeeRow.JobGradeId].Name;\n                        }\n                        var basicPay = Authorization.userDefinition.Permissions[PermissionKeys.HumanResources] == true ? employeeRow.SalaryDetails : 'N/A'\n                        var imgPath = employeeRow.ImgPath;\n                        image = ` \n                    <div  style=\"display: flex; align-items: center; height: 100%; flex-direction: column;\" class=\" rowData\">\n                        </div>\n                <div style=\"text-align: left;height: 100%;padding-right:0;align-items: center;justify-content: center;display: flex;padding-top: 5px;padding-bottom: 5px\">\n                    <div style=\"text-align: left;height: 100%;width:100%;padding-right:0\">\n                            <div class=\"col-1\"  style=\"font-size: 10px; display: flex; justify-content: space-between; align-items: center; width: 100%; white-space: nowrap;\"> <span  style=\"display: block;white-space: nowrap;\"> Name : ${employeeRow.EmployeeName} <br> Job Grade : ${JobGradeName} <br> Salary Details : ${basicPay} </span>  </div>\n                            </div>`\n                        if (data.hierarchyLevel != EmployeeEnum && data.hierarchyLevel != CardType.DIRECTOR) {\n                            var button\n                            if (!isEmptyOrNull(data.Rights)) {\n                                button = `\n                <div>\n                     <i class=\"fas fa-band-aid\" title=\"Approve Leave Requests\"></i>\n                    <i class=\"fa fa-wrench\" title=\"Approve Overtime Requests\"></i>\n                   <i class=\"fa fa-money-bill\" title=\"Approve Money Claiming Requests\"></i>\n                    <i class=\"fa fa-check\" title=\"Evaluate Employee Requests\"></i>\n                    <i class=\"far fa-clock\" title=\"Manage Training Requests\"></i>\n                </div>\n                <div>`;\n                                var desiredOrder: (keyof EmployeeAdminRights)[] = [\n                                    'LeaveApproval',\n                                    'OtApproval',\n                                    'MoneyClaiming',\n                                    'Appraisal',\n                                    'Training'\n                                ];\n\n\n                                // Loop through the rights object to create the checkbox elements\n                                for (const key of desiredOrder) {\n                                    var value = data.Rights[key]\n\n                                    // Determine the checked attribute based on the value\n                                    const checkedAttribute = value ? 'checked' : '';\n                                    //  console.log(value)\n                                    //  console.log(key)\n\n                                    button += `\n                    <input class=\"CheckBox\" id=\"${key}\" type=\"checkbox\" title=\"${key.replace(/([A-Z])/g, ' $1')}\" ${checkedAttribute}>\n                `;\n                                }\n\n                                // Close the div tag\n                                button += '</div>';\n                            }\n                            else {\n                                button = `\n                    <div>\n                 <i class=\"fas fa-band-aid\" title=\"Approve Leave Requests\"></i>\n                    <i class=\"fa fa-wrench\" title=\"Approve Overtime Requests\"></i>\n                   <i class=\"fa fa-money-bill\" title=\"Approve Money Claiming Requests\"></i>\n                    <i class=\"fa fa-check\" title=\"Evaluate Employee Requests\"></i>\n                    <i class=\"far fa-clock\" title=\"Manage Training Requests\"></i>\n                    </div>\n                    <div>\n                    <input class = \"CheckBox\"  id=\"LeaveApproval\" type=\"checkbox\"  title=\"Approve Leave Requests\">\n                    <input  class = \"CheckBox\" id=\"OtApproval\" type=\"checkbox\" title=\"Approve Overtime Requests\">\n                    <input class = \"CheckBox\"  id=\"MoneyClaiming\" type=\"checkbox\" title=\"Approve Money Claiming Requests\" >\n                    <input class = \"CheckBox\"  id=\"Appraisal\" type=\"checkbox\" title=\"Evaluate Employee Requests\" >\n                    <input class = \"CheckBox\"  id=\"Training\" type=\"checkbox\" title=\"Manage Training Requests\" >\n\n                    </div>    \n`\n\n                            }\n                            image = button + image\n                        }\n                        $jqueryObject.append(image)\n\n                        var img = document.createElement('img');\n                        img.src = `/upload/${imgPath}`;\n                        img.className = 'avatar';\n                        img.crossOrigin = 'anonymous'\n                        img.draggable = false\n                        img.width = 63;\n                        img.height = 112.5;\n                        img.style.marginRight = '20px'\n\n                        img.onerror = function () {\n                            // Handle the error, e.g., set a placeholder image\n                            img.src = ''; // Replace with your placeholder path\n                        };\n\n                        let row = $jqueryObject.find(\".rowData\")\n                        row.append(img)\n                        var ViewButton = document.createElement('span');\n                        ViewButton.className = 'dot';\n                        if (Authorization.userDefinition.Permissions[PermissionKeys.HumanResources])//is HR\n                            row.append(ViewButton)\n\n\n                    }\n                    let content = $jqueryObject.find(\".content\")\n                    content.remove()\n                }\n\n            });\n            if (!isEmptyOrNull(Style))\n                orgchart.chart.style = Style\n\n            setCallbacks()\n\n        })\n\n\n\n        const jsonString = JSON.stringify(FinalDatascource2);\n        FinalOrganisationChartService.Create({\n            Entity:\n            {\n                \"FinalOrgChart\": jsonString,\n            },\n        });\n    }\n    function GetLookupValueFromId(destinationHierarchy, destinationHierarchyId) {\n        var str\n\n        var table = getLookup(`${capitalizeFirstLetter(destinationHierarchy)}.${capitalizeFirstLetter(destinationHierarchy)}`)\n        for (var LookupIndex in table.items) {\n            if (table.items[LookupIndex].Id == destinationHierarchyId) {\n                str = table.items[LookupIndex].Name.replace(/\\s/g, \"\")\n                break\n            }\n        }\n        return str\n    }\n\n    function DecomposeStringToList(StringToDecompose, Starter, Ender) {\n        var buffer = '', start = false\n        var bufferList: any[] = []\n        for (let i = 0; i < StringToDecompose.length; i++) {\n            var charCode = StringToDecompose.charCodeAt(i)\n            if (charCode == Starter || (start == true && charCode != Ender))//start\n            {\n                if (start == true)\n                    buffer += StringToDecompose[i].toString()\n                start = true\n            }\n            else if (charCode == Ender) // end\n            {\n                bufferList.push(buffer)\n                start = false\n                buffer = ''\n            }\n        }\n        return bufferList\n    }\n    function EncodeString(OriginalString, Starter, Ender) {\n        if (OriginalString.endsWith('Class'))\n            OriginalString = OriginalString.slice(0, -5); // Remove the last 5 characters\n        var buffer = String.fromCharCode(Starter) + OriginalString + String.fromCharCode(Ender)\n        return buffer.replace(/\\s+/g, ''); // Removes all spaces\n    }\n\n    function splitIntoNodes(root) {\n        const nodes: NodeRow[] = [];\n\n        function processNode(node: Node, parentId: string | null, childIndex: number | null = 0) {\n            // Add current node to the nodes table\n\n            nodes.push({\n                id: node.id,\n                EmployeeRowId: node.EmployeeRowId,\n                name: node.name,\n                title: node.title,\n                className: node.className,\n                hierarchyLevel: node.hierarchyLevel,\n                parentId: parentId,\n                hierarchyId: node.hierarchyId,\n                childrenIndex: childIndex // Store the index of this child in its parent's children array\n            });\n\n            // Recursively process children\n            if (node.children)\n                node.children.forEach((child, index) => processNode(child, node.id, index));\n        }\n\n        processNode(root, null, null);\n\n        return nodes;\n    }\n    function extractRights(node) {\n        const ListOfRights: NodeRights[] = [];\n        function processRights(node: Node) {\n            // Add current node to the nodes table\n            if (node.Rights) {\n                ListOfRights.push(\n                    {\n                        id: node.id,\n                        Rights: node.Rights,\n                        EmployeeRowId: node.EmployeeRowId,\n                        nodeHierarchy: node.hierarchyLevel\n                    }\n                );\n\n            }\n\n            // Recursively process children\n            if (node.children)\n                node.children.forEach((child) => processRights(child));\n        }\n\n        processRights(node)\n        return ListOfRights\n\n    }\n    function buildHierarchy(data: NodeRow[]) {\n        const map = {};\n        let root = null;\n        // Step 1: Create a map of the items by their id\n        data.forEach(item => {\n            if (!isEmptyOrNull(item))\n                map[item.id] = { ...item }; // Create a copy of the item to avoid direct mutation\n\n        });\n\n        // Step 2: Build the hierarchy by assigning children to their respective parent nodes\n        data.forEach(item => {\n            if (!isEmptyOrNull(item)) {\n                if (item.parentId) {\n                    const parent = map[item.parentId];\n                    if (parent) { // Ensure the parent exists in the map\n                        if (!parent.children)\n                            parent.children = [];\n                        parent.children[item.childrenIndex] = map[item.id]; // Place the child at the correct index\n                    }\n                } else\n                    root = map[item.id]; // Assuming there's only one root node\n\n\n            }\n        });\n\n        // Step 3: Remove empty 'children' properties recursively\n        function cleanChildrenArray(node) {\n            if (node.children) {\n                node.children = node.children.filter(child => child !== undefined); // Remove gaps\n                node.children.forEach(cleanChildrenArray); // Recursively clean children\n                if (node.children.length === 0) {\n                    delete node.children;\n                }\n            }\n            return node;\n        }\n\n        return root ? cleanChildrenArray(root) : null; // Clean up and return the root node\n    }\n}\n"],
  "mappings": "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",
  "names": ["OrgChart", "options", "callback", "P", "value", "reason", "that", "defaultOptions", "opts", "data", "chart", "chartContainer", "spinner", "resp", "err", "exportBtn", "downloadBtn", "el", "fn", "expr", "child", "sibs", "prevSib", "nextSib", "elements", "classNames", "className", "prop", "val", "attr", "type", "listener", "self", "one", "__name", "event", "ancestors", "selector", "results", "url", "resolve", "reject", "xhr", "handler", "li", "subObj", "flags", "item", "node", "relation", "criteria", "state", "leftEdge", "rightEdge", "temp", "sibsVisible", "flag", "topEdge", "bottomEdge", "clickedNode", "focusedNode", "currentRoot", "nodeData", "table", "nodeDiv", "parentTr", "superiorLine", "inferiorLine", "childrenTr", "arrow", "parent", "direction", "siblings", "upperLevel", "sib", "nodeContainer", "animatedNodes", "lines", "line", "someLines", "grandfatherVisible", "parentState", "nodeId", "lastItem", "descendants", "isVerticalDesc", "desc", "appendTo", "count", "symbol", "childrenState", "oneSibling", "siblingCount", "existingSibligCount", "i", "rightLine", "leftLine", "nodeChart", "newSiblingCount", "insertPostion", "childCount", "siblingTds", "nodeCount", "td", "temp2", "temp3", "hEdge", "siblingsState", "toggleBtn", "descWrapper", "children", "subTBs", "classList", "isFirefox", "ghostNode", "nodeCover", "transValues", "scale", "xOffset", "yOffset", "ghostNodeWrapper", "dragged", "dragZone", "dragHier", "dropZone", "dropColspan", "leftline", "rightline", "dropSibs", "upperTr", "lowerTr", "nodeTr", "draggedTd", "dragColSpan", "dragSibs", "tr", "customE", "level", "inEdit", "isHidden", "icon", "title", "nodeWrapper", "childNodes", "isVerticalNode", "isVerticalLayer", "lineLayer", "nodeLayer", "nodeCell", "mask", "sourceChart", "cloneDoc", "canvasContainer", "canvas", "lastX", "lastY", "lastTf", "startX", "startY", "newX", "newY", "panStart", "matrix", "newScale", "dist", "diff", "appendStyle", "Linkx", "__name", "import_q", "import_q", "import_corelib", "pageInit", "CardType", "ChartType", "capitalizeFirstLetter", "string", "__name", "getEnumNameFromValue", "value", "findMax", "numbers", "GenerateEmployeeChoosingDialog", "CustomDialog", "EmployeeIdInput", "ListCounter", "name", "ListOfEmployeeData", "HierarchyLevelToSetEmployee", "DecomposeStringToList", "ElementToSetEmployee", "FinalOrgChartBuffer", "datascource2", "TargetedFinalOrgChartBuffer", "HierarchyLevel", "i", "HierarchyKey", "findByClassName", "DatabaseData", "correctDepartment", "GetLookupValueFromId", "correctDivision", "correctSection", "SetEmployeeByClassName", "GenerateSaveOrgStructure", "CustomTable", "CustomTableRow", "CustomTableRow2", "fragment", "EmployeeIdTextNode", "EmployeeIdTextNodeContainer", "EmployeeNameTextNode", "EmployeeNameTextNodeContainer", "EmployeeIdSelector", "EmployeeNameSelector", "EmployeeNameInput", "e", "dlg", "GeneratePdfDialog", "pdfDialog", "pdf", "currentPdfIndex", "pdfSources", "updatePdf", "pdfEmbed", "pdfTitle", "pdfOriginalName", "Style", "DataPanStart", "sortedValues", "a", "b", "key", "minimmumVal", "EmployeeEnum", "EmployeeChoosingDialog", "StyleLink", "appendStyle", "container", "DepartmentPanel", "DivisionPanel", "SectionPanel", "ListOfDivision", "ListOfDepartment", "ListOfSection", "SplitOrgChartList", "EmployeeFilter", "datascource", "FinalDatascource", "FinalDatascource2", "OccupationTable", "JobGradeTable", "criteria", "SectionList", "DepartmentList", "DivisionList", "spareOrgStructJson", "spareOrgChartJson", "SplitOrgStructList", "FullProfileService", "response", "index", "OrganisationChartService", "GenerateOrgStructure", "FinalOrganisationChartService", "GenerateOrgChart", "PermissionKeys", "DivisionService", "DivisionContent", "DivisionTable", "DivisionRow", "ElementId", "CardText", "EmployeeCard", "GenerateCard", "DepartmentService", "DepartmentContent", "DepartmentTable", "DepartmentRow", "SectionService", "SectionContent", "SectionTable", "SectionRow", "setCallbacks", "EmployeeIdInputElement", "__async", "EmployeeNameInputElement", "BufferEmployeeImage", "EmployeeImage", "imgPath", "searcherInput", "tabcontent", "ChildrenList", "regex", "counter", "ListLength", "EmployeeIdInputEditor", "EmployeeNameInputEditor", "option", "ContentRow", "TabRowNode", "naviBar", "naviBarContent", "orgChartContainer", "openBig", "evt", "id", "tablinks", "OrgStructId", "activeTabLink", "idBuffer", "OrgChartId", "OrgChart", "DisableOrgChartMovement", "open", "cards", "OrgStructButton", "OrgChartButton", "ButtonHolder", "DepartmentTableButton", "DivisionTableButton", "SectionTableButton", "TextInputHolder", "orgchart", "addChildren", "root", "TargetClassName", "newNode", "item", "child", "hasChild", "checkRepeatedChildren", "result", "findTitleByClassName", "data", "className", "findIdByClassName", "deleteNodeById", "removeEmptyChildren", "obj", "findChildrenById", "mutationsList", "mutation", "orgChartElement", "orgDiv", "nodes", "jsonObject", "observer", "ElementArray", "j", "TargetElement", "event", "dragEvent", "relation", "StartPointData", "StartPointJson", "EventTargetElement", "destinationJson", "EventTargetHierarchy", "destinationClassName", "destinationId", "HierarchyLevelToSearch", "StartPointTitle", "StartPointName", "StartPointId", "StartPointHierarchyId", "StartPointHierarchy", "StringToShow", "targetElementId", "ClassName", "DestinationNode", "EmployeeRowId", "child_list", "StartPointParentId", "HierarchyValue", "bufferNode", "SearchById", "EncodingBuffer", "EncodeString", "GenerateSaveOrgChart", "bufferId", "addListItem", "text", "AvatarNodes", "AvatarNode", "panel", "StartPointJsonObject", "hierarchy", "destinationHierarchy", "title", "targetedIdList", "targetedClass", "targetedId", "bufferIdSuffix", "CheckBoxes", "isChecked", "targetJson", "targetEmployeeRowId", "ListOfRights", "extractRights", "EmployeeRightsService", "target", "targetId", "ElementToSet", "ElementToSetEmployeeClassName", "TargetElementSpan", "filterCheckBox", "OrgChartFilterCheckBox", "targetData", "targetClassName", "GenerateOrgChartData", "isDivHidden", "div", "myDiv", "displayPdf", "employeeRow", "employee", "error", "EmployeeBasicDataDialog", "extractEmployeeInOrgChart", "node", "results", "ExtendTree", "children", "stripClassSuffix", "str", "nestedChildren", "nestedChild", "strip", "newId", "extractRightsAndEmployeeRowId", "fillInRights", "Right", "EmployeeInOrgChart", "GenerativeOrgChartBuffer", "LookupIndex", "PrevDestination", "ignore", "Holder", "edited", "buffer", "Type", "EmployeeCol_2", "EmployeeContainer", "Employee", "CardClass", "DataSource", "TitleContent", "StringToTransfer", "queue", "current", "traceParents", "allData", "parents", "parent", "SplitOrganisationStructureService", "checkedIds", "box", "Json", "filterFlag", "OrgStructFinalResult", "GenerateJson", "GenerateDefaultOrgStruct", "LeftPanel", "BulletList", "GenerateUl", "GenerateStructure", "generateOrgChartButton", "StructArray", "splitIntoNodes", "InputJson", "containerId", "filter", "image", "$jqueryObject", "cancelButton", "imgContainer", "img", "type", "checkbox", "checkedCheckboxes", "toggleStates", "toggle", "nodeId", "ul", "li", "toggleSpan", "childUl", "childUlState", "parentId", "newItemId", "newItemContent", "checkboxClass", "targetCheckbox", "parentListItem", "nestedUl", "newListItem", "ListOfStruct", "buildHierarchy", "findParentByEmployeeRowId", "employeeRowIdToRemove", "found", "filterChildren", "wasFiltered", "filteredChildren", "removeNodeByEmployeeRowId", "parentNode", "Route", "childrenToMove", "bufferOutput", "SplitOrganisationChartService", "insert", "ObjToInsertRghts", "EmployeeRightBuffer", "OrgChartFinalResult", "GenerateSave", "JobGradeName", "basicPay", "button", "desiredOrder", "checkedAttribute", "row", "ViewButton", "jsonString", "destinationHierarchyId", "table", "StringToDecompose", "Starter", "Ender", "start", "bufferList", "charCode", "OriginalString", "processNode", "childIndex", "processRights", "map", "__spreadValues", "cleanChildrenArray"]
}
