{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/MoneyClaimApplication/MoneyClaimApplication/MoneyClaimApplicationPage.ts", "../../../../../../Modules/HumanResource/MoneyClaimApplication/MoneyClaimApplication/MoneyClaimApplicationGrid.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { MoneyClaimApplicationGrid } from './MoneyClaimApplicationGrid';\n\nexport default function pageInit() {\n    initFullHeightGridPage(new MoneyClaimApplicationGrid($('#GridDiv')).element);\n}", "import { Criteria, Decorators, EntityGrid, GridRowSelectionMixin, IntegerEditor, ListResponse, LookupEditor, QuickFilter, Select2Editor, StringEditor, Widget } from '@serenity-is/corelib';\nimport { MoneyClaimApplicationColumns, MoneyClaimApplicationRow, MoneyClaimApplicationService } from '../../../ServerTypes/MoneyClaimApplication';\nimport { MoneyClaimApplicationDialog } from './MoneyClaimApplicationDialog';\nimport { Authorization } from '@serenity-is/corelib/q';\nimport { PermissionKeys } from '../../../ServerTypes/Administration';\nimport { OccupationService, JobGradeService, DepartmentService, DivisionService } from '../../../ServerTypes/OrganisationHierarchy';\nimport { EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\nimport { MasterCostCentreService } from '../../../ServerTypes/Master';\n\n@Decorators.registerClass('HRMSoftware.MoneyClaimApplication.MoneyClaimApplicationGrid')\nexport class MoneyClaimApplicationGrid extends EntityGrid<MoneyClaimApplicationRow, any> {\n    protected getColumnsKey() { return MoneyClaimApplicationColumns.columnsKey; }\n    protected getDialogType() { return MoneyClaimApplicationDialog; }\n    protected getRowDefinition() { return MoneyClaimApplicationRow; }\n    protected getService() { return MoneyClaimApplicationService.baseUrl; }\n    protected getQuickFilters(): QuickFilter<Widget<any>, any>[] {\n        //Gets the Filters defined in the Columns or in parent grids.\n        let filters = super.getQuickFilters();\n\n        // console.log(filters[3].type = Select2Editor)\n\n        if (Authorization.hasPermission(PermissionKeys.HumanResources)) {\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: MoneyClaimApplicationRow.Fields.OccupationName,\n                type: Select2Editor,\n                title: \"Occupation\",\n\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: MoneyClaimApplicationRow.Fields.JobGradeName,\n                type: Select2Editor,\n                title: \"Job Grade\",\n\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: MoneyClaimApplicationRow.Fields.DivisionName,\n                type: Select2Editor,\n                title: \"Division\",\n\n            });\n\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: MoneyClaimApplicationRow.Fields.DepartmentName,\n                type: Select2Editor,\n                title: \"Department\",\n\n            });\n\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: MoneyClaimApplicationRow.Fields.EmployeeName,\n                type: Select2Editor,\n                title: \"Name\",\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: MoneyClaimApplicationRow.Fields.EmployeeID,\n                type: Select2Editor,\n                title: \"Employee ID\",\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: MoneyClaimApplicationRow.Fields.CostCentreName,\n                type: Select2Editor,\n\n                title: \"Cost Centre\",\n            });\n\n            filters.reverse()\n        }\n        return filters;\n    }\n    protected createQuickFilters(): void {\n        // let base class to create quick filters first\n        super.createQuickFilters();\n\n        if (Authorization.hasPermission(PermissionKeys.HumanResources)) {\n            const months: string[] = [\n                'January',   // 0\n                'February',  // 1\n                'March',     // 2\n                'April',     // 3\n                'May',       // 4\n                'June',      // 5\n                'July',      // 6\n                'August',    // 7\n                'September', // 8\n                'October',   // 9\n                'November',  // 10\n                'December'   // 11\n            ];\n\n            OccupationService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, MoneyClaimApplicationRow.Fields.OccupationName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n            })\n            JobGradeService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, MoneyClaimApplicationRow.Fields.JobGradeName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n            })\n            DepartmentService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, MoneyClaimApplicationRow.Fields.DepartmentName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n            })\n            DivisionService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, MoneyClaimApplicationRow.Fields.DivisionName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n\n            })\n            EmployeeProfileService.List({\n            }, response => {\n                for (var index in response.Entities) {\n                    this.findQuickFilter(Select2Editor, MoneyClaimApplicationRow.Fields.EmployeeName).items.push({ id: (response.Entities[index].EmployeeName).toString(), text: (response.Entities[index].EmployeeName).toString(), })\n                    this.findQuickFilter(Select2Editor, MoneyClaimApplicationRow.Fields.EmployeeID).items.push({ id: (response.Entities[index].EmployeeID).toString(), text: (response.Entities[index].EmployeeID).toString(), })\n\n                }\n            })\n            MasterCostCentreService.List({\n            }, response => {\n                for (var index in response.Entities) {\n                    this.findQuickFilter(Select2Editor, MoneyClaimApplicationRow.Fields.CostCentreName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n\n                }\n            })\n\n\n        }\n\n    }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n    protected getColumns() {\n        var columns = super.getColumns();\n        var index\n        if (!Authorization.hasPermission(PermissionKeys.HumanResources)) //if he is not HR guy, hide the employeeID and approved by column\n        {\n            for (index in columns) {\n                if (columns[index].name == 'Employee Id' || columns[index].name == 'Approved By') {\n                    columns.splice(index, 1);\n                }\n\n            }\n        }\n\n\n        return columns;\n\n    }\n    protected onViewProcessData(response: ListResponse<MoneyClaimApplicationRow>) {\n        response = super.onViewProcessData(response);\n        this.toolbar.findButton(\"column-picker-button\").toggle(false);\n        return response;\n\n    }\n    protected getAddButtonCaption() {\n        return \"Apply money claiming\";\n    }\n   \n}"],
  "mappings": "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",
  "names": ["import_q", "import_corelib", "import_q", "MoneyClaimApplicationGrid", "MoneyClaimApplicationColumns", "MoneyClaimApplicationDialog", "MoneyClaimApplicationRow", "MoneyClaimApplicationService", "filters", "PermissionKeys", "months", "OccupationService", "response", "index", "JobGradeService", "DepartmentService", "DivisionService", "EmployeeProfileService", "MasterCostCentreService", "container", "columns", "__name", "__decorateClass", "pageInit", "MoneyClaimApplicationGrid", "__name"]
}
