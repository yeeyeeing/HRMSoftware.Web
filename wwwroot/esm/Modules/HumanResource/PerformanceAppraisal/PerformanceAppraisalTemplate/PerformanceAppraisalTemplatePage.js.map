{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/PerformanceAppraisal/PerformanceAppraisalTemplate/PerformanceAppraisalTemplatePage.ts", "../../../../../../Modules/HumanResource/PerformanceAppraisal/PerformanceAppraisalTemplate/PerformanceAppraisalTemplateGrid.ts", "../../../../../../Modules/HumanResource/PerformanceAppraisal/PerformanceAppraisalTemplate/PerformanceAppraisalTemplateDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { PerformanceAppraisalTemplateGrid } from './PerformanceAppraisalTemplateGrid';\n\nexport default function pageInit() {\n    initFullHeightGridPage(new PerformanceAppraisalTemplateGrid($('#GridDiv')).element);\n}", "import {DataGrid, Decorators, EntityGrid, ListResponse, ToolButton} from '@serenity-is/corelib';\nimport {\n    PerformanceAppraisalTemplateColumns,\n    PerformanceAppraisalTemplateRow,\n    PerformanceAppraisalTemplateService\n} from '../../../ServerTypes/PerformanceAppraisal';\nimport { PerformanceAppraisalTemplateDialog } from './PerformanceAppraisalTemplateDialog';\nimport { confirm, alertDialog } from '@serenity-is/corelib/q';\nimport {PerformanceAppraisalFormRow} from \"@/ServerTypes/PerformanceAppraisal\";\n\n@Decorators.registerClass('HRMSoftware.PerformanceAppraisal.PerformanceAppraisalTemplateGrid')\nexport class PerformanceAppraisalTemplateGrid extends EntityGrid<PerformanceAppraisalTemplateRow, any> {\n    protected getColumnsKey() { return PerformanceAppraisalTemplateColumns.columnsKey; }\n    protected getDialogType() { return PerformanceAppraisalTemplateDialog; }\n    protected getRowDefinition() { return PerformanceAppraisalTemplateRow; }\n    protected getService() { return PerformanceAppraisalTemplateService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n\n    protected onViewProcessData(response: ListResponse<PerformanceAppraisalFormRow>) {\n        response = super.onViewProcessData(response);\n        //this.toolbar.findButton(\"add-button\").toggle(false);\n        this.toolbar.findButton(\"column-picker-button\").toggle(false);\n        return response;\n    }\n\n    protected getDefaultSortBy() {\n        return [PerformanceAppraisalTemplateRow.Fields.InsertDate + \" desc\"];\n    }\n\n    protected getButtons(): ToolButton[] {\n        let buttons = super.getButtons();\n\n        buttons.push({\n            title: 'Delete All Records',\n            cssClass: 'delete-button',\n            onClick: () => this.deleteAllRecords()\n        });\n\n        return buttons;\n    }\n\n    protected getColumns() {\n\n        DataGrid.defaultRowHeight = 50;\n        let columns = super.getColumns();\n\n        columns.splice(0, 0, {\n            id: 'Edit',\n            field: 'Edit',\n            name: '',\n            cssClass: 'align-center',\n            format: ctx => {\n                let button = `<a class=\"inline-action edit-link\" data-id=\"${ctx.item.Id}\" title=\"Edit\">\n                      <i class=\"fa fa-pencil\" style=\"color: orange;\"></i>\n                  </a>`;\n                return button;\n            },\n            width: 22,\n            minWidth: 22,\n            maxWidth: 22\n        });\n\n        return columns;\n\n    }\n\n    protected onClick(e: JQueryEventObject, row: number, cell: number) {\n        super.onClick(e, row, cell);\n\n        if (e.isDefaultPrevented())\n            return;\n\n        var item = this.itemAt(row);\n        var target = $(e.target);\n        \n        if (target.parent().hasClass('inline-action'))\n            target = target.parent();\n        \n        if (target.hasClass('edit-link')) {\n            var dlg = new PerformanceAppraisalTemplateDialog();\n            this.initDialog(dlg);\n\n            dlg.getID(item.Id);\n            dlg.loadEntityAndOpenDialog(<PerformanceAppraisalTemplateRow>{\n                TemplateID: item.Id\n            });\n        }\n    }\n\n    private deleteAllRecords(): void {\n        const visibleRecords = this.view.getItems().map(item => item.Id); // Get all visible record IDs\n\n        if (visibleRecords.length === 0) {\n            // console.log(\"No records to delete.\");\n            return;\n        }\n\n        confirm(\"Are you sure you want to delete all visible records?\", () => {\n            PerformanceAppraisalTemplateService.DeleteAll({\n                RecordIds: visibleRecords\n            }, response => {\n                this.refresh();\n                // console.log(\"All visible records have been deleted.\");\n            });\n        });\n    }\n}", "import {Decorators, EntityDialog, ListResponse} from '@serenity-is/corelib';\nimport {\n    PerformanceAppraisalTemplateForm,\n    PerformanceAppraisalTemplateRow,\n    PerformanceAppraisalTemplateService,\n    PerformanceAppraisalQuestionService,\n    PerformanceAppraisalFormRow,\n    PerformanceAppraisalTemplateQuestionService,\n    PerformanceAppraisalTemplateQuestionRow,\n    PerformanceAppraisalFormService,\n    PerformanceAppraisalTemplateDepartmentService,\n    PerformanceAppraisalTemplateDepartmentRow\n} from '../../../ServerTypes/PerformanceAppraisal';\nimport { DepartmentService } from \"@/ServerTypes/OrganisationHierarchy/DepartmentService\";\nimport { DepartmentRow } from \"@/ServerTypes/OrganisationHierarchy/DepartmentRow\";\nimport { confirm, alertDialog } from '@serenity-is/corelib/q';\n\n// @Decorators.panel()\n@Decorators.registerClass('HRMSoftware.PerformanceAppraisal.PerformanceAppraisalTemplateDialog')\nexport class PerformanceAppraisalTemplateDialog extends EntityDialog<PerformanceAppraisalTemplateRow, any> {\n    protected getFormKey() { return PerformanceAppraisalTemplateForm.formKey; }\n    protected getRowDefinition() { return PerformanceAppraisalTemplateRow; }\n    protected getService() { return PerformanceAppraisalTemplateService.baseUrl; }\n\n    protected form = new PerformanceAppraisalTemplateForm(this.idPrefix);\n\n    templateID: number;\n\n    public getID(templateID: number): void {\n        this.templateID = templateID;\n    }\n\n    protected onDialogOpen() {\n        super.onDialogOpen();\n\n        // this.element.closest('.ui-dialog').find('.ui-dialog-titlebar').remove();\n        this.element.closest(\".ui-dialog\").css(\"top\", \"1%\");\n\n        const container = $('<div id=\"form-container\"></div>').appendTo(this.element);\n\n        const departmentId: number[] = [];\n        const departmentName: string[] = [];\n        const questionId: number[] = [];\n        const questionText: string[] = [];\n        const answerTypeId: number[] = [];\n        const answerType: string[] = [];\n\n        DepartmentService.List({}, departmentResponse => {\n            for (let index in departmentResponse.Entities) {\n                const depart = departmentResponse.Entities[index];\n\n                departmentId.push(depart.Id);\n                departmentName.push(depart.Name);\n            }\n\n            PerformanceAppraisalQuestionService.List({}, questionResponse => {\n                for (let index in questionResponse.Entities) {\n                    const quest = questionResponse.Entities[index];\n\n                    questionId.push(quest.Id);\n                    questionText.push(quest.Questions);\n                    answerTypeId.push(quest.AnswerType);\n                    if (quest.AnswerType === 2){\n                        answerType.push(\"text\");\n                    }else if (quest.AnswerType === 3){\n                        answerType.push(\"rating\");\n                    }\n                }\n                this.displayTemplateForm(container, departmentId, departmentName, questionId, questionText, answerTypeId, answerType);\n            })\n        })\n        this.applyChangesButton.remove();\n        this.saveAndCloseButton.remove();\n        this.deleteButton.remove();\n    }\n\n    public displayTemplateForm(TemplateFormContainer: JQuery, departmentId: number[], departmentName: string[],\n                               questionId: number[], questionText: string[], answerTypeId: number[], answerType: string[]){\n\n        TemplateFormContainer.empty();\n\n        if (questionId.length > 0 && questionText.length > 0) {\n            PerformanceAppraisalTemplateService.List({\n                Criteria: [[PerformanceAppraisalTemplateRow.Fields.Id], '=', this.templateID]\n            }, response => {\n\n                if (response.Entities.length === 0) {\n                    // console.log(\"New template...\");\n                    const TemplateHtml = `\n                        <div class=\"field-row\" style=\"display: flex;\">\n                            <div class=\"field-column\" style=\"display: flex; flex-direction: column; width: 30%;\">\n                                <div class=\"field\">\n                                    <label class=\"field-label\">Duration (week):</label>\n                                    <select id=\"DurationSelect\" class=\"field-input\">\n                                        <option value=\"\" disabled selected>Select duration...</option>\n                                        <!-- Options from 1 to 10 -->\n                                        <option value=\"1\" style=\"text-align: center;\">1</option>\n                                        <option value=\"2\" style=\"text-align: center;\">2</option>\n                                        <option value=\"3\" style=\"text-align: center;\">3</option>\n                                        <option value=\"4\" style=\"text-align: center;\">4</option>\n                                        <option value=\"5\" style=\"text-align: center;\">5</option>\n                                        <option value=\"6\" style=\"text-align: center;\">6</option>\n                                        <option value=\"7\" style=\"text-align: center;\">7</option>\n                                        <option value=\"8\" style=\"text-align: center;\">8</option>\n                                        <option value=\"9\" style=\"text-align: center;\">9</option>\n                                        <option value=\"10\" style=\"text-align: center;\">10</option>\n                                    </select>\n                                </div>\n                                <div class=\"field\">\n                                    <label class=\"field-label\">Department:</label>\n                                    <div class=\"field-box\">\n                                        <div class=\"search-depart-container\">\n                                            <div class=\"close-depart-inline\">\n                                                <input type=\"text\" id=\"DepartSearch\" class=\"search-depart-box\" placeholder=\"Search department...\">\n                                                <span id=\"clearDepartSearch\" class=\"clear-depart-icon fa fa-times\"></span>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <input type=\"checkbox\" id=\"selectAll_depart\" name=\"selectAll_depart\" checked>\n                                            <label for=\"selectAll_depart\" style=\"font-weight: bold; padding-bottom: 20px;\">Select All</label>\n                                        </div>\n                                        <div class=\"depart-list-container\">\n                                            ${departmentId.map((id, i) => `\n                                                <div class=\"depart-checkbox-group\">\n                                                    <input type=\"checkbox\" id=\"department_${id}\" name=\"departments\" value=\"${id}\">\n                                                    <label for=\"department_${id}\">${departmentName[i]}</label>\n                                                </div>\n                                            `).join('')}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                   \n                            <div class=\"field-column\" style=\"display: flex; flex-direction: column; width: 70%\">\n                                <div class=\"field\">\n                                    <label class=\"field-label\">Rating Customize:</label>\n                                    <select id=\"RatingCustomize\" class=\"Rating-customize\">\n                                        <option value=\"\" disabled selected>Select number of scale...</option>\n                                        <!-- Options from 1 to 10 -->\n                                        <option value=\"1\" style=\"text-align: center;\">1</option>\n                                        <option value=\"2\" style=\"text-align: center;\">2</option>\n                                        <option value=\"3\" style=\"text-align: center;\">3</option>\n                                        <option value=\"4\" style=\"text-align: center;\">4</option>\n                                        <option value=\"5\" style=\"text-align: center;\">5</option>\n                                        <option value=\"6\" style=\"text-align: center;\">6</option>\n                                    </select>\n                                </div>\n                                <div class=\"field\">\n                                    <label for=\"QuestionList\" class=\"field-label\">Questions:</label>\n                                    <div class=\"field-box\">\n                                        <div class=\"search-container\">\n                                            <div class=\"close-inline\">\n                                                <input type=\"text\" id=\"QuestionSearch\" class=\"search-box\" placeholder=\"Search question...\">\n                                                <span id=\"clearQuestionSearch\" class=\"clear-icon fa fa-times\"></span>\n                                            </div>\n                                            <div class=\"filter-close-inline\">\n                                                <select id=\"FilterAnswerType\" class=\"field-select-filter\">\n                                                    <option value=\"\">Filter</option>\n                                                    <option value=\"text\">text</option>\n                                                    <option value=\"rating\">rating</option>\n                                                </select>\n                                                <span id=\"clearFilter\" class=\"filter-clear-icon fa fa-times\"></span>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <input type=\"checkbox\" id=\"selectAll\" name=\"selectAll\" checked>\n                                            <label for=\"selectAll\" style=\"font-weight: bold; padding-bottom: 20px;\">Select All</label>\n                                        </div>\n                                        <div class=\"question-list-container\">\n                                            ${questionId.map((id, i) => `\n                                                <div class=\"question-list\">\n                                                    <input type=\"checkbox\" id=\"Question_${id}\" name=\"QuestionList\" value=\"${id}\" checked>\n                                                    <label for=\"Question_${id}\">${questionText[i]}</label>\n                                                    <label class=\"answer-type\">${answerType[i]}</label>\n                                                    <hr style=\"color: #222222;\">\n                                                </div>`).join('')}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    `;\n\n                    const buttonContainer = $('<div></div>').prependTo(this.element);\n                    const saveButton = $('<button><i class=\"fa fa-save\"></i> Save</button>').appendTo(buttonContainer);\n\n                    buttonContainer.css({\n                        'display': 'inline-block'\n                    });\n                    saveButton.css({\n                        'position': 'relative',\n                        'border': '1px solid #b1b1b1',\n                        'background-color': 'white',\n                        'padding': '5px 9px',\n                        'border-radius': '5px',\n                        'font-size': '16px',\n                        'cursor': 'pointer',\n                        'width': '80px'\n                    });\n                    saveButton.hover(\n                        function() {\n                            $(this).css({\n                                'background-color': 'gray',\n                                'color': 'black'\n                            });\n                        },\n                        function() {\n                            $(this).css({\n                                'background-color': 'white',\n                                'color': 'black'\n                            });\n                        }\n                    );\n                    saveButton.on('click', () => this.saveData());\n\n                    $(TemplateHtml).appendTo(TemplateFormContainer);\n\n                    this.applyStyles(TemplateFormContainer);\n                    this.addSelectAllFunctionality('#selectAll', '.question-list-container input[type=\"checkbox\"]');\n                    this.addSelectAllFunctionality('#selectAll_depart', '.depart-list-container input[type=\"checkbox\"]');\n                    this.addSearchFunctionality('#QuestionSearch','#clearQuestionSearch', '.question-list-container input[type=\"checkbox\"]', questionText);\n                    this.addSearchFunctionality('#DepartSearch','#clearDepartSearch', '.depart-list-container input[type=\"checkbox\"]', departmentName);\n                    this.addFilterFunctionality('#FilterAnswerType', '.question-list-container div', answerType);\n                }else {\n                    // console.log(\"Update Template...\");\n                    const templateData = response.Entities[0];\n                    \n                    PerformanceAppraisalTemplateDepartmentService.List({\n                        Criteria:[[PerformanceAppraisalTemplateDepartmentRow.Fields.TemplateId], '=', this.templateID]\n                    }, tempDepartResponse => {\n\n                        PerformanceAppraisalTemplateQuestionService.List({\n                            Criteria: [[PerformanceAppraisalTemplateQuestionRow.Fields.TemplateId], '=', this.templateID]\n                        }, templateQuestResponse => {\n\n                            const templateDepart: number[] = [];\n                            for (const depart of tempDepartResponse.Entities) {\n                                templateDepart.push(depart.DepartmentId);\n                            }\n\n                            const templateQuest: number[] = [];\n                            for (const quests of templateQuestResponse.Entities) {\n                                templateQuest.push(quests.QuestionId);\n                            }\n\n                            const departID = templateDepart || [];\n                            const questID = templateQuest || [];\n                            const durationData = templateData.Duration || '';\n                            const ratingData = templateData.RatingScale || '';\n\n                            const TemplateHtml = `\n                                <div class=\"field-row\" style=\"display: flex;\">\n                                    <div class=\"field-column\" style=\"display: flex; flex-direction: column; width: 30%\">\n                                        <div class=\"field\">\n                                            <label class=\"field-label\">Duration (week):</label>\n                                            <select id=\"DurationSelect\" class=\"field-input\">\n                                                <option value=\"\" disabled ${durationData === '' ? 'selected' : ''}>Select duration...</option>\n                                                <!-- Options from 1 to 10 -->\n                                                <option value=\"1\" style=\"text-align: center;\" ${durationData === 1 ? 'selected' : ''}>1</option>\n                                                <option value=\"2\" style=\"text-align: center;\" ${durationData === 2 ? 'selected' : ''}>2</option>\n                                                <option value=\"3\" style=\"text-align: center;\" ${durationData === 3 ? 'selected' : ''}>3</option>\n                                                <option value=\"4\" style=\"text-align: center;\" ${durationData === 4 ? 'selected' : ''}>4</option>\n                                                <option value=\"5\" style=\"text-align: center;\" ${durationData === 5 ? 'selected' : ''}>5</option>\n                                                <option value=\"6\" style=\"text-align: center;\" ${durationData === 6 ? 'selected' : ''}>6</option>\n                                                <option value=\"7\" style=\"text-align: center;\" ${durationData === 7 ? 'selected' : ''}>7</option>\n                                                <option value=\"8\" style=\"text-align: center;\" ${durationData === 8 ? 'selected' : ''}>8</option>\n                                                <option value=\"9\" style=\"text-align: center;\" ${durationData === 9 ? 'selected' : ''}>9</option>\n                                                <option value=\"10\" style=\"text-align: center;\" ${durationData === 10 ? 'selected' : ''}>10</option>\n                                            </select>\n                                        </div>\n                                        <div class=\"field\">\n                                            <label class=\"field-label\">Department:</label>\n                                            <div class=\"field-box\">\n                                                <div class=\"search-depart-container\">\n                                                    <div class=\"close-depart-inline\">\n                                                        <input type=\"text\" id=\"DepartSearch\" class=\"search-depart-box\" placeholder=\"Search department...\">\n                                                        <span id=\"clearDepartSearch\" class=\"clear-depart-icon fa fa-times\"></span>\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    <input type=\"checkbox\" id=\"selectAll_depart\" name=\"selectAll_depart\" checked>\n                                                    <label for=\"selectAll_depart\" style=\"font-weight: bold; padding-bottom: 20px;\">Select All</label>\n                                                </div>\n                                                <div class=\"depart-list-container\">\n                                                    ${departmentId.map((id, i) => `\n                                                        <div class=\"depart-checkbox-group\">\n                                                            <input type=\"checkbox\" id=\"department_${id}\" name=\"departments\" value=\"${id}\" ${departID.includes(id) ? 'checked' : ''}>\n                                                            <label for=\"department_${id}\">${departmentName[i]}</label>\n                                                        </div>\n                                                    `).join('')}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                        \n                                    <div class=\"field-column\" style=\"display: flex; flex-direction: column; width: 70%;\">\n                                        <div class=\"field\" style=\"width: 100%;\">\n                                            <div class=\"field-column-row-content\" style=\"width: 35%; margin-right: 5px;\">\n                                                <label class=\"field-label\">Rating Customize:</label>\n                                                <select id=\"RatingCustomize\" class=\"Rating-customize-row-content\">\n                                                    <option value=\"\" disabled ${ratingData === '' ? 'selected' : ''}>Select number of scale...</option>\n                                                    <option value=\"1\" style=\"text-align: center;\" ${ratingData === 1 ? 'selected' : ''}>1</option>\n                                                    <option value=\"2\" style=\"text-align: center;\" ${ratingData === 2 ? 'selected' : ''}>2</option>\n                                                    <option value=\"3\" style=\"text-align: center;\" ${ratingData === 3 ? 'selected' : ''}>3</option>\n                                                    <option value=\"4\" style=\"text-align: center;\" ${ratingData === 4 ? 'selected' : ''}>4</option>\n                                                    <option value=\"5\" style=\"text-align: center;\" ${ratingData === 5 ? 'selected' : ''}>5</option>\n                                                    <option value=\"6\" style=\"text-align: center;\" ${ratingData === 6 ? 'selected' : ''}>6</option>\n                                                </select>\n                                            </div>\n                                            <div class=\"field-column-row-content\"style=\"width: 63%;\">\n                                                <label class=\"field-label\">Template Name:</label>\n                                                <input type=\"text\" id=\"TemplateName\" class=\"template-name\" value=\"${templateData.TemplateName}\">\n                                            </div>\n                                        </div>\n                                        <div class=\"field\">\n                                            <label for=\"QuestionList\" class=\"field-label\">Questions:</label>\n                                            <div class=\"field-box\">\n                                                <div class=\"search-container\">\n                                                    <div class=\"close-inline\">\n                                                        <input type=\"text\" id=\"QuestionSearch\" class=\"search-box\" placeholder=\"Search question...\">\n                                                        <span id=\"clearQuestionSearch\" class=\"clear-icon fa fa-times\"></span>\n                                                    </div>\n                                                    <div class=\"filter-close-inline\">\n                                                        <select id=\"FilterAnswerType\" class=\"field-select-filter\">\n                                                            <option value=\"\">Filter</option>\n                                                            <option value=\"text\">text</option>\n                                                            <option value=\"rating\">rating</option>\n                                                        </select>\n                                                        <span id=\"clearFilter\" class=\"filter-clear-icon fa fa-times\"></span>\n                                                    </div>\n                                                </div>\n                                                <div>\n                                                    <input type=\"checkbox\" id=\"selectAll\" name=\"selectAll\" checked>\n                                                    <label for=\"selectAll\" style=\"font-weight: bold; padding-bottom: 20px;\">Select All</label>\n                                                </div>\n                                                <div class=\"question-list-container\">\n                                                    ${questionId.map((id, i) => `\n                                                        <div class=\"question-list\">\n                                                            <input type=\"checkbox\" id=\"Question_${id}\" name=\"QuestionList\" value=\"${id}\" ${questID.includes(id) ? 'checked' : ''}>\n                                                            <label for=\"Question_${id}\">${questionText[i]}</label>\n                                                            <label class=\"answer-type\">${answerType[i]}</label>\n                                                            <hr style=\"color: #222222;\">\n                                                        </div>`).join('')}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                               </div>\n                           `;\n\n                            const buttonContainer = $('<div></div>').prependTo(this.element);\n                            const saveButton = $('<button><i class=\"fa fa-save\"></i> Save</button>').appendTo(buttonContainer);\n                            const delButton = $('<button><i class=\"fa fa-trash\"></i> Del</button>').appendTo(buttonContainer);\n\n                            buttonContainer.css({\n                                'display': 'inline-block'\n                            });\n                            saveButton.css({\n                                'border': '1px solid #b1b1b1',\n                                'background-color': 'white',\n                                'padding': '7px 9px',\n                                'border-radius': '5px',\n                                'font-size': '16px',\n                                'cursor': 'pointer',\n                                'width': '80px',\n                                'display': 'inline-block',\n                                'margin-right': '5px'\n                            });\n                            delButton.css({\n                                'border': '1px solid #b1b1b1',\n                                'background-color': 'white',\n                                'padding': '7px 9px',\n                                'border-radius': '5px',\n                                'font-size': '16px',\n                                'cursor': 'pointer',\n                                'width': '80px',\n                                'display': 'inline-block'\n                            });\n                            saveButton.hover(\n                                function() {\n                                    $(this).css({\n                                        'background-color': 'gray',\n                                        'color': 'black'\n                                    });\n                                },\n                                function() {\n                                    $(this).css({\n                                        'background-color': 'white',\n                                        'color': 'black'\n                                    });\n                                }\n                            );\n                            delButton.hover(\n                                function() {\n                                    $(this).css({\n                                        'background-color': 'red',\n                                        'color': 'white'\n                                    });\n                                },\n                                function() {\n                                    $(this).css({\n                                        'background-color': 'white',\n                                        'color': 'black'\n                                    });\n                                }\n                            );\n                            saveButton.on('click', () => this.updateData());\n                            delButton.on('click', () => {\n                                confirm(\"Delete record?\", () => {\n                                    this.delData();\n                                });\n                            });\n\n                            $(TemplateHtml).appendTo(TemplateFormContainer);\n                            // const answerTypeArray = ['text', 'rating'];\n\n                            this.applyStyles(TemplateFormContainer);\n                            this.addSelectAllFunctionality('#selectAll', '.question-list-container input[type=\"checkbox\"]');\n                            this.addSelectAllFunctionality('#selectAll_depart', '.depart-list-container input[type=\"checkbox\"]');\n                            this.addSearchFunctionality('#QuestionSearch','#clearQuestionSearch', '.question-list-container input[type=\"checkbox\"]', questionText);\n                            this.addSearchFunctionality('#DepartSearch','#clearDepartSearch', '.depart-list-container input[type=\"checkbox\"]', departmentName);\n                            this.addFilterFunctionality('#FilterAnswerType', '.question-list-container div', answerType);\n                            this.scrollToFirstChecked('.question-list-container input[type=\"checkbox\"]', '.depart-list-container input[type=\"checkbox\"]');\n                        })\n                    })\n                }\n            })\n        } else if (questionId.length === 0 && questionText.length === 0) {\n\n            PerformanceAppraisalTemplateService.List({\n                Criteria: [[PerformanceAppraisalTemplateRow.Fields.Id], '=', this.templateID]\n            }, response => {\n\n                const templateData = response.Entities[0];\n\n                if (response.Entities.length > 0){\n                    PerformanceAppraisalTemplateDepartmentService.List({\n                        Criteria:[[PerformanceAppraisalTemplateDepartmentRow.Fields.TemplateId], '=', this.templateID]\n                    }, tempDepartResponse => {\n\n                        const templateDepart: number[] = [];\n                        for (const depart of tempDepartResponse.Entities) {\n                            templateDepart.push(depart.DepartmentId);\n                        }\n\n                        const departID = templateDepart || [];\n                        const durationData = response.Entities[0].Duration || '';\n                        const ratingData = response[0].RatingScale || '';\n\n                        const TemplateHtml = `\n                            <div class=\"field-row\" style=\"display: flex;\">\n                                <div class=\"field-column\" style=\"display: flex; flex-direction: column;\">\n                                    <div class=\"field\">\n                                        <label class=\"field-label\">Duration (week):</label>\n                                        <select id=\"DurationSelect\" class=\"field-input\">\n                                            <option value=\"\" disabled ${durationData === '' ? 'selected' : ''}>Select duration...</option>\n                                            <!-- Options from 1 to 10 -->\n                                            <option value=\"1\" style=\"text-align: center;\" ${durationData === 1 ? 'selected' : ''}>1</option>\n                                            <option value=\"2\" style=\"text-align: center;\" ${durationData === 2 ? 'selected' : ''}>2</option>\n                                            <option value=\"3\" style=\"text-align: center;\" ${durationData === 3 ? 'selected' : ''}>3</option>\n                                            <option value=\"4\" style=\"text-align: center;\" ${durationData === 4 ? 'selected' : ''}>4</option>\n                                            <option value=\"5\" style=\"text-align: center;\" ${durationData === 5 ? 'selected' : ''}>5</option>\n                                            <option value=\"6\" style=\"text-align: center;\" ${durationData === 6 ? 'selected' : ''}>6</option>\n                                            <option value=\"7\" style=\"text-align: center;\" ${durationData === 7 ? 'selected' : ''}>7</option>\n                                            <option value=\"8\" style=\"text-align: center;\" ${durationData === 8 ? 'selected' : ''}>8</option>\n                                            <option value=\"9\" style=\"text-align: center;\" ${durationData === 9 ? 'selected' : ''}>9</option>\n                                            <option value=\"10\" style=\"text-align: center;\" ${durationData === 10 ? 'selected' : ''}>10</option>\n                                        </select>\n                                    </div>\n                                    <div class=\"field\">\n                                        <label class=\"field-label\">Department:</label>\n                                        <div class=\"field-box\">\n                                            <div class=\"search-depart-container\">\n                                                <div class=\"close-depart-inline\">\n                                                    <input type=\"text\" id=\"DepartSearch\" class=\"search-depart-box\" placeholder=\"Search department...\">\n                                                    <span id=\"clearDepartSearch\" class=\"clear-depart-icon fa fa-times\"></span>\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <input type=\"checkbox\" id=\"selectAll_depart\" name=\"selectAll_depart\" checked>\n                                                <label for=\"selectAll_depart\" style=\"font-weight: bold; padding-bottom: 20px;\">Select All</label>\n                                            </div>\n                                            <div class=\"depart-list-container\">\n                                                ${departmentId.map((id, i) => `\n                                                    <div class=\"depart-checkbox-group\">\n                                                        <input type=\"checkbox\" id=\"department_${id}\" name=\"departments\" value=\"${id}\" ${departID.includes(id) ? 'checked' : ''}>\n                                                        <label for=\"department_${id}\">${departmentName[i]}</label>\n                                                    </div>\n                                                `).join('')}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"field-column\" style=\"display: flex; flex-direction: column; width: 70%;\">\n                                    <div class=\"field\" style=\"width: 100%;\">\n                                        <div class=\"field-column-row-content\" style=\"width: 40%; margin-right: 5px;\">\n                                            <label class=\"field-label\">Rating Customize:</label>\n                                            <select id=\"RatingCustomize\" class=\"Rating-customize-row-content\">\n                                                <select id=\"RatingCustomize\" class=\"Rating-customize-row-content\">\n                                                    <option value=\"\" disabled ${ratingData === '' ? 'selected' : ''}>Select number of scale...</option>\n                                                    <option value=\"1\" style=\"text-align: center;\" ${ratingData === 1 ? 'selected' : ''}>1</option>\n                                                    <option value=\"2\" style=\"text-align: center;\" ${ratingData === 2 ? 'selected' : ''}>2</option>\n                                                    <option value=\"3\" style=\"text-align: center;\" ${ratingData === 3 ? 'selected' : ''}>3</option>\n                                                    <option value=\"4\" style=\"text-align: center;\" ${ratingData === 4 ? 'selected' : ''}>4</option>\n                                                    <option value=\"5\" style=\"text-align: center;\" ${ratingData === 5 ? 'selected' : ''}>5</option>\n                                                    <option value=\"6\" style=\"text-align: center;\" ${ratingData === 6 ? 'selected' : ''}>6</option>\n                                                </select>\n                                        </div>\n                                        <div class=\"field-column-row-content\"style=\"width: 58%;\">\n                                            <label class=\"field-label\">Template Name:</label>\n                                            <input type=\"text\" id=\"TemplateName\" class=\"template-name\" value=\"${templateData.TemplateName}\">\n                                        </div>\n                                    </div>\n                                    <div class=\"field\" >\n                                        <label for=\"QuestionList\" class=\"field-label\">Questions:</label>\n                                        <div class=\"field-box\">\n                                            <div class=\"search-container\">\n                                                <div class=\"close-inline\">\n                                                    <input type=\"text\" id=\"QuestionSearch\" class=\"search-box\" placeholder=\"Search question...\">\n                                                    <span id=\"clearQuestionSearch\" class=\"clear-icon fa fa-times\"></span>\n                                                </div>\n                                                <div class=\"filter-close-inline\">\n                                                    <select id=\"FilterAnswerType\" class=\"field-select-filter\">\n                                                        <option value=\"\">Filter</option>\n                                                        <option value=\"text\">text</option>\n                                                        <option value=\"rating\">rating</option>\n                                                    </select>\n                                                    <span id=\"clearFilter\" class=\"filter-clear-icon fa fa-times\"></span>\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <input type=\"checkbox\" id=\"selectAll\" name=\"selectAll\" checked>\n                                                <label for=\"selectAll\" style=\"font-weight: bold; padding-bottom: 20px;\">Select All</label>\n                                            </div>\n                                            <div class=\"question-list-container\">\n                                                <div id=\"warning-message\" class=\"warning-container\">\n                                                    <p class=\"warning-text\">No questions found or has been removed.</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                           </div>\n                       `;\n\n                        const buttonContainer = $('<div></div>').prependTo(this.element);\n                        const saveButton = $('<button><i class=\"fa fa-save\"></i> Save</button>').appendTo(buttonContainer);\n                        const delButton = $('<button><i class=\"fa fa-trash\"></i> Del</button>').appendTo(buttonContainer);\n\n                        buttonContainer.css({\n                            'display': 'inline-block'\n                        });\n                        saveButton.css({\n                            'border': '1px solid #b1b1b1',\n                            'background-color': 'white',\n                            'padding': '7px 9px',\n                            'border-radius': '5px',\n                            'font-size': '16px',\n                            'cursor': 'pointer',\n                            'width': '80px',\n                            'display': 'inline-block',\n                            'margin-right': '5px'\n                        });\n                        delButton.css({\n                            'border': '1px solid #b1b1b1',\n                            'background-color': 'white',\n                            'padding': '7px 9px',\n                            'border-radius': '5px',\n                            'font-size': '16px',\n                            'cursor': 'pointer',\n                            'width': '80px',\n                            'display': 'inline-block'\n                        });\n                        saveButton.hover(\n                            function() {\n                                $(this).css({\n                                    'background-color': 'gray',\n                                    'color': 'black'\n                                });\n                            },\n                            function() {\n                                $(this).css({\n                                    'background-color': 'white',\n                                    'color': 'black'\n                                });\n                            }\n                        );\n                        delButton.hover(\n                            function() {\n                                $(this).css({\n                                    'background-color': 'red',\n                                    'color': 'white'\n                                });\n                            },\n                            function() {\n                                $(this).css({\n                                    'background-color': 'white',\n                                    'color': 'black'\n                                });\n                            }\n                        );\n                        saveButton.on('click', () => this.updateData());\n                        delButton.on('click', () => {\n                            confirm(\"Delete record?\", () => {\n                                this.delData();\n                            });\n                        });\n\n                        $(TemplateHtml).appendTo(TemplateFormContainer);\n\n                        this.applyStyles(TemplateFormContainer);\n                        this.addSelectAllFunctionality('#selectAll', '.question-list-container input[type=\"checkbox\"]');\n                        this.addSelectAllFunctionality('#selectAll_depart', '.depart-list-container input[type=\"checkbox\"]');\n                        this.addSearchFunctionality('#QuestionSearch','#clearQuestionSearch', '.question-list-container input[type=\"checkbox\"]', questionText);\n                        this.addSearchFunctionality('#DepartSearch','#clearDepartSearch', '.depart-list-container input[type=\"checkbox\"]', departmentName);\n                        this.addFilterFunctionality('#FilterAnswerType', '.question-list-container div', answerType);\n                        this.scrollToFirstChecked('.question-list-container input[type=\"checkbox\"]', '.depart-list-container input[type=\"checkbox\"]');\n\n                    });\n\n                } else {\n\n                    const templateData = response.Entities[0];\n\n                    PerformanceAppraisalTemplateDepartmentService.List({\n                        Criteria:[[PerformanceAppraisalTemplateDepartmentRow.Fields.TemplateId], '=', this.templateID]\n                    }, tempDepartResponse => {\n                        const templateDepart: number[] = [];\n                        for (const depart of tempDepartResponse.Entities) {\n                            templateDepart.push(depart.DepartmentId);\n                        }\n\n                        const departID = templateDepart || [];\n                        const ratingData = templateData.RatingScale || [];\n\n                        const TemplateHtml = `\n                            <div class=\"field-row\" style=\"display: flex;\">\n                                <div class=\"field-column\" style=\"display: flex; flex-direction: column;\">\n                                    <div class=\"field\">\n                                        <label class=\"field-label\">Duration (week):</label>\n                                        <select id=\"DurationSelect\" class=\"field-input\">\n                                            <option value=\"\" disabled selected>Select duration...</option>\n                                            <!-- Options from 1 to 10 -->\n                                            <option value=\"1\" style=\"text-align: center;\">1</option>\n                                            <option value=\"2\" style=\"text-align: center;\">2</option>\n                                            <option value=\"3\" style=\"text-align: center;\">3</option>\n                                            <option value=\"4\" style=\"text-align: center;\">4</option>\n                                            <option value=\"5\" style=\"text-align: center;\">5</option>\n                                            <option value=\"6\" style=\"text-align: center;\">6</option>\n                                            <option value=\"7\" style=\"text-align: center;\">7</option>\n                                            <option value=\"8\" style=\"text-align: center;\">8</option>\n                                            <option value=\"9\" style=\"text-align: center;\">9</option>\n                                            <option value=\"10\" style=\"text-align: center;\">10</option>\n                                        </select>\n                                    </div>\n                                    <div class=\"field\">\n                                        <label class=\"field-label\">Department:</label>\n                                        <div class=\"field-box\">\n                                            <div class=\"search-depart-container\">\n                                                <div class=\"close-depart-inline\">\n                                                    <input type=\"text\" id=\"DepartSearch\" class=\"search-depart-box\" placeholder=\"Search department...\">\n                                                    <span id=\"clearDepartSearch\" class=\"clear-depart-icon fa fa-times\"></span>\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <input type=\"checkbox\" id=\"selectAll_depart\" name=\"selectAll_depart\" checked>\n                                                <label for=\"selectAll_depart\" style=\"font-weight: bold; padding-bottom: 20px;\">Select All</label>\n                                            </div>\n                                            <div class=\"depart-list-container\">\n                                                ${departmentId.map((id, i) => `\n                                                    <div class=\"depart-checkbox-group\">\n                                                        <input type=\"checkbox\" id=\"department_${id}\" name=\"departments\" value=\"${id}\" ${departID.includes(id) ? 'checked' : ''}>\n                                                        <label for=\"department_${id}\">${departmentName[i]}</label>\n                                                    </div>\n                                                `).join('')}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"field-column\" style=\"display: flex; flex-direction: column; width: 70%\">\n                                    <div class=\"field\">\n                                        <label class=\"field-label\">Rating Customize:</label>\n                                        <select id=\"RatingCustomize\" class=\"Rating-customize\">\n                                            <select id=\"RatingCustomize\" class=\"Rating-customize-row-content\">\n                                                <option value=\"\" disabled ${ratingData === '' ? 'selected' : ''}>Select number of scale...</option>\n                                                <!-- Options from 1 to 10 -->\n                                                <option value=\"1\" style=\"text-align: center;\" ${ratingData === 1 ? 'selected' : ''}>1</option>\n                                                <option value=\"2\" style=\"text-align: center;\" ${ratingData === 2 ? 'selected' : ''}>2</option>\n                                                <option value=\"3\" style=\"text-align: center;\" ${ratingData === 3 ? 'selected' : ''}>3</option>\n                                                <option value=\"4\" style=\"text-align: center;\" ${ratingData === 4 ? 'selected' : ''}>4</option>\n                                                <option value=\"5\" style=\"text-align: center;\" ${ratingData === 5 ? 'selected' : ''}>5</option>\n                                                <option value=\"6\" style=\"text-align: center;\" ${ratingData === 6 ? 'selected' : ''}>6</option>\n                                            </select>\n                                        </select>\n                                    </div>\n                                    <div class=\"field\">\n                                        <label for=\"QuestionList\" class=\"field-label\">Questions:</label>\n                                        <div class=\"field-box\">\n                                            <div class=\"search-container\">\n                                                <div class=\"close-inline\">\n                                                    <input type=\"text\" id=\"QuestionSearch\" class=\"search-box\" placeholder=\"Search question...\">\n                                                    <span id=\"clearQuestionSearch\" class=\"clear-icon fa fa-times\"></span>\n                                                </div>\n                                                <div class=\"filter-close-inline\">\n                                                    <select id=\"FilterAnswerType\" class=\"field-select-filter\">\n                                                        <option value=\"\">Filter</option>\n                                                        <option value=\"text\">text</option>\n                                                        <option value=\"rating\">rating</option>\n                                                    </select>\n                                                    <span id=\"clearFilter\" class=\"filter-clear-icon fa fa-times\"></span>\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <input type=\"checkbox\" id=\"selectAll\" name=\"selectAll\" checked>\n                                                <label for=\"selectAll\" style=\"font-weight: bold; padding-bottom: 20px;\">Select All</label>\n                                            </div>\n                                            <div class=\"question-list-container\">\n                                                <div id=\"warning-message\" class=\"warning-container\">\n                                                    <p class=\"warning-text\">No questions found or has been removed.</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                           </div>\n                       `;\n\n                        const buttonContainer = $('<div></div>').prependTo(this.element);\n                        const saveButton = $('<button><i class=\"fa fa-save\"></i> Save</button>').appendTo(buttonContainer);\n\n                        buttonContainer.css({\n                            'display': 'inline-block'\n                        });\n                        saveButton.css({\n                            'position': 'relative',\n                            'border': '1px solid #b1b1b1',\n                            'background-color': 'white',\n                            'padding': '5px 9px',\n                            'border-radius': '5px',\n                            'font-size': '16px',\n                            'cursor': 'pointer',\n                            'width': '80px'\n                        });\n                        saveButton.hover(\n                            function() {\n                                $(this).css({\n                                    'background-color': 'gray',\n                                    'color': 'black'\n                                });\n                            },\n                            function() {\n                                $(this).css({\n                                    'background-color': 'white',\n                                    'color': 'black'\n                                });\n                            }\n                        );\n                        saveButton.on('click', () => this.saveData());\n\n                        $(TemplateHtml).appendTo(TemplateFormContainer);\n\n                        this.applyStyles(TemplateFormContainer);\n                        this.addSelectAllFunctionality('#selectAll', '.question-list-container input[type=\"checkbox\"]');\n                        this.addSelectAllFunctionality('#selectAll_depart', '.depart-list-container input[type=\"checkbox\"]');\n                        this.addSearchFunctionality('#QuestionSearch','#clearQuestionSearch', '.question-list-container input[type=\"checkbox\"]', questionText);\n                        this.addSearchFunctionality('#DepartSearch','#clearDepartSearch', '.depart-list-container input[type=\"checkbox\"]', departmentName);\n                        this.addFilterFunctionality('#FilterAnswerType', '.question-list-container div', answerType);\n                        this.scrollToFirstChecked('.question-list-container input[type=\"checkbox\"]', '.depart-list-container input[type=\"checkbox\"]');\n                    });\n                }\n            });\n        }\n    }\n\n    public applyStyles(container: JQuery): void {\n        container.find('.warning-container').css({\n            'border': '1px solid #ffcc00',\n            'background-color': '#fff3cd',\n            'color': '#856404',\n            'padding': '15px',\n            'margin': '5px auto',\n            'margin-bottom': '40px',\n            'border-radius': '5px',\n            'font-family': 'Arial, sans-serif',\n            'font-size': '16px',\n            'text-align': 'center',\n            'width': '60%',\n            'box-sizing': 'border-box'\n        });\n        container.find('.warning-text').css({\n            'text-align': 'center',\n            'margin': '5px auto'\n        });\n        container.find('.field').css({\n            'border-radius': '5px',\n            'box-sizing': 'border-box',\n            'display': 'inline-block',\n            'vertical-align': 'top'\n        });\n        container.find('.field-column-row').css({\n            'display': 'flex',\n            'justify-content': 'space-between',\n            'margin-bottom': '10px',\n            'width': '100%',\n            'margin-top': '1%',\n            'margin-left': '2%'\n        });\n        container.find('.field-column-row-content').css({\n            'border-radius': '5px',\n            'box-sizing': 'border-box',\n            'display': 'inline-block',\n            'vertical-align': 'top'\n        });\n        container.find('.Rating-customize-row-content').css({\n            'height': '40px',\n            'width': '95%'\n        });\n        container.find('.field-label').css({\n            'font-weight': 'bold',\n            'color': '#000000',\n            'margin-bottom': '10px',\n            'display': 'block'\n        });\n        container.find('.field-select').css({\n            'width': '30%',\n            'padding': '8px',\n            'border': '1px solid #ccc',\n            'border-radius': '4px',\n            'font-size': '14px',\n            'box-sizing': 'border-box'\n        });\n        container.find('.field-row').css({\n            'display': 'flex',\n            'justify-content': 'space-between',\n            'margin-bottom': '20px',\n            'width': '100%'\n        });\n        container.find('.column-field-row').css({\n            'display': 'flex',\n            'flex-direction': 'row',\n            'justify-content': 'space-between',\n            'width': '100%'\n        });\n        container.find('.date-field-row').css({\n            'display': 'flex',\n            'justify-content': 'space-between',\n            'padding-bottom': '70px',\n            'width': '100%'\n        });\n        container.find('.field-box').css({\n            'border': '1px solid #ddd',\n            'border-radius': '5px',\n            'padding': '10px',\n            'background-color': '#f9f9f9',\n            'overflow-y': 'hidden',\n            'display': 'flex',\n            'flex-direction': 'column'\n        });\n        container.find('.template-name').css({\n            'width': '100%', // Full width of the parent container\n            'padding': '8px 8px 8px 8px', // Add padding-right to make room for the clear icon inside the search box\n            'border': '1px solid #ccc',\n            'border-radius': '4px',\n            'font-size': '14px',\n            'box-sizing': 'border-box',\n            'height': '40px',\n        });\n        container.find('.close-inline').css({\n            'position': 'relative',\n            'display': 'inline-block',\n            'width': '80%', // Adjust width to allow the search box and icon to fit properly\n        });\n        container.find('.close-depart-inline').css({\n            'position': 'relative',\n            'display': 'inline-block',\n            'width': '100%'\n        });\n        container.find('.field-input').css({\n            'height': '40px',\n            'width': '100%'\n        });\n        container.find('.Rating-customize').css({\n            'height': '40px',\n            'width': '40%'\n        });\n        container.find('.search-box').css({\n            'width': '100%', // Full width of the parent container\n            'padding': '8px 30px 8px 8px', // Add padding-right to make room for the clear icon inside the search box\n            'border': '1px solid #ccc',\n            'border-radius': '4px',\n            'font-size': '14px',\n            'margin-bottom': '10px',\n            'box-sizing': 'border-box'\n        });\n        container.find('.search-depart-box').css({\n            'width': '100%', // Full width of the parent container\n            'padding': '8px 30px 8px 8px', // Add padding-right to make room for the clear icon inside the search box\n            'border': '1px solid #ccc',\n            'border-radius': '4px',\n            'font-size': '14px',\n            'margin-bottom': '10px',\n            'box-sizing': 'border-box'\n        });\n        container.find('.clear-icon').css({\n            'position': 'absolute',\n            'right': '10px', // Position to the right inside the search box\n            'top': '40%',\n            'transform': 'translateY(-50%)',\n            'cursor': 'pointer',\n            'font-size': '16px',\n            'color': 'red', // Set the color to red\n            'display': 'none', // Initially hidden, will be shown when there's input\n            'z-index': '1' // Ensure the icon is above the search box content\n        });\n        container.find('.clear-depart-icon').css({\n            'position': 'absolute',\n            'right': '10px', // Position to the right inside the search box\n            'top': '40%',\n            'transform': 'translateY(-50%)',\n            'cursor': 'pointer',\n            'font-size': '16px',\n            'color': 'red', // Set the color to red\n            'display': 'none', // Initially hidden, will be shown when there's input\n            'z-index': '1' // Ensure the icon is above the search box content\n        });\n        container.find('.filter-close-inline').css({\n            'position': 'relative',\n            'display': 'inline-block',\n            'width': '18%', // Ensure the width is sufficient for both the select box and the clear icon\n        });\n        container.find('.field-select-filter').css({\n            'width': '100%', // Adjust width to account for the clear icon\n            'padding': '8px',\n            'border': '1px solid #ccc',\n            'border-radius': '4px',\n            'font-size': '14px',\n            'margin-bottom': '10px',\n            'box-sizing': 'border-box', // Ensure padding doesn't affect the total width\n        });\n        container.find('.filter-clear-icon').css({\n            'position': 'absolute',\n            'right': '20px', // Position to the right inside the search box\n            'top': '25%',\n            // 'transform': 'translateY(-50%)',\n            'cursor': 'pointer',\n            'font-size': '16px',\n            'color': 'red', // Set the color to red\n            'z-index': '1' // Ensure the icon is above the search box content\n        });\n        container.find('.question-list-container').css({\n            'flex-grow': '1', // Allow the list container to take up the remaining space\n            'height': '300px',\n            'overflow-y': 'auto' // Allow scrolling only within the list container\n        });\n        container.find('.answer-type').css({\n            'width': '100px',\n            'text-align': 'right',\n            'flex-shrink': '0',\n            'margin-right': '10px'\n        });\n        container.find('.column-header').css({\n            'width': '100px', // Adjust width as needed\n            'text-align': 'right',\n            'flex-shrink': '0',\n            'margin-right': '10px'\n        })\n        container.find('.question-list-container div').css({\n            'display': 'flex',\n            'align-items': 'flex-start',\n            'margin-bottom': '10px'\n        });\n        container.find('input[type=\"checkbox\"]').css({\n            'margin-right': '10px',\n            'flex-shrink': '0',\n            'align-self': 'flex-start', // Align the checkbox to the top\n            'width': '20px',\n            'height': '20px'\n        });\n        container.find('.field-box label').css({\n            'word-wrap': 'break-word', // Allow text to wrap within the label\n            'white-space': 'normal', // Ensure that text wraps normally\n            'flex-grow': '1' // Allow label to take up remaining space\n        });\n        container.find('.depart-list-container').css({\n            'flex-grow': '1',\n            'height': '300px', // Set height for scrolling\n            'overflow-y': 'auto'\n        });\n        container.find('.checkbox-group').css({\n            'display': 'flex',\n            'align-items': 'center',\n            'box-sizing': 'border-box'\n        });\n        container.find('.depart-checkbox-group').css({\n            'display': 'flex',\n            'align-items': 'center',\n            'box-sizing': 'border-box'\n        });\n        container.find('.checkbox-group input[type=\"checkbox\"]').css({\n            'margin-right': '8px',\n            'width': '20px',\n            'height': '20px'\n        });\n        container.find('.depart-checkbox-group input[type=\"checkbox\"]').css({\n            'margin-right': '8px',\n            'margin-bottom': '20px',\n            'width': '20px',\n            'height': '20px'\n        });\n        container.find('.checkbox-group label').css({\n            'font-size': '14px',\n            'color': '#333'\n        });\n\n    }\n\n    private scrollToFirstChecked(QuestionlistItemSelector: string, DepartlistItemSelector: string) {\n        const questCheckedItems = this.element.find(`${QuestionlistItemSelector}:checked`);\n        const departCheckedItems = this.element.find(`${DepartlistItemSelector}:checked`);\n\n        if (departCheckedItems.length > 0) {\n            departCheckedItems[0].scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n            });\n        }\n\n        if (questCheckedItems.length > 0) {\n            setTimeout(() => {\n                questCheckedItems[0].scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center'\n                });\n            }, 800);\n        }\n    }\n\n    public addSearchFunctionality(searchBoxSelector: string, clearButtonSelector: string, listItemSelector: string, itemList: string[]): void {\n        const searchBox = $(searchBoxSelector);\n        const clearButton = $(clearButtonSelector);\n\n        function updateClearButton() {\n            if (searchBox.val()) {\n                clearButton.show();\n            } else {\n                clearButton.hide();\n            }\n        }\n\n        $(searchBoxSelector).on('input', function () {\n            const query = $(this).val()?.toString().toLowerCase() || '';\n            let found = false;\n\n            const regex = new RegExp('\\\\b' + query + '\\\\b', 'i');\n\n            $(listItemSelector).each(function (index) {\n                const label = itemList[index] ? itemList[index].toLowerCase() : '';\n                const element = $(this).closest('div');\n\n                if ((label.includes(query) || regex.test(label)) && query.length > 0) {\n                    element.css('background-color', '#d1e7fd');\n\n                    if (!found) {\n                        // Scroll the list container to the first matching item\n                        element[0].scrollIntoView({\n                            behavior: 'smooth',\n                            block: 'center'\n                        });\n                        found = true;\n                    }\n\n                } else {\n                    element.css('background-color', '');\n                }\n            });\n\n            if (!found) {\n                $(listItemSelector).closest('div').css('background-color', '');\n            }\n            updateClearButton();\n        });\n\n        clearButton.on('click', function () {\n            searchBox.val('').trigger('input');\n            clearButton.hide();\n        });\n\n        updateClearButton();\n    }\n\n    public addFilterFunctionality(filterSelector: string, listItemSelector: string, answerTypeList: string[]): void {\n        const filterSelect = $(filterSelector);\n        const clearButton = $('#clearFilter');\n\n        // Function to show or hide the clear button\n        function updateClearButton() {\n            if (filterSelect.val()) {\n                clearButton.show();\n            } else {\n                clearButton.hide();\n            }\n        }\n\n        // Handle filter change event\n        $(filterSelect).on('change', function () {\n            const selectedFilter = $(this).val()?.toString().toLowerCase() || '';\n\n            $(listItemSelector).each(function (index) {\n                const element = $(this).closest('div');\n                const answerType = answerTypeList[index] ? answerTypeList[index].toLowerCase() : '';\n\n                if (selectedFilter === '' || answerType === selectedFilter) {\n                    element.show();\n                } else {\n                    element.hide();\n                }\n            });\n\n            updateClearButton();\n        });\n\n        clearButton.on('click', function () {\n            filterSelect.val('').trigger('change');\n            $(listItemSelector).closest('div').show();\n            clearButton.hide();\n        });\n\n        updateClearButton();\n    }\n\n    public addSelectAllFunctionality(selectAllSelector: string, listItemSelector: string): void {\n        const selectAllCheckbox = $(selectAllSelector);\n\n        selectAllCheckbox.on('change', function () {\n            const isChecked = $(this).is(':checked');\n\n            const visibleCheckboxes = $(listItemSelector).filter(':visible');\n            visibleCheckboxes.prop('checked', isChecked);\n        });\n\n        $(listItemSelector).on('change', function () {\n            const visibleCheckboxes = $(listItemSelector).filter(':visible');\n            const allVisibleChecked = visibleCheckboxes.length === visibleCheckboxes.filter(':checked').length;\n\n            selectAllCheckbox.prop('checked', allVisibleChecked);\n        });\n\n        const visibleCheckboxes = $(listItemSelector).filter(':visible');\n        const allVisibleChecked = visibleCheckboxes.length === visibleCheckboxes.filter(':checked').length;\n\n        selectAllCheckbox.prop('checked', allVisibleChecked);\n    }\n\n    private fetchDepartmentNames(departIds: string[]): Promise<string[]> {\n\n        const promises = departIds.map(id =>\n            DepartmentService.List({\n                Criteria: [[DepartmentRow.Fields.Id], '=', id]\n            }).then(departResponse => {\n                if (departResponse.Entities.length > 0) {\n                    return departResponse.Entities[0].Name;\n                } else {\n                    return '';\n                }\n            }).catch(error => {\n                console.error(\"Error fetching department:\", error);\n                return '';\n            })\n        );\n\n        return Promise.all(promises);\n    }\n\n    public isEmptyOrNull(value: any): boolean {\n        return value === null || value === undefined || value === '';\n    }\n\n    public saveData(): void {\n        const templateData = [];\n\n        if (this.validateForm()) {\n\n            const duration = $('#DurationSelect').val() || '';\n            const rating = $('#RatingCustomize').val() || '';\n\n            const departIds = [];\n            $('input[name=\"departments\"]:checked').each((index, checkbox) => {\n                const departId = $(checkbox).val() || '';\n                departIds.push(departId);\n            });\n\n            const questIds = [];\n            $('input[name=\"QuestionList\"]:checked').each((index, checkbox) => {\n                const questId = $(checkbox).val() || '';\n                questIds.push(questId);\n            });\n\n            function formatDate(dateString: string): string {\n                const date = new Date(dateString);\n                const day = String(date.getDate()).padStart(2, '0');\n                const monthNames = [\n                    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n                    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n                ];\n                const month = monthNames[date.getMonth()];\n                const year = date.getFullYear();\n                const hours = String(date.getHours()).padStart(2, '0');\n                const minutes = String(date.getMinutes()).padStart(2, '0');\n                const seconds = String(date.getSeconds()).padStart(2, '0');\n\n                return `${day} ${month} ${year} ${hours}:${minutes}:${seconds}`;\n            }\n\n            const currentDateTime = new Date().toLocaleString('en-US', { timeZone: 'Asia/Kuala_Lumpur' });\n            const formattedDateTime = formatDate(currentDateTime);\n\n            this.fetchDepartmentNames(departIds).then(departmentNamesList => {\n                const departmentNamesString = departmentNamesList.filter(name => name).join(' '); // Join with '_' and filter out empty names\n                const templateName = `Template (${departmentNamesString}) ${formattedDateTime}`;\n\n                templateData.push({\n                    TemplateName: templateName,\n                    Duration: duration,\n                    RatingScale: rating\n                });\n\n                if (this.isNew()) {\n                    PerformanceAppraisalTemplateService.Create({\n                        Entity: templateData[0]\n                    }).then(templateResponse => {\n                        const newTemplateId = templateResponse.EntityId;\n                        departIds.forEach(departId => {\n                            PerformanceAppraisalTemplateDepartmentService.Create({\n                                Entity: {\n                                    TemplateId: newTemplateId,\n                                    DepartmentId: departId\n                                }\n                            }).then(tempDepartResponse => {\n                                console.log(\"Template Department saved...\");\n                            }).catch(error => {\n                                console.error(\"Error saving template department:\", error);\n                            });\n                        });\n                        questIds.forEach(questId => {\n                            PerformanceAppraisalTemplateQuestionService.Create({\n                                Entity: {\n                                    TemplateId: newTemplateId,\n                                    QuestionId: questId\n                                }\n                            }).then(tempQuestResponse => {\n                                console.log(\"Template Question saved...\");\n\n                                setTimeout(() => {\n                                    this.dialogClose();\n                                    window.location.reload();\n                                }, 1000);\n                            }).catch(error => {\n                                console.error(\"Error saving template question:\", error);\n                            });\n                        });\n                    })\n                }\n            });\n        }\n    }\n\n    public updateData(): void {\n        const templateData = [];\n\n        if (this.validateForm()) {\n            const duration = $('#DurationSelect').val() || '';\n            const templateName = $('#TemplateName').val() || '';\n            const rating = $('#RatingCustomize').val() || '';\n\n            const departIds = [];\n            $('input[name=\"departments\"]:checked').each((index, checkbox) => {\n                const departId = $(checkbox).val() || '';\n                departIds.push(departId);\n            });\n\n            const questIds = [];\n            $('input[name=\"QuestionList\"]:checked').each((index, checkbox) => {\n                const questId = $(checkbox).val() || '';\n                questIds.push(questId);\n            });\n\n            templateData.push({\n                TemplateName: templateName,\n                Duration: duration,\n                RatingScale: rating\n            });\n\n            PerformanceAppraisalTemplateService.List({\n                Criteria: [[PerformanceAppraisalTemplateRow.Fields.Id], '=', this.templateID]\n            }).then((response: ListResponse<any>) => {\n\n                if (response.Entities.length > 0) {\n                    templateData[0].Id = this.templateID;\n\n                    PerformanceAppraisalTemplateService.Update({\n                        Entity: templateData[0]\n                    }).then(templateResponse => {\n                        \n                        PerformanceAppraisalTemplateDepartmentService.List({\n                            Criteria: [[PerformanceAppraisalTemplateDepartmentRow.Fields.TemplateId], '=', this.templateID]\n                        }).then((tempDepartResponse: ListResponse<any>) => {\n\n                            tempDepartResponse.Entities.forEach((existingTempDepart, index) => {\n                                const tempDepartment = departIds[index];\n\n                                if (tempDepartment) {\n                                    PerformanceAppraisalTemplateDepartmentService.Update({\n                                        Entity: {\n                                            Id: existingTempDepart.Id,\n                                            TemplateId: this.templateID,\n                                            DepartmentId: tempDepartment\n                                        }\n                                    }).then(templateDepartmentUpdateResponse => {\n                                        console.log(\"Template Department updated ...\", templateDepartmentUpdateResponse);\n                                    }).catch(error => {\n                                        console.error(\"Error updating template department:\", error);\n                                    });\n\n                                } else {\n                                    PerformanceAppraisalTemplateDepartmentService.Delete({\n                                        EntityId: existingTempDepart.Id\n                                    }).then(() => {\n                                        console.log(\"Template Department deleted ...\");\n                                    }).catch(error => {\n                                        console.error(\"Error deleting template department:\", error);\n                                    });\n                                }\n                            })\n\n                            for (let i = tempDepartResponse.Entities.length; i < departIds.length; i++) {\n                                const templateDepart = departIds[i];\n                                PerformanceAppraisalTemplateDepartmentService.Create({\n                                    Entity: {\n                                        TemplateId: this.templateID,\n                                        DepartmentId: templateDepart\n                                    }\n                                }).then(templateDepartmentCreateResponse => {\n                                    console.log(\"New template department ...\", templateDepartmentCreateResponse);\n                                }).catch(error => {\n                                    console.error(\"Error creating new template department:\", error);\n                                });\n                            }\n                        }).catch(error => {\n                            console.error(\"Error retrieving template department data:\", error);\n                        });\n\n                        PerformanceAppraisalTemplateQuestionService.List({\n                            Criteria: [[PerformanceAppraisalTemplateQuestionRow.Fields.TemplateId], '=', this.templateID]\n                        }).then((tempQuestResponse: ListResponse<any>) => {\n\n                            tempQuestResponse.Entities.forEach((existingTempQuest, index) => {\n                                const tempQuestion = questIds[index];\n\n                                if (tempQuestion) {\n                                    PerformanceAppraisalTemplateQuestionService.Update({\n                                        Entity: {\n                                            Id: existingTempQuest.Id,\n                                            TemplateId: this.templateID,\n                                            QuestionId: tempQuestion\n                                        }\n                                    }).then(templateQuestionUpdateResponse => {\n                                        console.log(\"Template Question updated ...\", templateQuestionUpdateResponse);\n                                    }).catch(error => {\n                                        console.error(\"Error updating template question:\", error);\n                                    });\n                                } else {\n                                    PerformanceAppraisalTemplateQuestionService.Delete({\n                                        EntityId: existingTempQuest.Id\n                                    }).then(() => {\n                                        console.log(\"Template Question deleted ...\");\n                                    }).catch(error => {\n                                        console.error(\"Error deleting template question:\", error);\n                                    });\n                                }\n                            });\n\n                            for (let i = tempQuestResponse.Entities.length; i < questIds.length; i++) {\n                                const templateQuest = questIds[i];\n                                PerformanceAppraisalTemplateQuestionService.Create({\n                                    Entity: {\n                                        TemplateId: this.templateID,\n                                        QuestionId: templateQuest\n                                    }\n                                }).then(templateQuestionCreateResponse => {\n                                    console.log(\"New template question ...\", templateQuestionCreateResponse);\n\n                                }).catch(error => {\n                                    console.error(\"Error creating new template question:\", error);\n                                });\n                            }\n\n                        }).catch(error => {\n                            console.error(\"Error retrieving template question data:\", error);\n                        });\n\n                    })\n\n                    setTimeout(() => {\n                        this.dialogClose();\n                        window.location.reload();\n                    }, 1000);\n                }\n            });\n        }\n    }\n\n    public delData(): void {\n\n        PerformanceAppraisalTemplateService.List({\n            Criteria: [[PerformanceAppraisalTemplateRow.Fields.Id], '=', this.templateID]\n        }, response => {\n\n            if (response.Entities.length > 0) {\n\n                PerformanceAppraisalFormService.List({\n                    Criteria: [[PerformanceAppraisalFormRow.Fields.TemplateId], '=', this.templateID]\n                }, resResponse => {\n\n                    if (resResponse.Entities.length === 0){\n                        const templateData = response.Entities[0];\n\n                        PerformanceAppraisalTemplateService.Delete({\n                            EntityId: templateData.Id\n                        }).then(deleteResponse => {\n                            console.log('Deleted PerformanceAppraisalTemplate successfully:', deleteResponse);\n\n                            PerformanceAppraisalTemplateQuestionService.List({\n                                Criteria: [[PerformanceAppraisalTemplateQuestionRow.Fields.TemplateId], '=', this.templateID]\n                            }, tempQuestResponse => {\n\n                                if (tempQuestResponse.Entities.length > 0) {\n                                    const deletePromises = [];\n\n                                    for (const tempQuestData of tempQuestResponse.Entities) {\n                                        const deletePromise = PerformanceAppraisalTemplateQuestionService.Delete({\n                                            EntityId: tempQuestData.Id\n                                        }).then(deleteResponse => {\n                                            console.log(`Deleted PerformanceAppraisalTemplateQuestion ID ${tempQuestData.Id} successfully.`, deleteResponse);\n                                        }).catch(error => {\n                                            console.error(`Error deleting PerformanceAppraisalTemplateQuestion ID ${tempQuestData.Id}:`, error);\n                                        });\n                                        deletePromises.push(deletePromise);\n                                    }\n                                } else {\n                                    console.log('No PerformanceAppraisalTemplateQuestion found with the given formID');\n                                }\n                            }).catch(error => {\n                                console.error('Error fetching PerformanceAppraisalTemplateQuestion:', error);\n                            });\n                        }).catch(error => {\n                            console.error('Error deleting PerformanceAppraisalTemplate:', error);\n                        });\n                    } else{\n                        alertDialog(\"This template is currently in use and cannot be deleted.\");\n                    }\n                })\n\n            } else {\n                console.log('No PerformanceAppraisalTemplate found with the given formID');\n            }\n        }).catch(error => {\n            console.error('Error fetching PerformanceAppraisalTemplate:', error);\n        });\n\n        setTimeout(() => {\n            this.dialogClose();\n            window.location.reload();\n        }, 2000);\n    }\n\n    public validateForm(): boolean {\n        let isValid = true;\n        let hasError = false;\n\n        const ratingField = $('#RatingCustomize').val() || '';\n        if (this.isEmptyOrNull(ratingField)) {\n            isValid = false;\n            hasError = true;\n            $('#RatingCustomize').addClass('error');\n        } else {\n            $('#RatingCustomize').removeClass('error');\n        }\n\n        const durationNum = $('#DurationSelect').val() || '';\n        if (this.isEmptyOrNull(durationNum)) {\n            isValid = false;\n            hasError = true;\n            $('#DurationSelect').addClass('error');\n        } else {\n            $('#DurationSelect').removeClass('error');\n        }\n\n        const selectedDepartments = $('input[name=\"departments\"]:checked');\n        if (selectedDepartments.length === 0) {\n            isValid = false;\n            hasError = true;\n            console.log(\"No departments selected.\");\n            $('.DepartmentContainer').addClass('error');\n        } else {\n            $('.DepartmentContainer').removeClass('error');\n        }\n\n        const selectedQuestions = $('input[name=\"QuestionList\"]:checked');\n        if (selectedQuestions.length === 0) {\n            isValid = false;\n            hasError = true;\n            $('.question-list-container').addClass('error');\n        } else {\n            $('.question-list-container').removeClass('error');\n        }\n\n        if (hasError) {\n            alertDialog(\"Please fill in all required fields.\");\n        }\n\n        return isValid;\n    }\n\n}"],
  "mappings": "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",
  "names": ["import_q", "import_corelib", "import_corelib", "import_q", "PerformanceAppraisalTemplateDialog", "PerformanceAppraisalTemplateForm", "PerformanceAppraisalTemplateRow", "PerformanceAppraisalTemplateService", "templateID", "container", "departmentId", "departmentName", "questionId", "questionText", "answerTypeId", "answerType", "DepartmentService", "departmentResponse", "index", "depart", "PerformanceAppraisalQuestionService", "questionResponse", "quest", "TemplateFormContainer", "response", "TemplateHtml", "id", "i", "buttonContainer", "saveButton", "templateData", "PerformanceAppraisalTemplateDepartmentService", "PerformanceAppraisalTemplateDepartmentRow", "tempDepartResponse", "PerformanceAppraisalTemplateQuestionService", "PerformanceAppraisalTemplateQuestionRow", "templateQuestResponse", "templateDepart", "templateQuest", "quests", "departID", "questID", "durationData", "ratingData", "delButton", "QuestionlistItemSelector", "DepartlistItemSelector", "questCheckedItems", "departCheckedItems", "searchBoxSelector", "clearButtonSelector", "listItemSelector", "itemList", "searchBox", "clearButton", "updateClearButton", "__name", "_a", "query", "found", "regex", "label", "element", "filterSelector", "answerTypeList", "filterSelect", "selectedFilter", "selectAllSelector", "selectAllCheckbox", "isChecked", "visibleCheckboxes", "allVisibleChecked", "departIds", "promises", "DepartmentRow", "departResponse", "error", "value", "formatDate", "dateString", "date", "day", "month", "year", "hours", "minutes", "seconds", "duration", "rating", "checkbox", "departId", "questIds", "questId", "currentDateTime", "formattedDateTime", "departmentNamesList", "templateName", "name", "templateResponse", "newTemplateId", "tempQuestResponse", "existingTempDepart", "tempDepartment", "templateDepartmentUpdateResponse", "templateDepartmentCreateResponse", "existingTempQuest", "tempQuestion", "templateQuestionUpdateResponse", "templateQuestionCreateResponse", "PerformanceAppraisalFormService", "PerformanceAppraisalFormRow", "resResponse", "deleteResponse", "deletePromises", "tempQuestData", "deletePromise", "isValid", "hasError", "ratingField", "durationNum", "__decorateClass", "import_q", "PerformanceAppraisalTemplateGrid", "PerformanceAppraisalTemplateColumns", "PerformanceAppraisalTemplateDialog", "PerformanceAppraisalTemplateRow", "PerformanceAppraisalTemplateService", "container", "response", "buttons", "columns", "ctx", "e", "row", "cell", "item", "target", "dlg", "visibleRecords", "__name", "__decorateClass", "pageInit", "PerformanceAppraisalTemplateGrid", "__name"]
}
