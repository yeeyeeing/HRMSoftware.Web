{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/ShiftHistory/ShiftHistory/ShiftHistoryPage.ts", "../../../../../../Modules/HumanResource/ShiftHistory/ShiftHistory/ShiftHistoryGrid.ts", "../../../../../../Modules/ServerTypes/ShiftHistory/ShiftHistoryColumns.ts", "../../../../../../Modules/ServerTypes/ShiftHistory/ShiftHistoryForm.ts", "../../../../../../Modules/ServerTypes/ShiftHistory/ShiftHistoryRow.ts", "../../../../../../Modules/ServerTypes/ShiftHistory/ShiftHistoryService.ts", "../../../../../../Modules/HumanResource/ShiftHistory/ShiftHistory/ShiftHistoryDialog.ts"],
  "sourcesContent": ["import { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { ShiftHistoryGrid } from './ShiftHistoryGrid';\n\nexport default function pageInit() {\n    initFullHeightGridPage(new ShiftHistoryGrid($('#GridDiv')).element);\n}", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\nimport { ShiftHistoryColumns, ShiftHistoryRow, ShiftHistoryService } from '../../../ServerTypes/ShiftHistory';\nimport { ShiftHistoryDialog } from './ShiftHistoryDialog';\n\n@Decorators.registerClass('HRMSoftware.ShiftHistory.ShiftHistoryGrid')\nexport class ShiftHistoryGrid extends EntityGrid<ShiftHistoryRow, any> {\n    protected getColumnsKey() { return ShiftHistoryColumns.columnsKey; }\n    protected getDialogType() { return ShiftHistoryDialog; }\n    protected getRowDefinition() { return ShiftHistoryRow; }\n    protected getService() { return ShiftHistoryService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n}", "\uFEFFexport class ShiftHistoryColumns {\n    static columnsKey = 'ShiftHistory.ShiftHistory';\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ShiftHistoryForm {\n    EmployeeId: StringEditor;\n    Shift: StringEditor;\n}\n\nexport class ShiftHistoryForm extends PrefixedContext {\n    static formKey = 'ShiftHistory.ShiftHistory';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ShiftHistoryForm.init)  {\n            ShiftHistoryForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(ShiftHistoryForm, [\n                'EmployeeId', w0,\n                'Shift', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ShiftHistoryRow {\n    Id?: number;\n    ShiftStartDate?: string;\n    ShiftEndDate?: string;\n    EmployeeId?: string;\n    Shift?: string;\n    InsertUserId?: number;\n    InsertDate?: string;\n    UpdateUserId?: number;\n    UpdateDate?: string;\n    DeleteUserId?: number;\n    DeleteDate?: string;\n    IsActive?: number;\n}\n\nexport abstract class ShiftHistoryRow {\n    static readonly idProperty = 'Id';\n    static readonly isActiveProperty = 'IsActive';\n    static readonly nameProperty = 'EmployeeId';\n    static readonly localTextPrefix = 'ShiftHistory.ShiftHistory';\n    static readonly deletePermission = 'Administration:HumanResources';\n    static readonly insertPermission = 'Administration:HumanResources';\n    static readonly readPermission = 'Administration:HumanResources';\n    static readonly updatePermission = 'Administration:HumanResources';\n\n    static readonly Fields = fieldsProxy<ShiftHistoryRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\nimport { ShiftHistoryRow } from \"./ShiftHistoryRow\";\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\n\nexport namespace ShiftHistoryService {\n    export const baseUrl = 'ShiftHistory/ShiftHistory';\n\n    export declare function Create(request: SaveRequest<ShiftHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ShiftHistoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ShiftHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ShiftHistoryRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"ShiftHistory/ShiftHistory/Create\",\n        Update: \"ShiftHistory/ShiftHistory/Update\",\n        Delete: \"ShiftHistory/ShiftHistory/Delete\",\n        Retrieve: \"ShiftHistory/ShiftHistory/Retrieve\",\n        List: \"ShiftHistory/ShiftHistory/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ShiftHistoryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\nimport { ShiftHistoryForm, ShiftHistoryRow, ShiftHistoryService } from '../../../ServerTypes/ShiftHistory';\n\n@Decorators.registerClass('HRMSoftware.ShiftHistory.ShiftHistoryDialog')\nexport class ShiftHistoryDialog extends EntityDialog<ShiftHistoryRow, any> {\n    protected getFormKey() { return ShiftHistoryForm.formKey; }\n    protected getRowDefinition() { return ShiftHistoryRow; }\n    protected getService() { return ShiftHistoryService.baseUrl; }\n\n    protected form = new ShiftHistoryForm(this.idPrefix);\n}"],
  "mappings": "yIAAA,IAAAA,EAAuC,SCAvC,IAAAC,EAAuC,SCA/B,IAAMC,EAAN,KAA0B,CAElC,EAFcC,EAAAD,EAAA,uBAAAA,EACH,WAAa,4BCDvB,IAAAE,EAA8C,SAC/CC,EAA6B,SAOtB,IAAMC,EAAN,cAA+B,iBAAgB,CAIlD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAiB,KAAO,CACzBA,EAAiB,KAAO,GAExB,IAAIE,EAAK,kBAET,gBAAaF,EAAkB,CAC3B,aAAcE,EACd,QAASA,CACb,CAAC,CACL,CACJ,CACJ,EAlBaC,EAANH,EAAMI,EAAAD,EAAA,oBAAAA,EACF,QAAU,4BCTpB,IAAAE,EAA4B,SAiBtB,IAAeC,EAAf,KAA+B,CAWtC,EAXsBC,EAAAD,EAAA,mBAAAA,EACF,WAAa,KADXA,EAEF,iBAAmB,WAFjBA,EAGF,aAAe,aAHbA,EAIF,gBAAkB,4BAJhBA,EAKF,iBAAmB,gCALjBA,EAMF,iBAAmB,gCANjBA,EAOF,eAAiB,gCAPfA,EAQF,iBAAmB,gCARjBA,EAUF,UAAS,eAA6B,ECzB1D,IAAAE,EAA+C,SAE9BC,OACAA,EAAA,QAAU,4BAQVA,EAAA,QAAU,CACnB,OAAQ,mCACR,OAAQ,mCACR,OAAQ,mCACR,SAAU,qCACV,KAAM,gCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAqBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC/C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCJjB,IAAAK,EAAyC,SAIlC,IAAMC,EAAN,cAAiC,cAAmC,CAApE,kCAKH,KAAU,KAAO,IAAIC,EAAiB,KAAK,QAAQ,EAJzC,YAAa,CAAE,OAAOA,EAAiB,OAAS,CAChD,kBAAmB,CAAE,OAAOC,CAAiB,CAC7C,YAAa,CAAE,OAAOC,EAAoB,OAAS,CAGjE,EANaC,EAAAJ,EAAA,sBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,6CAA6C,GAC1DL,GLCN,IAAMM,EAAN,cAA+B,YAAiC,CACzD,eAAgB,CAAE,OAAOC,EAAoB,UAAY,CACzD,eAAgB,CAAE,OAAOC,CAAoB,CAC7C,kBAAmB,CAAE,OAAOC,CAAiB,CAC7C,YAAa,CAAE,OAAOC,EAAoB,OAAS,CAE7D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EATaC,EAAAN,EAAA,oBAAAA,EAANO,EAAA,CADN,aAAW,cAAc,2CAA2C,GACxDP,GDFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAiB,EAAE,UAAU,CAAC,EAAE,OAAO,CACtE,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "ShiftHistoryColumns", "__name", "import_corelib", "import_q", "_ShiftHistoryForm", "prefix", "w0", "ShiftHistoryForm", "__name", "import_q", "ShiftHistoryRow", "__name", "import_q", "ShiftHistoryService", "x", "r", "s", "o", "import_corelib", "ShiftHistoryDialog", "ShiftHistoryForm", "ShiftHistoryRow", "ShiftHistoryService", "__name", "__decorateClass", "ShiftHistoryGrid", "ShiftHistoryColumns", "ShiftHistoryDialog", "ShiftHistoryRow", "ShiftHistoryService", "container", "__name", "__decorateClass", "pageInit", "ShiftHistoryGrid", "__name"]
}
