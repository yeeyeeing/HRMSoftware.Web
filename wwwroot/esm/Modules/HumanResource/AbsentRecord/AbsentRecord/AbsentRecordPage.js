import"../../../../_chunks/chunk-DA7Z2NN7.js";import{a as I}from"../../../../_chunks/chunk-27W64ILM.js";import"../../../../_chunks/chunk-7GGACY5T.js";import{f as L,j as Q,n as k}from"../../../../_chunks/chunk-HERT6KZV.js";import"../../../../_chunks/chunk-DMDSRNFC.js";import{a as A}from"../../../../_chunks/chunk-TIB4BNCY.js";import{b as D}from"../../../../_chunks/chunk-TYRFK7TU.js";import"../../../../_chunks/chunk-K2UT2MVJ.js";import{a as h}from"../../../../_chunks/chunk-DNINIZJD.js";import{c as s,g as a,h as b,j as w,k as E}from"../../../../_chunks/chunk-L3ECGIWB.js";var C=a(E(),1);var N=a(h(),1);var f=class{};s(f,"AbsentRecordColumns"),f.columnsKey="AbsentRecord.AbsentRecord";var m=a(h(),1),q=a(E(),1);var v=class extends m.PrefixedContext{constructor(t){if(super(t),!v.init){v.init=!0;var e=m.LookupEditor,i=m.StringEditor,n=m.DateEditor;(0,q.initFormType)(v,["EmployeeRowId",e,"EmployeeName",i,"AbsentDate",n])}}},l=v;s(l,"AbsentRecordForm"),l.formKey="AbsentRecord.AbsentRecord";var H=a(E(),1);var r=class{};s(r,"AbsentRecordRow"),r.idProperty="Id",r.nameProperty="EmployeeName",r.localTextPrefix="AbsentRecord.AbsentRecord",r.deletePermission="Administration:HumanResources",r.insertPermission="Administration:HumanResources",r.readPermission="Administration:HumanResources",r.updatePermission="Administration:HumanResources",r.Fields=(0,H.fieldsProxy)();var O=a(E(),1),y;(e=>(e.baseUrl="AbsentRecord/AbsentRecord",e.Methods={Create:"AbsentRecord/AbsentRecord/Create",Update:"AbsentRecord/AbsentRecord/Update",Delete:"AbsentRecord/AbsentRecord/Delete",Retrieve:"AbsentRecord/AbsentRecord/Retrieve",List:"AbsentRecord/AbsentRecord/List"},["Create","Update","Delete","Retrieve","List"].forEach(i=>{e[i]=function(n,u,x){return(0,O.serviceRequest)(e.baseUrl+"/"+i,n,u,x)}})))(y||(y={}));var d=a(h(),1);var c=class extends d.EntityDialog{constructor(){super(...arguments);this.form=new l(this.idPrefix)}getFormKey(){return l.formKey}getRowDefinition(){return r}getService(){return y.baseUrl}dialogOpen(e){super.dialogOpen(e);var i=this.form.EmployeeRowId.value;d.EditorUtils.setReadonly(this.form.EmployeeName.element,!0),D.List({},n=>{var u=document.getElementById(this.idPrefix+"EmployeeRowId");let x=new d.Select2Editor($(u));var J=document.getElementById(this.idPrefix+"EmployeeName");let g=[];for(var S in n.Entities)x.addItem({id:n.Entities[S].Id.toString(),text:n.Entities[S].EmployeeID.toString()}),g.push({id:n.Entities[S].Id,name:n.Entities[S].EmployeeName});$(u).on("change",function(){return w(this,null,function*(){for(var P in g)g[P].id==$(u).val()&&$(J).val(g[P].name)})}),i!=null&&$(u).val(i.toString()).trigger("change")})}};s(c,"AbsentRecordDialog"),c=b([d.Decorators.registerClass("HRMSoftware.AbsentRecord.AbsentRecordDialog")],c);var F=a(E(),1),o=a(h(),1);var p=class extends N.EntityGrid{getColumnsKey(){return f.columnsKey}getDialogType(){return c}getRowDefinition(){return r}getService(){return y.baseUrl}constructor(t){super(t)}onViewProcessData(t){return t=super.onViewProcessData(t),this.toolbar.findButton("column-picker-button").toggle(!1),t}getQuickFilters(){let t=super.getQuickFilters();var e=r;return F.Authorization.hasPermission(I.HumanResources)&&(t.push({cssClass:"hidden-xs",field:e.Fields.OccupationName,type:o.Select2Editor,title:"Occupation"}),t.push({cssClass:"hidden-xs",field:e.Fields.JobGradeName,type:o.Select2Editor,title:"Job Grade"}),t.push({cssClass:"hidden-xs",field:e.Fields.DivisionName,type:o.Select2Editor,title:"Division"}),t.push({cssClass:"hidden-xs",field:e.Fields.DepartmentName,type:o.Select2Editor,title:"Department"}),t.push({cssClass:"hidden-xs",field:e.Fields.EmployeeName,type:o.Select2Editor,title:"Name"}),t.push({cssClass:"hidden-xs",field:e.Fields.EmployeeId,type:o.Select2Editor,title:"Employee ID"}),t.reverse()),t}createQuickFilters(){super.createQuickFilters();var t=r;F.Authorization.hasPermission(I.HumanResources)?(k.List({},e=>{for(var i in e.Entities)this.findQuickFilter(o.Select2Editor,t.Fields.OccupationName).items.push({id:e.Entities[i].Name.toString(),text:e.Entities[i].Name.toString()})}),Q.List({},e=>{for(var i in e.Entities)this.findQuickFilter(o.Select2Editor,t.Fields.JobGradeName).items.push({id:e.Entities[i].Name.toString(),text:e.Entities[i].Name.toString()})}),A.List({},e=>{for(var i in e.Entities)this.findQuickFilter(o.Select2Editor,t.Fields.DepartmentName).items.push({id:e.Entities[i].Name.toString(),text:e.Entities[i].Name.toString()})}),L.List({},e=>{for(var i in e.Entities)this.findQuickFilter(o.Select2Editor,t.Fields.DivisionName).items.push({id:e.Entities[i].Name.toString(),text:e.Entities[i].Name.toString()})}),D.List({},e=>{for(var i in e.Entities)this.findQuickFilter(o.Select2Editor,t.Fields.EmployeeName).items.push({id:e.Entities[i].EmployeeName.toString(),text:e.Entities[i].EmployeeName.toString()}),this.findQuickFilter(o.Select2Editor,t.Fields.EmployeeId).items.push({id:e.Entities[i].EmployeeID.toString(),text:e.Entities[i].EmployeeID.toString()})})):this.toolbar.findButton("add-button").toggle(!1)}};s(p,"AbsentRecordGrid"),p=b([N.Decorators.registerClass("HRMSoftware.AbsentRecord.AbsentRecordGrid")],p);function U(){(0,C.initFullHeightGridPage)(new p($("#GridDiv")).element)}s(U,"pageInit");export{U as default};
//# sourceMappingURL=AbsentRecordPage.js.map
