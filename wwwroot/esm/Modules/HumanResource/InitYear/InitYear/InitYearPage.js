import{j as I}from"../../../../_chunks/chunk-HERT6KZV.js";import{a as F,b as B,c as E,d as h}from"../../../../_chunks/chunk-DC5JUE5I.js";import"../../../../_chunks/chunk-SPO25IZJ.js";import"../../../../_chunks/chunk-7WX7CVOG.js";import"../../../../_chunks/chunk-PPMBDC6H.js";import{d as Y}from"../../../../_chunks/chunk-2YAUIENJ.js";import"../../../../_chunks/chunk-BVVXSYMS.js";import"../../../../_chunks/chunk-TIB4BNCY.js";import"../../../../_chunks/chunk-DMDSRNFC.js";import"../../../../_chunks/chunk-K2UT2MVJ.js";import{a as P}from"../../../../_chunks/chunk-DNINIZJD.js";import{c as u,g as p,h as b,j as S,k as R}from"../../../../_chunks/chunk-L3ECGIWB.js";var D=p(R(),1);var L=p(P(),1);var l=p(P(),1);var f=p(R(),1),w=p(R(),1);var c=class extends l.EntityDialog{constructor(){super();this.AlreadyInitYear=[];this.JobGradeList=[];this.StartingRange=[];this.EndingRange=[];this.form=new B(this.idPrefix);this.deleteButton.remove(),this.cloneButton.remove(),Y.List({},i=>{for(var o in i.Entities)i.Entities[o].IsActive==1&&(i.Entities[o].EntitleAnnualBasedOnJobGrade==!0&&(l.EditorUtils.setReadonly(this.form.PolicyList.element,!0),this.check_job_grade_annual_leave=1),i.Entities[o].EntitleAnnualBasedOnYearOfService==!0&&l.EditorUtils.setReadonly(this.form.AnnulLeaveBasedOnJobGrade.element,!0))}),I.List({},i=>{for(var o in i.Entities)this.JobGradeList.push(i.Entities[o].Id)})}getFormKey(){return B.formKey}getRowDefinition(){return E}getService(){return h.baseUrl}onDialogOpen(){(0,w.isEmptyOrNull)(this.entityId)?this.dialogTitle="":this.dialogTitle=this.form.Year.value.toString()+" Year",this.isNew()?((0,w.serviceCall)({service:h.baseUrl+"/ListYear",data:{},method:"GET",async:!0,onSuccess:s=>{console.log(s.Entities[0].YearString);let e=s.Entities[0].YearString.split(",");e=e.filter(x=>!x.includes("-")),console.log(e);for(var n=document.getElementById(this.idPrefix+"Year"),t=new l.Select2Editor($(n)),r=0;r<e.length;r++)t.addItem({id:e[r].toString(),text:e[r].toString()})},onError:s=>{}}),h.List({},s=>{for(var d in s.Entities)this.AlreadyInitYear.push(s.Entities[d].Year)})):(this.saveAndCloseButton.remove(),l.EditorUtils.setReadonly(this.form.Year.element,!0)),super.onDialogOpen();var i=document.getElementById(this.idPrefix+"LeaveBringForwardMethod"),o=document.getElementById(this.idPrefix+"BringForwardPercentage"),v=document.getElementById(this.idPrefix+"BringForwardDays"),y=document.getElementById(this.idPrefix+"LeaveRoundUp");$(".LeaveRoundUp").hide(),this.process_form();var a=this;$(i).on("change",function(){return S(this,null,function*(){console.log($(i).val()),a.process_form()})})}process_form(){var i=document.getElementById(this.idPrefix+"LeaveBringForwardMethod"),o=document.getElementById(this.idPrefix+"BringForwardPercentage"),v=document.getElementById(this.idPrefix+"BringForwardDays");$(i).val()==3?($(".BringForwardDays").show(),$(o).val(""),$(".BringForwardPercentage").hide(),$(".LeaveRoundUp").hide()):$(i).val()==6?($(".BringForwardPercentage").show(),$(".LeaveRoundUp").show(),$(v).val(""),$(".BringForwardDays").hide()):($(".BringForwardDays").hide(),$(".BringForwardPercentage").hide(),$(".LeaveRoundUp").hide())}save_submitHandler(i){let o=parseInt(this.form.LeaveBringForwardMethod.value);if(this.form.BringForwardPercentage.value<0&&o==6){(0,f.alertDialog)("The carry forward percentage must be greater than 0");return}function v(d,e,n){for(let t=0;t<e.length;t++)for(let r=t+1;r<e.length;r++)if(e[t]>=e[r]&&e[t]<=n[r]||n[t]>=e[r]&&n[t]<=n[r]||e[r]<=e[t]&&n[r]>=n[t])return(0,f.alertDialog)("interval overlapping in "+e[t]+" until "+n[t]+" and "+e[r]+" until "+n[r]+" at "+d),!0;return!1}u(v,"checkRangeClash");var y=this.form.PolicyList.value;this.StartingRange=[],this.EndingRange=[];for(var a in y)this.StartingRange.push(y[a].ServiceFromYear),this.EndingRange.push(y[a].ServiceUntilYear);if(v("Annual Leave",this.StartingRange,this.EndingRange)!=!0){var s=this.form.SickLeavePolicyList.value;this.StartingRange=[],this.EndingRange=[];for(var a in s)this.StartingRange.push(s[a].ServiceFromYear),this.EndingRange.push(s[a].ServiceUntilYear);if(v("Sick Leave",this.StartingRange,this.EndingRange)!=!0){for(var a in this.AlreadyInitYear)if(this.AlreadyInitYear[a]==this.form.Year.value){(0,f.alertDialog)("the working calendar for"+this.form.Year.value+" has already been completed");return}if(this.check_job_grade_annual_leave==1){let e=function(n){let t={};for(let r of n){if(t[r])return!0;t[r]=!0}return!1};u(e,"hasDuplicates");let d=[];for(var a in this.form.AnnulLeaveBasedOnJobGrade)d.push(this.form.AnnulLeaveBasedOnJobGrade[a].JobGradeLevel);if(e(d)){(0,f.alertDialog)("Annual Leave Entitlement Based on job grade have duplicated job grade records");return}if(this.JobGradeList.length!=d.length){(0,f.alertDialog)("Please assign annual leaves for all currently existing JobGrade");return}}super.save_submitHandler(i)}}}afterLoadEntity(){super.afterLoadEntity()}};u(c,"InitYearDialog"),c=b([l.Decorators.registerClass("HRMSoftware.InitYear.InitYearDialog")],c);var g=class extends L.EntityGrid{getColumnsKey(){return F.columnsKey}getDialogType(){return c}getRowDefinition(){return E}getService(){return h.baseUrl}constructor(m){super(m)}onViewProcessData(m){return m=super.onViewProcessData(m),this.toolbar.findButton("column-picker-button").toggle(!1),m}};u(g,"InitYearGrid"),g=b([L.Decorators.registerClass("HRMSoftware.InitYear.InitYearGrid")],g);function A(){(0,D.initFullHeightGridPage)(new g($("#GridDiv")).element)}u(A,"pageInit");export{A as default};
//# sourceMappingURL=InitYearPage.js.map
