{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedPage.ts", "../../../../../../Modules/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedGrid.ts", "../../../../../../Modules/HumanResource/Announcement/AnnouncementGenerated/AnnouncementGeneratedDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { AnnouncementGeneratedGrid } from './AnnouncementGeneratedGrid';\n\nexport default function pageInit() {\n    initFullHeightGridPage(new AnnouncementGeneratedGrid($('#GridDiv')).element);\n}", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\nimport { AnnouncementGeneratedColumns, AnnouncementGeneratedRow, AnnouncementGeneratedService } from '../../../ServerTypes/Announcement';\nimport { AnnouncementGeneratedDialog } from './AnnouncementGeneratedDialog';\n\n@Decorators.registerClass('HRMSoftware.Announcement.AnnouncementGeneratedGrid')\nexport class AnnouncementGeneratedGrid extends EntityGrid<AnnouncementGeneratedRow, any> {\n    protected getColumnsKey() { return AnnouncementGeneratedColumns.columnsKey; }\n    protected getDialogType() { return AnnouncementGeneratedDialog; }\n    protected getRowDefinition() { return AnnouncementGeneratedRow; }\n    protected getService() { return AnnouncementGeneratedService.baseUrl; }\n    protected getAddButtonCaption() {\n        return \"Generate Annnouncements\";\n    }\n    constructor(container: JQuery) {\n        super(container);\n    }\n}", "import { Decorators, EntityDialog, EditorUtils } from '@serenity-is/corelib';\nimport { AnnouncementGeneratedForm, AnnouncementGeneratedRow, AnnouncementGeneratedService } from '../../../ServerTypes/Announcement';\nimport { Authorization } from '@serenity-is/corelib/q';\nimport { alertDialog } from '@serenity-is/corelib/q';\nimport { isEmptyOrNull } from '@serenity-is/corelib/q';\n\n@Decorators.registerClass('HRMSoftware.Announcement.AnnouncementGeneratedDialog')\nexport class AnnouncementGeneratedDialog extends EntityDialog<AnnouncementGeneratedRow, any> {\n    protected getFormKey() { return AnnouncementGeneratedForm.formKey; }\n    protected getRowDefinition() { return AnnouncementGeneratedRow; }\n    protected getService() { return AnnouncementGeneratedService.baseUrl; }\n\n    protected form = new AnnouncementGeneratedForm(this.idPrefix);\n\n    public onDialogOpen(): void {\n        super.onDialogOpen();\n        var self = this\n        EditorUtils.setReadonly(this.form.Remarks.element, true);\n        var time = $('#announcement-clocklet')\n        var today = new Date()\n\n        if (!this.isNew()) {\n            $('.AnnouncementDateTime').hide()\n            $('.AnnouncementTime').hide()\n            $('.Immediate').hide()\n            $('.Delayed').hide()\n            $('.Remarks').parent().hide()\n\n            AnnouncementGeneratedService.Retrieve({\n                EntityId: self.entityId\n            }, response => {\n                console.log(response.Entity)\n                if (!isEmptyOrNull(response.Entity.GeneratedRecurringId) || !isEmptyOrNull(response.Entity.GeneratedWizardId)) {\n                    EditorUtils.setReadonly(this.form.Remarks.element, true);\n                        \n\n                }\n                                \n                    \n            })\n        }\n        else {\n            $('.AnnouncementDateTime').hide()\n            $('.AnnouncementTime').hide()\n            time.val('12:00')\n            self.form.AnnouncementDateTime.value = today.toISOString()\n        }\n\n        var ImmediateElement = document.getElementById(this.idPrefix + 'Immediate');\n        var DelayedElement = document.getElementById(this.idPrefix + 'Delayed');\n\n        $(ImmediateElement).on('change', async function () {\n            if (self.form.Immediate.value == true && self.form.Delayed.value == true)\n                self.form.Delayed.value = false\n            if (self.form.Delayed.value == true &&\n                self.form.Immediate.value == false) {\n                $('.AnnouncementTime').show()\n                $('.AnnouncementDateTime').show()\n                self.GenerateRemarks()\n            }\n            else if (self.form.Delayed.value == false &&\n                self.form.Immediate.value == true) {\n                $('.AnnouncementTime').hide()\n                $('.AnnouncementDateTime').hide()\n                self.GenerateRemarks()\n            }\n            else {\n                $('.AnnouncementTime').hide()\n                $('.AnnouncementDateTime').hide()\n\n                self.GenerateRemarks()\n            }\n        })\n        $(DelayedElement).on('change', async function () {\n            if (self.form.Immediate.value == true && self.form.Delayed.value == true)\n                self.form.Immediate.value = false\n            if (self.form.Delayed.value == true &&\n                self.form.Immediate.value == false) {\n                $('.AnnouncementTime').show()\n                $('.AnnouncementDateTime').show()\n                self.GenerateRemarks()\n            }\n            else if (self.form.Delayed.value == false &&\n                self.form.Immediate.value == true) {\n                $('.AnnouncementTime').hide()\n                $('.AnnouncementDateTime').hide()\n                self.GenerateRemarks()\n            }\n            else {\n                $('.AnnouncementTime').hide()\n                $('.AnnouncementDateTime').hide()\n\n                self.GenerateRemarks()\n            }\n        })\n    }\n\n    constructor() {\n        super();\n        var self = this\n\n        var linkElement = document.createElement('link');\n        linkElement.rel = 'stylesheet';\n        linkElement.href = \"https://cdn.jsdelivr.net/npm/clocklet@0.3.0/css/clocklet.min.css\";\n        var scriptElement = document.createElement('script');\n        scriptElement.src = \"https://cdn.jsdelivr.net/npm/clocklet@0.3.0\";\n        // Append link and script elements to the head of the document\n        document.head.appendChild(linkElement);\n        document.head.appendChild(scriptElement);\n        var tabId = $(\".fieldset\").children().attr('id');\n        const searchString = \"PropertyGrid\";\n        const AnnouncementTimeString = \"AnnouncementTime\";\n        const lastIndex = tabId.lastIndexOf(searchString);\n        if (lastIndex !== -1)\n            var RecurringTimeElementId = tabId.substring(0, lastIndex) + AnnouncementTimeString;\n        var RecurringClocklet = document.getElementById(RecurringTimeElementId)\n        RecurringClocklet.setAttribute('data-clocklet', '');\n        RecurringClocklet.setAttribute(\"id\", \"announcement-clocklet\");\n        RecurringClocklet.addEventListener(\"clocklet.opening\", function (event) {\n            var myClocklet = document.getElementById(\"announcement-clocklet\") as HTMLElement;\n            if (myClocklet)\n                myClocklet.style.zIndex = Number.MAX_SAFE_INTEGER.toString();\n        });\n        RecurringClocklet.addEventListener(\"clocklet.closed\", function (event) {\n            self.GenerateRemarks()\n        });\n    }\n\n\n    public GenerateRemarks(): void {\n        var self = this\n        var StartingString = 'The announcement will be sent at '\n        var time = document.getElementById('announcement-clocklet') as HTMLInputElement\n        var FinalString = ''\n        if (self.form.Immediate.value == true) {\n            FinalString = 'The announcement will be made to the employee immediately'\n        }\n        else if (self.form.Delayed.value == true) {\n            FinalString = StartingString + self.form.AnnouncementDateTime.value + ' ' + time.value + ':00'\n        }\n        else\n            FinalString = ''\n\n        self.form.Remarks.value = FinalString\n    }\n    protected save_submitHandler(response): void {\n\n        if (this.form.Remarks.value == '') {\n            alertDialog('Invalid settings, please check again')\n            return\n        }\n        if (this.form.EmployeeRowId.value == '') {\n            alertDialog('No employee chosen')\n            return\n        }\n        super.save_submitHandler(response)\n    }\n\n\n}"],
  "mappings": "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",
  "names": ["import_q", "import_corelib", "import_corelib", "import_q", "AnnouncementGeneratedDialog", "AnnouncementGeneratedForm", "self", "linkElement", "scriptElement", "tabId", "searchString", "AnnouncementTimeString", "lastIndex", "RecurringTimeElementId", "RecurringClocklet", "event", "myClocklet", "AnnouncementGeneratedRow", "AnnouncementGeneratedService", "time", "today", "response", "ImmediateElement", "DelayedElement", "__async", "StartingString", "FinalString", "__name", "__decorateClass", "AnnouncementGeneratedGrid", "AnnouncementGeneratedColumns", "AnnouncementGeneratedDialog", "AnnouncementGeneratedRow", "AnnouncementGeneratedService", "container", "__name", "__decorateClass", "pageInit", "AnnouncementGeneratedGrid", "__name"]
}
