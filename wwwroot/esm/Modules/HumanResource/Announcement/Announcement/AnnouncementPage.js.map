{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/Announcement/Announcement/AnnouncementPage.ts", "../../../../../../Modules/HumanResource/Announcement/Announcement/AnnouncementGrid.ts", "../../../../../../Modules/HumanResource/Announcement/Announcement/AnnouncementDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { AnnouncementGrid } from './AnnouncementGrid';\n\nexport default function pageInit() {\n    initFullHeightGridPage(new AnnouncementGrid($('#GridDiv')).element);\n}", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\nimport { AnnouncementColumns, AnnouncementRow, AnnouncementService } from '../../../ServerTypes/Announcement';\nimport { AnnouncementDialog } from './AnnouncementDialog';\n\n@Decorators.registerClass('HRMSoftware.Announcement.AnnouncementGrid')\nexport class AnnouncementGrid extends EntityGrid<AnnouncementRow, any> {\n    protected getColumnsKey() { return AnnouncementColumns.columnsKey; }\n    protected getDialogType() { return AnnouncementDialog; }\n    protected getRowDefinition() { return AnnouncementRow; }\n    protected getService() { return AnnouncementService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n    protected createQuickFilters(): void {\n        // let base class to create quick filters first\n\n        super.createQuickFilters();\n      \n      this.toolbar.findButton(\"add-button\").toggle(false);\n\n    }\n\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\nimport { AnnouncementForm, AnnouncementRow, AnnouncementService } from '../../../ServerTypes/Announcement';\nimport {  isEmptyOrNull } from '@serenity-is/corelib/q';\n\n@Decorators.registerClass('HRMSoftware.Announcement.AnnouncementDialog')\nexport class AnnouncementDialog extends EntityDialog<AnnouncementRow, any> {\n    protected getFormKey() { return AnnouncementForm.formKey; }\n    protected getRowDefinition() { return AnnouncementRow; }\n    protected getService() { return AnnouncementService.baseUrl; }\n\n    protected form = new AnnouncementForm(this.idPrefix);\n    constructor() {\n        super();\n        \n    }\n\n    public onDialogOpen(): void {\n        super.onDialogOpen();\n        var self = this\n        this.saveAndCloseButton.remove()\n        this.editButton.remove()\n        this.deleteButton.remove()\n        this.applyChangesButton.remove()\n        this.dialogTitle = 'Announcement'\n\n        AnnouncementService.Update({\n            EntityId: self.entityId,\n            Entity:\n            {\n                \"Viewed\": 1\n            }\n        });\n        this.readOnly=true        \n        if (isEmptyOrNull(this.form.UploadDocument.value))\n            $('.UploadDocument').hide()\n        \n    }\n\n}"],
  "mappings": "kWAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAuC,SCAvC,IAAAC,EAAyC,SAEzC,IAAAC,EAA+B,SAGxB,IAAMC,EAAN,cAAiC,cAAmC,CAMvE,aAAc,CACV,MAAM,EAFV,KAAU,KAAO,IAAIC,EAAiB,KAAK,QAAQ,CAInD,CARU,YAAa,CAAE,OAAOA,EAAiB,OAAS,CAChD,kBAAmB,CAAE,OAAOC,CAAiB,CAC7C,YAAa,CAAE,OAAOC,EAAoB,OAAS,CAQtD,cAAqB,CACxB,MAAM,aAAa,EACnB,IAAIC,EAAO,KACX,KAAK,mBAAmB,OAAO,EAC/B,KAAK,WAAW,OAAO,EACvB,KAAK,aAAa,OAAO,EACzB,KAAK,mBAAmB,OAAO,EAC/B,KAAK,YAAc,eAEnBD,EAAoB,OAAO,CACvB,SAAUC,EAAK,SACf,OACA,CACI,OAAU,CACd,CACJ,CAAC,EACD,KAAK,SAAS,MACV,iBAAc,KAAK,KAAK,eAAe,KAAK,GAC5C,EAAE,iBAAiB,EAAE,KAAK,CAElC,CAEJ,EAjCaC,EAAAL,EAAA,sBAAAA,EAANM,EAAA,CADN,aAAW,cAAc,6CAA6C,GAC1DN,GDAN,IAAMO,EAAN,cAA+B,YAAiC,CACzD,eAAgB,CAAE,OAAOC,EAAoB,UAAY,CACzD,eAAgB,CAAE,OAAOC,CAAoB,CAC7C,kBAAmB,CAAE,OAAOC,CAAiB,CAC7C,YAAa,CAAE,OAAOC,EAAoB,OAAS,CAE7D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACU,oBAA2B,CAGjC,MAAM,mBAAmB,EAE3B,KAAK,QAAQ,WAAW,YAAY,EAAE,OAAO,EAAK,CAEpD,CAEJ,EAlBaC,EAAAN,EAAA,oBAAAA,EAANO,EAAA,CADN,aAAW,cAAc,2CAA2C,GACxDP,GDFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAiB,EAAE,UAAU,CAAC,EAAE,OAAO,CACtE,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "import_corelib", "import_q", "AnnouncementDialog", "AnnouncementForm", "AnnouncementRow", "AnnouncementService", "self", "__name", "__decorateClass", "AnnouncementGrid", "AnnouncementColumns", "AnnouncementDialog", "AnnouncementRow", "AnnouncementService", "container", "__name", "__decorateClass", "pageInit", "AnnouncementGrid", "__name"]
}
