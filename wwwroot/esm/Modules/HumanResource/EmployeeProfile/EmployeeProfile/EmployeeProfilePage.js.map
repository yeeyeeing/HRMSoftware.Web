{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/EmployeeProfile/EmployeeProfile/EmployeeProfilePage.ts", "../../../../../../Modules/HumanResource/EmployeeProfile/EmployeeProfile/EmployeeProfileGrid.ts", "../../../../../../Modules/HumanResource/EmployeeProfile/EmployeeProfile/EmployeeProfileDialog.ts"],
  "sourcesContent": ["import { ListResponse, Select2Editor } from '@serenity-is/corelib';\nimport { getLookup } from '@serenity-is/corelib/q';\nimport { serviceCall, RetrieveResponse } from '@serenity-is/corelib/q';\nimport { Authorization } from '@serenity-is/corelib/q';\nimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { PermissionKeys } from '../../../ServerTypes/Administration';\nimport { EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\nimport { ViewShiftHistoryService } from '../../../ServerTypes/ViewShiftHistory';\nimport { EmployeeProfileGrid } from './EmployeeProfileGrid';\nimport * as Highcharts from \"highcharts\";\nimport Heatmap from \"highcharts/modules/heatmap\"\nimport { PublicHolidayService } from '../../../ServerTypes/PublicHoliday';\nimport { ShiftService } from '../../../ServerTypes/Shift';\nimport { CompanySettingsService } from '../../../ServerTypes/CompanySettings';\nimport { LeaveApplicationService } from '../../../ServerTypes/LeaveApplication';\nimport { InitYearService } from '../../../ServerTypes/InitYear';\nimport { EmployeeGroupService } from '../../../ServerTypes/EmployeeGroup';\nimport { EmployeeGroupDialog } from '../../EmployeeGroup/EmployeeGroup/EmployeeGroupDialog';\nimport { LeaveApplicationDialog } from '../../LeaveApplication/LeaveApplication/LeaveApplicationDialog';\nimport { SetEmployeeShiftDialog } from '../../SetEmployeeShift/SetEmployeeShift/SetEmployeeShiftDialog';\nimport { PublicHolidayDialog } from '../../PublicHoliday/PublicHoliday/PublicHolidayDialog';\n// Function to find the object with Id = 1\nfunction findRowById(array, idValue)\n{  \n    for (let i = 0; i < array.length; i++) {\n        if (array[i].Id === idValue) {\n            return array[i].Name;\n        }\n    }\n    return null\n};\n\n\nexport default function pageInit()\n{\n    var Country\n    CompanySettingsService.List({\n    }, response => {\n        for (var index in response.Entities) {\n            if (response.Entities[index].IsActive == 1) {\n                Country = response.Entities[index].BasedCountry\n                break\n            }\n\n        }\n    });\n\n\n  \n    if (Authorization.hasPermission(PermissionKeys.HumanResources)) //if he is HR guy \n    {\n\n        CompanySettingsService.List({\n        }, response => {\n\n            if (response.Entities.length == 0)//if havent done company setings\n            {\n                const mainElement = document.createElement(\"main\");;\n                mainElement.id = \"main-content\";\n                mainElement.className = \"main-container\";\n                mainElement.innerHTML = \"<h1>This page is used to create Employee Profiles and new users</h1><p>Please initialise company settings to start using this feature.</p>\";\n                $('#GridDiv').append(mainElement)\n                return\n            }\n            else\n                initFullHeightGridPage(new EmployeeProfileGrid($('#GridDiv')).element);\n                /*\n            InitYearService.List({\n            }, response => {\n                var Today = new Date()\n                var nextYearFirstDate = new Date(Today.getFullYear() + 1, 0, 1);\n                var NextYear = nextYearFirstDate.getFullYear()\n                var ThisYear = Today.getFullYear()\n                var PrevYear = ThisYear - 1\n                var FoundThisYear = false\n                var FoundPrevYear = false\n                var difference = (nextYearFirstDate.getTime() - Today.getTime()) / (1000 * 3600 * 24); // in days\n\n                var NearNextYear = difference < 60 ? true : false\n\n                for (var index in response.Entities)\n                {\n                    if (response.Entities[index].Year == PrevYear)\n                        FoundPrevYear = true \n\n                    else if (response.Entities[index].Year == ThisYear)\n                        FoundThisYear = true \n                }\n\n                if (FoundPrevYear == true && FoundThisYear == true && NearNextYear == false)\n                    initFullHeightGridPage(new EmployeeProfileGrid($('#GridDiv')).element);\n\n                else\n                {\n                    var mainElement = document.createElement(\"main\");;\n                    mainElement.id = \"main-content\";\n                    mainElement.className = \"main\";\n\n                    var HeaderClass = document.createElement(\"h1\");;\n                    HeaderClass.className = \"mt-5\"\n\n                    if (FoundPrevYear == false || FoundThisYear == false)\n                        HeaderClass.innerHTML = \"<h1>This page is used to create Employee Profiles and new users</h1> <p>Please complete company policy for \" + PrevYear + \" and \" + ThisYear+ \" to start using this feature. </p>\";\n\n                    else if (NearNextYear == true)\n                        HeaderClass.innerHTML = \"<h1>This page is used to create Employee Profiles and new users</h1> <p>Please complete company policy for \" + NextYear +\". </p>\";\n\n\n                    var AClass = document.createElement(\"a\");\n                    AClass.className = \"btn btn-lg btn-primary\"\n                    AClass.setAttribute(\"href\", \"../../InitYear/InitYear/\");\n                    AClass.setAttribute(\"role\", \"button\");\n                    // Set inner text\n                    AClass.innerText = \"Click to initiate the new year\";\n\n\n\n                    mainElement.append(HeaderClass)\n                    mainElement.append(AClass)\n\n                    $('#GridDiv').append(mainElement)\n                    return\n                }\n\n\n            });\n            */\n        });\n        return\n    }\n\n\n    Heatmap(Highcharts)\n\n    var CopiedResEntity;\n    var ShiftNameList: string[] = [];\n    var Color: string[] = [];\n    var ShiftIdList: number[] = [];\n \n    var WorkingHourFromList: string[][] = [];\n    var WorkingHourUntilList: string[][] = [];\n    var WorkingTimeList: string[][] = [];\n\n    interface ShiftData {\n        ShiftName: string;\n        WorkingHourFromList: string[];\n        WorkingHourUntilList: string[];\n        WorkingTimeList: string[];\n        Color: string;\n        ShiftIdList: number;\n    }\n\n    var ListOfShiftData: ShiftData[] = [];\n    var done_retrieve_shift = false\n\n    serviceCall<ListResponse<any>>({\n        service: ShiftService.baseUrl + '/ListShift',\n        method: \"GET\",\n        data: {\n        },\n        async: false,\n        onSuccess: (response) => {\n            done_retrieve_shift = true\n            let ListOfDays: string[] = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n\n            for (var index in response.Entities)\n            {\n\n                var ListOfWorkingFrom: string[] = []\n                var ListOfWorkingUntil: string[] = []\n                var ListOfWorkingTime: string[] = []\n\n                for (var days in ListOfDays)\n                {\n                    ListOfWorkingFrom.push(response.Entities[index][ListOfDays[days]+'StartingFrom'])\n                    ListOfWorkingUntil.push(response.Entities[index][ListOfDays[days] + 'EndingAt'])\n                    ListOfWorkingTime.push(response.Entities[index][ListOfDays[days] + 'WorkingTime'])\n                }\n                ListOfShiftData.push(\n                    {\n                        ShiftName: response.Entities[index].ShiftName,\n                        WorkingHourFromList: ListOfWorkingFrom,\n                        WorkingHourUntilList: ListOfWorkingUntil,\n                        WorkingTimeList: ListOfWorkingTime,\n                        Color: response.Entities[index].ShiftColor,\n                        ShiftIdList: response.Entities[index].Id\n                    }\n                )\n\n                WorkingHourFromList.push(ListOfWorkingFrom);\n                WorkingHourUntilList.push(ListOfWorkingUntil);\n                WorkingTimeList.push(ListOfWorkingTime)\n                ShiftNameList.push(response.Entities[index].ShiftName)\n                Color.push(response.Entities[index].ShiftColor)\n                ShiftIdList.push(response.Entities[index].Id)\n            }\n        },\n        onError: (error) => {\n\n            console.log(error)\n        }\n    });\n\n\n\n    while (done_retrieve_shift == false) {\n    };\n\n   \n\n\n\n     \n    \n\n\n\n    interface PublicHolidayData {\n        PublicHolidayDate: string;\n        PublicHolidayName: string;\n        PublicHolidayId: number;\n    }\n\n    var ListOfPublicHolidayData: PublicHolidayData[] = [];\n\n    var done_retrieve_public_holiday = false\n    serviceCall<ListResponse<any>>({\n        service: PublicHolidayService.baseUrl + '/ListPublicHoliday',\n        method: \"GET\",\n        data: {\n        },\n        async: false,\n        onSuccess: (response) => {\n            done_retrieve_public_holiday = true\n\n\n            for (var index in response.Entities) {\n              \n                    ListOfPublicHolidayData.push({\n                        PublicHolidayDate: response.Entities[index].Date,\n                        PublicHolidayName: response.Entities[index].Name,\n                        PublicHolidayId: response.Entities[index].Id,\n\n                    })\n\n                \n            }\n\n\n\n        },\n        onError: (error) => {\n            console.log(error)\n        }\n    });\n  \n\n    \n    while (done_retrieve_public_holiday == false) {\n\n    };\n\n    interface GroupData {\n        GroupName: string;\n        GroupColor: string;\n        GroupID: number;\n    }\n\n    var ListOfGroupData: GroupData[] = [];\n\n\n\n    var done_retrieve_group_data = false\n    serviceCall<ListResponse<any>>({\n        service: EmployeeGroupService.baseUrl + '/ListGroup',\n        method: \"GET\",\n        data: {\n        },\n        async: false,\n        onSuccess: (response) => {\n            done_retrieve_group_data = true\n            for (var index in response.Entities) {\n\n                ListOfGroupData.push({\n                    GroupName: response.Entities[index].Name,\n                    GroupColor: response.Entities[index].ShiftColor,\n                    GroupID: response.Entities[index].Id\n                })\n\n\n            }\n        },\n        onError: (error) => {\n            console.log(error)\n        }\n    });\n\n\n    while (done_retrieve_group_data == false) {\n\n    };\n\n\n    interface LeaveTakenData {\n        StartDate: string;\n        EndDate: string;\n        HalfDate: number;\n        LeaveReason: number;\n        ID: number;\n\n    }\n    var ListOfLeaveTakenData: LeaveTakenData[] = [];\n    var done_retrieve_holiday = false\n\n    serviceCall<ListResponse<any>>({\n        service: LeaveApplicationService.baseUrl + '/ListTakenLeaveFromID',\n        method: \"GET\",\n        data: {\n            \"EmployeeRowID\": Authorization.userDefinition.EmployeeRowID\n        },\n        async: false,\n        onSuccess: (response) => {\n            done_retrieve_holiday = true\n            for (var index in response.Entities) {\n                var half = 0\n\n                if (response.Entities[index].LeaveReasonId == 4 && response.Entities[index].HalfDay == 1)// if is annual leave and taken only half day\n                    half = 1\n\n                ListOfLeaveTakenData.push({\n                    StartDate: response.Entities[index].StartDate.substring(0, 10),\n                    EndDate: response.Entities[index].EndDate.substring(0, 10),\n                    HalfDate: half,\n                    LeaveReason: response.Entities[index].LeaveReasonId,\n                    ID: response.Entities[index].Id\n                })\n\n            }\n        },\n        onError: (error) => {\n            console.log(error)\n        }\n    });\n\n\n    while (done_retrieve_holiday == false) {\n\n    };\n\n\n\n\n\n\n\n\n\n    var ListOfData: Data[];\n\n    var year;\n    var month;\n    interface Data {\n        date: string;\n        shift: number;\n        GroupID: number;\n    }\n\n    var currentDate = new Date();\n    var currentMonth = currentDate.getMonth() + 1; // January is 0, so we add 1 to get the correct month\n    var currentYear = currentDate.getFullYear();\n    var dateString = `${currentDate.getFullYear()}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}`\n\n\n    function isInRange(num: number, min: number, max: number): boolean {\n\n\n        if (min > max) {\n            var buffer = max\n            max = min\n            min = buffer\n        }\n\n\n        return num >= min && num <= max;\n    }\n\n    // Helper function to add leading zeros\n    function addLeadingZero(num: number): string {\n        return num < 10 ? '0' + num : num.toString();\n    }\n    /*\n    function generateChartData(data, ListOfShiftData, ListOfPublicHoliayData, TakenLeave) {\n     \n        // Calculate the starting weekday index (0-6 of the first date in the given\n        // array)\n        const firstWeekday = new Date(data[0].date).getDay(),\n\n            monthLength = data.length,\n            emptyTilesFirst = firstWeekday,\n            chartData = [];\n\n        for (let day = 1; day <= monthLength; day++) {\n            // Get date from the given data array\n            var date = new Date(data[day - 1].date);\n            var dateString = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${(date.getDate()).toString().padStart(2, '0')}`\n\n            // Offset by thenumber of empty tiles\n            const xCoordinate = (emptyTilesFirst + day - 1) % 7; // 0 is sunday\n            const yCoordinate = Math.floor((firstWeekday + day - 1) / 7);\n            const id = day;\n\n\n            var shift = data[day - 1].shift;\n            var CurrentColorCode = null\n            var ShiftString = null\n\n            if (shift != null) {\n                var ShiftID\n                for (var index in ListOfShiftData) {\n                    if (ListOfShiftData[index].ShiftIdList == shift)\n                        ShiftID = index\n                }\n                CurrentColorCode = ListOfShiftData[ShiftID].Color\n                ShiftString = ListOfShiftData[ShiftID].ShiftName\n\n                if (ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate].replace(/\\s/g, \"\") == '' && ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate].replace(/\\s/g, \"\") == '') {\n                    ShiftString = 'Rest Day'\n                    CurrentColorCode = '#FFFFE0'\n                }\n                else if (ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] != null && ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate] != null)\n                {\n                    ShiftString = ShiftString + ' : ' + ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] + '-' + ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate]\n                    if (ListOfShiftData[ShiftID].WorkingTimeList[xCoordinate] != null)\n                        ShiftString = ShiftString + ' : ' + ListOfShiftData[ShiftID].WorkingTimeList[xCoordinate] + 'hours'\n                }\n            }\n\n            \n\n            for (var index in ListOfPublicHolidayData) {\n                if (ListOfPublicHolidayData[index].PublicHolidayDate.substring(0, 10) == dateString) {\n                    ShiftString = ListOfPublicHolidayData[index].PublicHolidayName\n                    CurrentColorCode = '#FF0000'\n                    shift = null\n                    break\n                }\n            }\n\n            var LeaveReasonTable = getLookup(\"LeaveReason.LeaveReason\")\n            for (var index in TakenLeave) {\n\n                var StartingRange = new Date(TakenLeave[index].StartDate)\n                var EndingRange = new Date(TakenLeave[index].EndDate)\n                var currentValue = TakenLeave[index].LeaveReason\n                var key\n                for (var LookupIndex in LeaveReasonTable.items) {\n                    if (LeaveReasonTable.items[LookupIndex].Id == currentValue) {\n                        key = LeaveReasonTable.items[LookupIndex].LeaveReason.replace(/\\s/g, \"\")\n                        break\n                    }\n                }\n\n                if (date >= StartingRange && date <= EndingRange) {\n                    ShiftString = key\n                    CurrentColorCode = '#00FF00'\n                    shift = null\n                    console.log(key)\n                }\n            }\n\n            chartData.push({\n                x: xCoordinate,\n                y: 5 - yCoordinate,\n                color: CurrentColorCode,\n                shiftstring: ShiftString,\n                value: shift,\n                date: dateString,\n                custom: {\n                    monthDay: id\n                }\n            });\n\n        }\n\n\n        return chartData;\n    }\n    */\n    \n    function GetCurrentMonthHoliday(ListOfPublicHolidayData: any[], curr_year: number, curr_month: number): [string[], string[], number[]] {\n        var CurrentMonthPublicHolidayName: string[] = [];\n        var CurrentMonthPublicHolidayDate: string[] = [];\n        var CurrentMonthPublicHolidayID: number[] = [];\n        for (var index in ListOfPublicHolidayData) {\n            var date = new Date(ListOfPublicHolidayData[index].PublicHolidayDate.substring(0, 10));\n            var year = date.getFullYear();\n            var month = date.getMonth() + 1; // Months are 0-based, so add 1\n\n            if (year == curr_year && month == curr_month) {\n                CurrentMonthPublicHolidayName.push(ListOfPublicHolidayData[index].PublicHolidayName);\n                CurrentMonthPublicHolidayDate.push(ListOfPublicHolidayData[index].PublicHolidayDate.substring(0, 10));\n                CurrentMonthPublicHolidayID.push(ListOfPublicHolidayData[index].PublicHolidayId)\n            }\n        }\n\n        return [CurrentMonthPublicHolidayName, CurrentMonthPublicHolidayDate, CurrentMonthPublicHolidayID];\n    }\n\n\n\n    function generateMonthRange(year: number, month: number): string[] {\n        const months: string[] = [];\n        const startDate = new Date(year, month - 1, 1); // Month is zero-based\n        // Generate 6 months backward\n        for (let i = 6; i > 0; i--) {\n            const prevMonth = new Date(startDate);\n            prevMonth.setMonth(prevMonth.getMonth() - i);\n            months.push(`${prevMonth.getFullYear()}-${(prevMonth.getMonth() + 1).toString().padStart(2, '0')}`);\n        }\n        // Add the current month\n        months.push(`${startDate.getFullYear()}-${(startDate.getMonth() + 1).toString().padStart(2, '0')}`);\n        // Generate 6 months forward\n        for (let i = 1; i <= 6; i++) {\n            const nextMonth = new Date(startDate);\n            nextMonth.setMonth(nextMonth.getMonth() + i);\n            months.push(`${nextMonth.getFullYear()}-${(nextMonth.getMonth() + 1).toString().padStart(2, '0')}`);\n        }\n        return months;\n    }\n\n\n\n\n\n    function generateListOfDate(res, Year, Month) {\n        var numberOfDays = new Date(Year, Month, 0).getDate();\n        const ListOfData: Data[] = [];\n        for (let day = 1; day <= numberOfDays; day++) {\n            // Construct the date string in the format \"YYYY-MM-DD\"\n            var dateString = `${Year}-${addLeadingZero(Month)}-${addLeadingZero(day)}`;\n            var GroupID = null\n            var date = new Date(dateString)\n            for (var index in res)\n            {\n                var Start = new Date(res[index].ShiftStartDate)\n                var End = new Date(res[index].ShiftEndDate)\n                date.setHours(0);\n                date.setMinutes(0);\n                date.setSeconds(0);\n                date.setMilliseconds(0);\n                if (typeof res[index].EmployeeGroupID !== undefined)//not group\n                {\n                    if (date >= Start && date <= End)\n                    {\n                        GroupID = res[index].EmployeeGroupID\n                        break\n                    }\n                }\n            }\n\n\n            ListOfData.push({\n                date: dateString,\n                shift: null,\n                GroupID: GroupID\n            });\n\n        }\n\n        return ListOfData\n    }\n\n\n\n\n\n    function appendShift(ListOfData, entities) {\n        console.log(entities)\n        for (var x in entities) {\n            const startDate: Date = new Date(entities[x][\"ShiftStartDate\"].substring(0, 10));\n            const endDate: Date = new Date(entities[x][\"ShiftEndDate\"].substring(0, 10));\n            for (var data of ListOfData) {\n                var currentDate: Date = new Date(data.date);\n\n                if (currentDate >= startDate && currentDate <= endDate)\n                {\n                    if (data.GroupID == null)\n                        data.shift = entities[x][\"ShiftId\"]\n                }\n            }\n        }\n\n        return ListOfData\n    }\n\n\n    function generateChartData(data, ListOfGroupData, ListOfShiftData, ListOfPublicHolidayData, TakenLeave) {\n        console.log(data)\n        // Calculate the starting weekday index (0-6 of the first date in the given\n        // array)\n        const firstWeekday = new Date(data[0].date).getDay(),\n\n            monthLength = data.length,\n            emptyTilesFirst = firstWeekday,\n            chartData = [];\n\n        for (let day = 1; day <= monthLength; day++) {\n            // Get date from the given data array\n            var date = new Date(data[day - 1].date);\n            var dateString = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${(date.getDate()).toString().padStart(2, '0')}`\n\n            // Offset by thenumber of empty tiles\n            const xCoordinate = (emptyTilesFirst + day - 1) % 7; // 0 is sunday\n            const yCoordinate = Math.floor((firstWeekday + day - 1) / 7);\n            const id = day;\n\n\n            var shift = data[day - 1].shift;\n            var Group = data[day - 1].GroupID;\n\n            var CurrentColorCode = null\n            var ShiftString = null\n            var detail_string = null\n            for (var index in ListOfPublicHolidayData) {\n                if (ListOfPublicHolidayData[index].PublicHolidayDate.substring(0, 10) == dateString) {\n                    ShiftString = detail_string = ListOfPublicHolidayData[index].PublicHolidayName\n                    CurrentColorCode = '#FF0000'\n                    shift = null\n                    Group = null\n                    break\n                }\n            }\n            if (shift != null)\n            {\n                var ShiftID\n\n                for (var index in ListOfShiftData) {\n                    if (ListOfShiftData[index].ShiftIdList == shift)\n                    {\n                        ShiftID = index\n                        break\n                    }\n                }\n                CurrentColorCode = ListOfShiftData[ShiftID].Color\n                ShiftString = ListOfShiftData[ShiftID].ShiftName\n\n                if (ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate] === undefined && ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] == undefined)\n                {\n                    ShiftString = 'Rest Day'\n                    CurrentColorCode = '#FFFFE0'\n                    detail_string = 'Happy Holidays'\n\n                }\n\n                else if (ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] != null && ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate] != null) {\n                    detail_string =  ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] + '-' + ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate]\n                   // if (ListOfShiftData[ShiftID].WorkingTimeList[xCoordinate] != null)\n                   //     detail_string = detail_string + ' : ' + ListOfShiftData[ShiftID].WorkingTimeList[xCoordinate] + 'hours'\n                }\n            }\n\n\n            else if (Group != null) {\n\n                for (var index in ListOfGroupData) {\n                    if (ListOfGroupData[index].GroupID == Group) {\n                        ShiftString = detail_string = ListOfGroupData[index].GroupName\n                        CurrentColorCode = ListOfGroupData[index].GroupColor\n                        break\n                    }\n                }\n\n            }\n\n        \n            var LeaveReasonTable = getLookup(\"LeaveReason.LeaveReason\")\n            for (var index in TakenLeave) {\n\n                var StartingRange = new Date(TakenLeave[index].StartDate)\n                var EndingRange = new Date(TakenLeave[index].EndDate)\n                var currentValue = TakenLeave[index].LeaveReason\n                var key\n                for (var LookupIndex in LeaveReasonTable.items) {\n                    if (LeaveReasonTable.items[LookupIndex].Id == currentValue) {\n                        key = LeaveReasonTable.items[LookupIndex].LeaveReason.replace(/\\s/g, \"\")\n                        break\n                    }\n                }\n\n                if (date >= StartingRange && date <= EndingRange) {\n                    ShiftString = detail_string = key\n                    CurrentColorCode = '#00FF00'\n                    shift = null\n                }\n            }\n\n\n            chartData.push({\n                x: xCoordinate,\n                y: 5 - yCoordinate,\n                color: CurrentColorCode,\n                shiftstring: ShiftString,\n                value: shift,\n                date: dateString,\n                custom: {\n                    monthDay: id,\n                    details: detail_string\n                }\n            });\n\n        }\n        console.log(chartData)\n        return chartData;\n    }\n\n\n\n\n\n    function isDateBetween(date: Date, startDate: Date, endDate: Date): boolean {\n        if (startDate === undefined || endDate === undefined)\n            return false\n        return date.getTime() >= startDate.getTime() && date.getTime() <= endDate.getTime();\n    }\n\n\n\n\n    function plot(Data, ListOfCurrentMonthPublicHoliday): [number, number] {\n        const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        var chart = Highcharts.chart('Employee-Timetable', {\n            chart:\n            {\n                type: 'heatmap'\n            },\n            title:\n            {\n                text: '',\n                align: 'left'\n            },\n            accessibility: {\n                landmarkVerbosity: 'one'\n            },\n            tooltip: {\n                enabled: true,\n                outside: true,\n                zIndex: 20,\n                headerFormat: '',\n                pointFormat: '{point.date:%A, %b %e, %Y} </br>' + '{point.custom.details:%s }',\n                nullFormat: '{point.date:%A, %b %e, %Y} </br>' + '{point.custom.details:%s }'\n\n            },\n            xAxis: {\n                categories: weekdays,\n                opposite: true,\n                lineWidth: 26,\n                offset: 13,\n                lineColor: 'rgba(27, 26, 37, 0.2)',\n                labels: {\n                    rotation: 0,\n                    y: 20,\n                    style: {\n                        textTransform: 'uppercase',\n                        fontWeight: 'bold'\n                    }\n                },\n                accessibility: {\n                    description: 'weekdays',\n                    rangeDescription: 'X Axis is showing all 7 days of the week, starting with Sunday.'\n                }\n            },\n            yAxis: {\n                min: 0,\n                max: 5,\n                accessibility: {\n                    description: 'weeks'\n                },\n                visible: false\n            },\n            legend: {\n                enable: false,\n                layout: 'vertical',\n                verticalAlign: 'middle'\n            },\n            series: [{\n                showInLegend: false, // Hide series 1 icon in the legend\n                keys: ['x', 'y', 'value', 'date', 'color', 'id'],\n                data: Data,\n                nullColor: 'rgba(196, 196, 196, 0.2)',\n                borderWidth: 2,\n                borderColor: 'rgba(196, 196, 196, 0.2)',\n                dataLabels: [{\n                    enabled: true,\n                    format: '{#unless point.custom.empty}{point.shiftstring}{/unless}',\n                    style: {\n                        textOutline: 'none',\n                        fontWeight: 'normal',\n                        fontSize: '0.73rem'\n                    },\n                    y: 4\n                }, {\n                    enabled: true,\n                    align: 'left',\n                    verticalAlign: 'top',\n                    format: '{#unless point.custom.details}{point.custom.details}{/unless}',\n                    backgroundColor: 'whitesmoke',\n                    padding: 2,\n                    style: {\n                        textOutline: 'none',\n                        color: 'rgba(70, 70, 92, 1)',\n                        fontSize: '0.8rem',\n                        fontWeight: 'bold',\n                        opacity: 0.5\n                    },\n                    x: 1,\n                    y: 1\n                }]\n            }],\n\n            plotOptions: {\n                series: {\n                    point: {\n                        events: {\n                            click: function () {\n                                var FormID = -1\n                                var isLeave = 0\n\n                                for (var buffer in Data) {\n                                    if (Data[buffer].x == this.x && Data[buffer].y == this.y)\n                                    {\n                                        var date = new Date(Data[buffer].date)\n                                        var thisday = date.getDate();\n                                        var thismonth = date.getMonth() + 1; // Month is zero-based\n                                        var thisyear = date.getFullYear();\n                                        var IsGroup = false\n                                        // Format the date as \"YYYY-MM-DD\"\n                                        const formattedDate = `${thisyear}-${thismonth.toString().padStart(2, '0')}-${thisday.toString().padStart(2, '0')}`;\n                                        var DatetimeDate = new Date(formattedDate)\n\n                                        var IsGroup = false\n                                        // Format the date as \"YYYY-MM-DD\"\n                                        for (var index in ListOfLeaveTakenData) {\n                                            var StartDate = new Date(ListOfLeaveTakenData[index].StartDate)\n                                            var EndDate = new Date(ListOfLeaveTakenData[index].EndDate)\n                                            if (date >= StartDate && date <= EndDate) {\n                                                var dlg = new LeaveApplicationDialog();//open the shift \n                                                dlg.loadByIdAndOpenDialog(ListOfLeaveTakenData[index].ID)\n                                                dlg.set_readOnly(true)\n\n                                                isLeave = 1\n                                                break\n                                            }\n                                        }\n                                        if (isLeave == 1)\n                                            break\n                                        var isPublicHoliday = false\n                                        for (var i in ListOfCurrentMonthPublicHoliday) {\n                                            if (ListOfCurrentMonthPublicHoliday[i].PublicHolidayDate == formattedDate) {\n                                                var HolidayFormID = ListOfCurrentMonthPublicHoliday[i].Id\n                                                isPublicHoliday = true\n                                                break\n                                            }\n                                        }\n                                        if (isPublicHoliday = true)\n                                            break\n                                                              \n                                        for (var each_res in CopiedResEntity)\n                                        {\n                                            var shift_start = new Date(CopiedResEntity[each_res][\"ShiftStartDate\"])\n                                            var shift_end= new Date(CopiedResEntity[each_res][\"ShiftEndDate\"])\n                                            var endDateString = CopiedResEntity[each_res][\"ShiftEndDate\"]\n                                            if (CopiedResEntity[each_res][\"EmployeeGroupID\"] !== undefined)\n                                            {\n                                                \n                                                if (date >= shift_start && date <= shift_end)\n                                                {\n                                                    FormID = CopiedResEntity[each_res][\"EmployeeGroupID\"]\n                                                    IsGroup = true\n                                                    break\n                                                }\n                                            }\n                                            if (isDateBetween(DatetimeDate, shift_start, shift_end)) {\n                                                FormID = CopiedResEntity[each_res].Id\n                                                var dlg2 = new SetEmployeeShiftDialog(Authorization.userDefinition.EmployeeRowID, formattedDate, 1, endDateString);//open the shift \n                                                dlg2.loadByIdAndOpenDialog(FormID)\n                                                dlg2.set_readOnly(true)\n                                            }\n                                        }\n\n                                        if (IsGroup)\n                                        {\n                                            var EmployeeGroupDlg = new EmployeeGroupDialog();\n                                            EmployeeGroupDlg.loadByIdAndOpenDialog(FormID);\n                                            EmployeeGroupDlg.set_readOnly(true)\n                                        }\n                                        if (isPublicHoliday) {\n                                            var PublicHolidayDlg = new PublicHolidayDialog();\n                                            PublicHolidayDlg.loadByIdAndOpenDialog(HolidayFormID);\n                                            PublicHolidayDlg.set_readOnly(true)\n                                        }\n                                        break\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n        })\n        var chartWidth = chart.chartWidth;\n        var chartHeight = chart.chartHeight;\n        return [chartWidth, chartHeight]\n    }\n\n\n\n\n\n\n    if (!Authorization.hasPermission(PermissionKeys.HumanResources)) //if he is not HR guy generate another page\n    {\n        var styleElement = document.createElement('style');\n        styleElement.setAttribute(\"type\", \"text/css\")\n\n        styleElement.innerHTML = \n           ` body {margin-top:20px;}\n\n            .card-style1 {\n                box-shadow: 0px 0px 10px 0px rgb(89 75 128 / 9 %);\n            }\n            .border - 0 {\n                border: 0!important;\n            }\n            .card {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                min-width: 0;\n                word-wrap: break-word;\n                background-color: #fff;\n                background-clip: border-box;\n                border: 1px solid rgba(0, 0, 0, .125);\n                border-radius: 0.25rem;\n            }\n            section {\n                padding: 120px 0;\n                overflow: hidden;\n                background: #fff;\n            }\n            .mb-2-3,.my-2-3 {\n                margin-bottom: 2.3rem;\n            }\n\n            .section-title {\n                font-weight: 600;\n                letter-spacing: 2px;\n                text-transform: uppercase;\n                margin-bottom: 10px;\n                position: relative;\n                display: inline-block;\n            }\n\n            .text-primary {\n                    color: #ceaa4d!important;\n                }\n\n            .text-secondary {\n                    color: #15395A!important;\n                }\n\n            .font-weight-600 {\n                    font-weight: 600;\n                }\n\n            .display-26 {\n                    font-size: 1.3rem;\n                }\n\n        @media screen and(min-width: 992px) {\n        .p-lg-7 {\n                padding: 4rem;\n            }\n        }\n\n        @media screen and(min-width: 768px) {\n        .p-md-6 {\n                padding: 3.5rem;\n            }\n        }\n\n        @media screen and(min-width: 576px) {\n        .p-sm-2-3 {\n                padding: 2.3rem;\n            }\n        }\n\n    .p-1-9 {\n            padding: 1.9rem;\n        }\n\n    .bg-secondary {\n            background: #15395A!important;\n        }\n\n        @media screen and(min - width: 576px) {\n        .pe-sm-6,.px-sm-6{\n                padding-right: 3.5rem;\n            }\n        }\n\n        @media screen and(min-width: 576px) {\n        .ps-sm-6,.px-sm-6 {\n                padding-left: 3.5rem;\n            }\n        }\n\n    .pe-1-9,.px-1-9{\n            padding-right: 1.9rem;\n        }\n\n    .ps-1-9,.px-1-9 {\n            padding-left: 1.9rem;\n        }\n\n    .pb-1-9,.py-1-9 {\n            padding-bottom: 1.9rem;\n        }\n\n    .pt-1-9,.py-1-9{\n            padding-top: 1.9rem;\n        }\n    .mb-1-9,.my-1-9 {\n            margin-bottom: 1.9rem;\n        }\n\n        @media(min-width: 992px) {\n        .d-lg-inline-block {\n                display: inline - block!important;\n            }\n        }\n    .rounded {\n            border-radius: 0.25rem!important;\n        }\n        .tab {\n          overflow: hidden;\n          border: 1px solid #ccc;\n          background-color: #f1f1f1;\n        }\n\n        .tab button {\n          background-color: inherit;\n          float: left;\n          border: none;\n          outline: none;\n          cursor: pointer;\n          padding: 14px 16px;\n          transition: 0.3s;\n        }\n\n        .tab button:hover {\n          background-color: #ddd;\n        }\n\n        .tab button.active {\n          background-color: #ccc;\n        }\n\n\n        .tabcontent {\n          display: none;\n          padding: 6px 12px;\n          border: 1px solid #ccc;\n          border-top: none;\n        animation: fadeEffect 1s; /* Fading effect takes 1 second */\n\n        }\n\n        @keyframes fadeEffect {\n          from {opacity: 0;}\n          to {opacity: 1;}\n        }\n        `;\n\n\n\n        var finalRowEle = document.createElement(\"div\")\n        finalRowEle.setAttribute(\"class\", \"row\")\n\n        var finalRowEle2 = document.createElement(\"div\")\n        finalRowEle2.setAttribute(\"class\", \"container\")\n\n        var finalSecEle = document.createElement(\"section\")\n        finalSecEle.setAttribute(\"class\", \"bg-light\")\n\n        var cover1 = document.createElement(\"DIV\")\n        cover1.setAttribute(\"class\",\"col-lg-12 mb-4 mb-sm-5\")\n        var cover2 = document.createElement(\"DIV\")\n        cover2.setAttribute(\"class\", \"card card-style1 border-0\")\n        var cover3 = document.createElement(\"DIV\")\n        cover3.setAttribute(\"class\", \"card-body\")\n\n        var mainrow = document.createElement(\"div\");\n        mainrow.setAttribute(\"class\",\"row align-items-center\")\n        var fragment = document.createElement(\"img\");\n        fragment.setAttribute(\"id\", \"myImg\");\n        fragment.width = 63;\n        fragment.height = 112.5;\n\n\n\n        var timetable_cover1 = document.createElement(\"DIV\")\n        timetable_cover1.setAttribute(\"class\", \"col-lg-12 mb-4 mb-sm-5\")\n        var TimetableNode = document.createElement('DIV')\n        TimetableNode.classList.add('category-title')\n        TimetableNode.setAttribute(\"id\", \"Employee-Timetable\")\n        var no_records = false\n       \n\n        var DepartmentTable = getLookup(\"Department.Department\")\n        var DivisionTable = getLookup(\"Division.Division\")\n        var SectionTable = getLookup(\"Section.Section\")\n        var JobGradeTable = getLookup(\"JobGrade.JobGrade\")\n        var OccupationTable = getLookup(\"Occupation.Occupation\")\n        var done = false\n        \n        serviceCall<ListResponse<any>>({\n            service: ViewShiftHistoryService.baseUrl + '/RetriveShiftHistory',\n            method: \"GET\",\n            data: {\n                'EmployeeID': Authorization.userDefinition.EmployeeRowID\n            },\n            async: false,\n            onSuccess: (res) => {\n                CopiedResEntity = res.Entities\n            \n                ListOfData = generateListOfDate(CopiedResEntity, currentYear, currentMonth);\n                for (var x in res.Entities)\n                {\n                    \n                    if (parseInt(res.Entities[x][\"Id\"]) == 0 )\n                    {\n                        no_records = true\n                        break\n                    }\n                }\n                done = true\n            },\n            onError: (error) => {\n                console.log(error)\n            }\n        });\n\n        while (done == false) {\n        }//wait until the stored procedure extracted all dataas\n        console.log(no_records)\n        serviceCall<ListResponse<any>>({\n            service: EmployeeProfileService.baseUrl + '/EmployeeProfileBasedOnID',\n            data: {\n                'EmployeeID': Authorization.userDefinition.EmployeeRowID\n            },\n            method: \"GET\",\n            async: false,\n            onSuccess: (response) =>\n            {\n                if (response.Entities[0].EmployeeImg) {\n                    fragment.src = '/upload/' + response.Entities[0].EmployeeImg;\n                } else {\n                    // Set default Facebook profile picture URL\n                    if (response.Entities[0].Sex == 1)//is male\n                        fragment.src = 'https://i.stack.imgur.com/l60Hf.png';\n\n                    else if (response.Entities[0].Sex == 0)//is female\n                        fragment.src = 'https://st.depositphotos.com/2218212/2938/i/950/depositphotos_29388097-stock-illustration-facebook-profile.jpg';\n\n                }\n                var Div1 = document.createElement('div');\n                Div1.appendChild(fragment)\n                Div1.setAttribute(\"class\", \"col-lg-2 mb-4 mb-lg-0\");\n\n                var Div2 = document.createElement('div');\n                Div2.setAttribute(\"class\", \"col-lg-5 px-xl-10\");\n                var Div3 = document.createElement('div');\n                Div3.setAttribute(\"class\", \"col-lg-5 px-xl-10\");\n               \n                var Div2_Ul1 = document.createElement('ul');\n                Div2_Ul1.setAttribute(\"class\", \"list-unstyled \")\n\n                var Div3_Ul1 = document.createElement('ul');\n                Div3_Ul1.setAttribute(\"class\", \"list-unstyled \")\n\n\n\n\n                var Div2_li6 = document.createElement('li');\n                //Div2_li6.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                var Div2_li6_span1 = document.createElement('span');\n                 Div2_li6_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                Div2_li6_span1.innerText = 'Name'\n                Div2_li6.appendChild(Div2_li6_span1)\n                Div2_li6.insertAdjacentText('beforeend', response.Entities[0].EmployeeName as string);\n                Div2_Ul1.appendChild(Div2_li6)\n\n                \n                var Div2_li7 = document.createElement('li');\n               // Div2_li7.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                var Div2_li7_span1 = document.createElement('span');\n                Div2_li7_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                Div2_li7_span1.innerText = 'Employee ID'\n                Div2_li7.appendChild(Div2_li7_span1)\n                Div2_li7.insertAdjacentText('beforeend', response.Entities[0].EmployeeID as string);\n                Div2_Ul1.appendChild(Div2_li7)\n\n                console.log(response.Entities[0])\n\n                var Div2_li8 = document.createElement('li');\n                // Div2_li7.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                var Div2_li8_span1 = document.createElement('span');\n                Div2_li8_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                Div2_li8_span1.innerText = 'Age'\n                Div2_li8.appendChild(Div2_li8_span1)\n                Div2_li8.insertAdjacentText('beforeend', response.Entities[0].Age as string);\n                Div2_Ul1.appendChild(Div2_li8)\n\n                const RecruitmentDate = new Date(response.Entities[0].RecruitmentDate);\n                const today = new Date();\n                // Calculate the difference in months and years\n                const yearDiff = today.getFullYear() - RecruitmentDate.getFullYear();\n                const monthDiff = today.getMonth() - RecruitmentDate.getMonth();\n                var Div2_li9 = document.createElement('li');\n                // Div2_li7.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                var Div2_li9_span1 = document.createElement('span');\n                Div2_li9_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                var Service\n\n                if (yearDiff == 0) {\n                    Div2_li9_span1.innerText = 'Month of service'\n                    Service = monthDiff.toString()\n                }\n                else {\n                    Div2_li9_span1.innerText = 'Year of service'\n                    Service = yearDiff.toString()\n\n                }\n\n                 Div2_li9.appendChild(Div2_li9_span1)\n\n                Div2_li9.insertAdjacentText('beforeend',Service as string);\n                Div2_Ul1.appendChild(Div2_li9)\n\n\n\n\n                if (findRowById(DepartmentTable.items, response.Entities[0].DepartmentId) != null) {\n                    var Div3_li1 = document.createElement('li');\n                   // Div2_li1.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li1_span1 = document.createElement('span');\n                    Div3_li1_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                    Div3_li1_span1.innerText = 'Department'\n                    Div3_li1.appendChild(Div3_li1_span1)\n                    Div3_li1.insertAdjacentText('beforeend', findRowById(DepartmentTable.items, response.Entities[0].DepartmentId));\n                    Div3_Ul1.appendChild(Div3_li1)\n                }\n\n                if (findRowById(DivisionTable.items, response.Entities[0].DivisionId) != null) {\n                    var Div3_li2 = document.createElement('li');\n                   // Div2_li2.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li2_span1 = document.createElement('span');\n                    Div3_li2_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                   Div3_li2_span1.innerText = 'Division'\n                    Div3_li2.appendChild(Div3_li2_span1)\n                    Div3_li2.insertAdjacentText('beforeend', findRowById(DivisionTable.items, response.Entities[0].DivisionId));\n                    Div3_Ul1.appendChild(Div3_li2)\n                }\n\n\n                if (findRowById(SectionTable.items, response.Entities[0].SectionId) != null) {\n                    var Div3_li3 = document.createElement('li');\n                   // Div2_li3.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li3_span1 = document.createElement('span');\n                    Div3_li3_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                    Div3_li3_span1.innerText = 'Section'\n                    Div3_li3.appendChild(Div3_li3_span1)\n                    Div3_li3.insertAdjacentText('beforeend', findRowById(SectionTable.items, response.Entities[0].SectionId));\n                    Div3_Ul1.appendChild(Div3_li3)\n                }\n\n                if (findRowById(OccupationTable.items, response.Entities[0].OccupationId) != null) {\n                    var Div3_li5 = document.createElement('li');\n                   // Div2_li5.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li5_span1 = document.createElement('span');\n                    Div3_li5_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                   Div3_li5_span1.innerText = 'Occupation'\n                    Div3_li5.appendChild(Div3_li5_span1)\n                    Div3_li5.insertAdjacentText('beforeend', findRowById(OccupationTable.items, response.Entities[0].OccupationId));\n                    Div3_Ul1.appendChild(Div3_li5)\n                }\n\n\n\n                if (findRowById(JobGradeTable.items, response.Entities[0].JobGradeId) != null) {\n                    var Div3_li4 = document.createElement('li');\n                   // Div2_li4.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li4_span1 = document.createElement('span');\n                     Div3_li4_span1.setAttribute(\"class\", \" text-secondary me-1 font-weight-600\")\n                   Div3_li4_span1.innerText = 'JobGrade'\n                    Div3_li4.appendChild(Div3_li4_span1)\n                    Div3_li4.insertAdjacentText('beforeend', findRowById(JobGradeTable.items, response.Entities[0].JobGradeId));\n                    Div3_Ul1.appendChild(Div3_li4)\n                }\n\n\n                \n\n                \n                //Div2.appendChild(Div2_Div1)\n                Div2.appendChild(Div2_Ul1)\n                Div3.appendChild(Div3_Ul1)\n\n                mainrow.appendChild(Div1)\n                mainrow.appendChild(Div2)\n                mainrow.appendChild(Div3)\n\n                cover3.appendChild(mainrow)\n\n                cover2.appendChild(cover3)\n                cover1.appendChild(cover2)\n                finalRowEle.append(cover1)\n                finalRowEle2.append(finalRowEle)\n\n                finalSecEle.append(finalRowEle2)\n\n                $('#GridDiv').append(finalSecEle)\n                $('#GridDiv').append(styleElement)\n\n          \n                var TimeNode = document.createElement('DIV');\n\n                TimeNode.setAttribute(\"id\", \"time-box\");\n                TimeNode.setAttribute(\"class\", \"row\");\n                TimeNode.setAttribute(\"align\", \"right\");\n\n                var rowNode = document.createElement('DIV');\n                var MonthNode = document.createElement(\"INPUT\");\n                MonthNode.setAttribute(\"id\", \"Month\");\n                MonthNode.setAttribute(\"type\", \"text\");\n                MonthNode.setAttribute(\"class\", \"monthSelect\");\n                rowNode.appendChild(MonthNode);\n                TimeNode.appendChild(rowNode);\n\n\n\n                function open(evt, id) {\n                    // Declare all variables\n                    var i, tabcontent, tablinks;\n\n                    // Get all elements with class=\"tabcontent\" and hide them\n                    tabcontent = document.getElementsByClassName(\"tabcontent\");\n                    for (i = 0; i < tabcontent.length; i++) {\n                        tabcontent[i].style.display = \"none\";\n                    }\n\n                    // Get all elements with class=\"tablinks\" and remove the class \"active\"\n                    tablinks = document.getElementsByClassName(\"tablinks\");\n                    for (i = 0; i < tablinks.length; i++) {\n                        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n                    }\n\n                    // Show the current tab, and add an \"active\" class to the button that opened the tab\n                    if (document.getElementById(id)!=null)\n                        document.getElementById(id).style.display = \"block\";\n                    evt.currentTarget.className += \" active\";\n                }\n\n                var TabRowNode = document.createElement('div');\n                TabRowNode.setAttribute(\"class\", \"tab\");\n\n                var ShiftTableButton = document.createElement('button');\n                ShiftTableButton.addEventListener('click', function () { open(event,'shifttab'); }, false);\n                ShiftTableButton.setAttribute(\"class\", \"tablinks\");\n                ShiftTableButton.innerText = 'Shift'\n                ShiftTableButton.setAttribute(\"id\", \"defaultOpen\");\n\n                var Tab2Button = document.createElement('button');\n                Tab2Button.addEventListener('click', function () { open(event, 'tab2'); }, false);\n                Tab2Button.setAttribute(\"class\", \"tablinks\");\n                Tab2Button.innerText = 'tab2'\n\n\n\n                TabRowNode.appendChild(ShiftTableButton)\n                TabRowNode.appendChild(Tab2Button)\n\n\n                var ShiftTabNode = document.createElement('DIV');\n                ShiftTabNode.setAttribute(\"class\", \"tabcontent\");\n                ShiftTabNode.setAttribute(\"id\", \"shifttab\");\n                ShiftTabNode.appendChild(TimeNode)\n                ShiftTabNode.appendChild(TimetableNode)\n\n\n                var Tab2Node = document.createElement('DIV');\n                Tab2Node.setAttribute(\"class\", \"tabcontent\");\n                Tab2Node.setAttribute(\"id\", \"tab2\");\n\n                var Tab2ContentH3 = document.createElement('h3')\n                Tab2ContentH3.textContent = 'Tab 2'\n\n                var Tab2ContentP = document.createElement('p')\n                Tab2ContentP.textContent = 'This is the content of Tab 2'\n\n                Tab2Node.appendChild(Tab2ContentH3)\n                Tab2Node.appendChild(Tab2ContentP)\n\n\n\n\n                finalRowEle.appendChild(TabRowNode)\n                finalRowEle.appendChild(ShiftTabNode)\n                finalRowEle.appendChild(Tab2Node)\n\n                var SetOfMonthYear = generateMonthRange(currentYear, currentMonth);\n                let MonthEditor = new Select2Editor($(\"#Month\"))\n                for (var i = 0; i < SetOfMonthYear.length; i++) {\n                    MonthEditor.addItem({ id: (i).toString(), text: (SetOfMonthYear[i]).toString(), });\n                    if (SetOfMonthYear[i].toString() == dateString)\n                        MonthEditor.set_value((i).toString())\n                }\n\n                $(\"#Month\").on('change', async function () {\n                    var index = $(this).val()\n                    var wanted = SetOfMonthYear[index]\n                    year = parseInt(wanted.split('-')[0]);\n                    month = parseInt(wanted.split('-')[1]);\n                    currentMonth = month\n                    currentYear = year\n\n                    var ListOfData: Data[] = generateListOfDate(CopiedResEntity,year, month);\n\n                    if (no_records == false)\n                        ListOfData = appendShift(ListOfData, CopiedResEntity);\n\n                    var [CurrentMonthPublicHolidayName, CurrentMonthPublicHolidayDate, CurrentMonthPublicHolidayID] = GetCurrentMonthHoliday(ListOfPublicHolidayData, currentYear, currentMonth)\n                    var ListOfCurrentMonthPublicHoliday: PublicHolidayData[] = [];\n                    for (var index2 in CurrentMonthPublicHolidayDate)\n                    {\n                        ListOfCurrentMonthPublicHoliday.push({\n                            PublicHolidayDate: CurrentMonthPublicHolidayDate[index2],\n                            PublicHolidayId: CurrentMonthPublicHolidayID[index2],\n                            PublicHolidayName: CurrentMonthPublicHolidayName[index2],\n                        })\n                    }\n\n                    var chartData = generateChartData(ListOfData, ListOfGroupData, ListOfShiftData, ListOfCurrentMonthPublicHoliday, ListOfLeaveTakenData);\n                    var chartwidth, chartheight\n                    [chartwidth, chartheight] = plot(chartData, ListOfCurrentMonthPublicHoliday)\n\n                    Tab2Node.style.width = String(chartwidth) + 'px'\n                    Tab2Node.style.height = String(chartheight) + 'px'\n\n                });\n\n                \n                if (no_records == false)\n                    ListOfData = appendShift(ListOfData, CopiedResEntity)\n                var [CurrentMonthPublicHolidayName, CurrentMonthPublicHolidayDate, CurrentMonthPublicHolidayID] = GetCurrentMonthHoliday(ListOfPublicHolidayData, currentYear, currentMonth)\n                var ListOfCurrentMonthPublicHoliday: PublicHolidayData[] = [];\n                for (var index in CurrentMonthPublicHolidayDate) {\n                    ListOfCurrentMonthPublicHoliday.push({\n                        PublicHolidayDate: CurrentMonthPublicHolidayDate[index],\n                        PublicHolidayId: CurrentMonthPublicHolidayID[index],\n                        PublicHolidayName: CurrentMonthPublicHolidayName[index],\n                    })\n                }\n                var chartData = generateChartData(ListOfData, ListOfGroupData, ListOfShiftData, ListOfCurrentMonthPublicHoliday, ListOfLeaveTakenData);\n\n                var chartwidth, chartheight\n                [chartwidth, chartheight] = plot(chartData, ListOfCurrentMonthPublicHoliday)\n             \n                Tab2Node.style.width = String(chartwidth)+'px'\n                Tab2Node.style.height = String(chartheight) + 'px'\n\n\n            ShiftTableButton.click();//open shift tab on default\n\n            },\n            onError: (error) => {\n                console.log(error.Error);\n            }\n        });\n        \n        \n\n\n    }\n\n}", "import {  DataGrid, Decorators, EntityGrid, first, GridRowSelectionMixin, LookupEditor, QuickSearchField, RetrieveResponse } from '@serenity-is/corelib';\nimport { EmployeeProfileColumns, EmployeeProfileRow, EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\nimport { EmployeeProfileDialog } from './EmployeeProfileDialog';\nimport { EmployeeDialog } from './EmployeeDialog';\nimport { ShiftForm, ShiftRow, ShiftService } from '../../../ServerTypes/Shift';\nimport Holidays from 'date-holidays'\nimport { ViewShiftHistoryDialog } from '../../ViewShiftHistory/ViewShiftHistory/ViewShiftHistoryDialog';\nimport { serviceCall, ListResponse, confirm, Authorization } from '@serenity-is/corelib/q';\nimport { PublicHolidayService } from '../../../ServerTypes/PublicHoliday';\nimport { EntitledLeaveService } from '../../../ServerTypes/EntitledLeave';\nimport { AnnualLeavePolicyService } from '../../../ServerTypes/AnnualLeavePolicy';\nimport { SickLeavePolicyService } from '../../../ServerTypes/SickLeavePolicy';\nimport { InitYearService } from '../../../ServerTypes/InitYear';\nimport { EntitledLeaveDialog } from '../../EntitledLeave/EntitledLeave/EntitledLeaveDialog';\nimport { CompanySettingsService } from '../../../ServerTypes/CompanySettings';\nimport { EmployeeEditHistoryDialog } from '../../EmployeeEditHistory/EmployeeEditHistory/EmployeeEditHistoryDialog';\nimport { EmployeeBasicDataDialog } from '../../EmployeeBasicData/EmployeeBasicData/EmployeeBasicDataDialog';\nimport { PermissionKeys, UserService } from '../../../ServerTypes/Administration';\nimport { UserCreationDialog } from '../UserCreation/UserCreationDialog';\n@Decorators.filterable()\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.EmployeeProfileGrid')\nexport class EmployeeProfileGrid extends EntityGrid<EmployeeProfileRow, any>\n{\n    protected getColumnsKey() { return EmployeeProfileColumns.columnsKey; }\n    protected getDialogType() { return EmployeeProfileDialog; }\n    protected getRowDefinition() { return EmployeeProfileRow; }\n    protected getService() { return EmployeeProfileService.baseUrl; }\n    private rowSelection: GridRowSelectionMixin;\n \n    public RowIdWithInitialisedLeave: number[] = [];\n    public RowIdOfEmployees: number[] = [];\n\n\n\n    public AnnualLeaveStartingRange: number[] = [];\n    public SickLeaveStartingRange: number[] = [];\n    public AnnualLeaveEndingRange: number[] = [];\n    public SickLeaveEndingRange: number[] = [];\n    public EntitledAnnualLeave: number[] = [];\n    public EntitledSickLeave: number[] = [];\n    public MaternalLeave: number;\n    public PaternalLeave: number;\n    public CompassionateLeave: number;\n    public MarriageLeave: number;\n    public HospitalisationLeave: number;\n\n\n\n\n    public PrevYearAnnualLeaveStartingRange: number[] = [];\n    public PrevYearSickLeaveStartingRange: number[] = [];\n    public PrevYearAnnualLeaveEndingRange: number[] = [];\n    public PrevYearSickLeaveEndingRange: number[] = [];\n    public PrevYearEntitledAnnualLeave: number[] = [];\n    public PrevYearEntitledSickLeave: number[] = [];\n    public PrevYearMaternalLeave: number;\n    public PrevYearPaternalLeave: number;\n    public PrevYearCompassionateLeave: number;\n    public PrevYearMarriageLeave: number;\n    public PrevYearHospitalisationLeave: number;\n\n\n\n\n\n    public RenewCompanySettings: boolean;\n    public LeaveRefreshDate:string;\n\n    public DynamicList: any[] = [];\n    public LeaveRenewMethod: number;\n    public LeaveEntitlementMethod: number;\n\n    public UserID: number[] = [];\n    public EmployeeRowID: number[] = [];\n    protected getAddButtonCaption() {\n        return \"Create Employee Profile\";\n    }\n    constructor(container: JQuery)\n    {\n\n        super(container);\n        /*\n        interface MyInterface\n        {\n            EmployeeRowID: number;\n            CurrentEntitlement: number;\n            Next_renewal_date: string;\n            Policy_end_date: string;\n            Policy_start_date: string;\n        }\n\n        let dynamicList: MyInterface[] = [];\n\n        EntitledLeaveService.List({\n        }, response => {\n\n            for (var index in response.Entities)\n            {\n                this.RowIdWithInitialisedLeave.push(response.Entities[index].EmployeeRowId)\n                var PolicyStartDate = new Date(response.Entities[index].CurrentPolicyEndDate.substring(0, 10))\n                PolicyStartDate.setFullYear(PolicyStartDate.getFullYear() - 1)\n                const year = PolicyStartDate.getFullYear();\n                const month = PolicyStartDate.getMonth() + 1; // Note: January is 0, so we add 1\n                const day = PolicyStartDate.getDate();\n\n                var PolicyStartDateString = `${year}-${month}-${day}`\n\n\n\n                dynamicList.push({\n                    EmployeeRowID: response.Entities[index].EmployeeRowId,\n                    Next_renewal_date: response.Entities[index].NextEntitlementDate.substring(0, 10),\n                    CurrentEntitlement: response.Entities[index].EntitledAnnualLeave,\n                    Policy_end_date: response.Entities[index].CurrentPolicyEndDate.substring(0, 10),\n                    Policy_start_date: PolicyStartDateString\n                });\n\n            }\n\n            this.DynamicList = dynamicList\n\n        });\n\n        AnnualLeavePolicyService.List({\n        }, response => {\n            console.log(response)\n            const currentDate = new Date();\n            const currentYear = currentDate.getFullYear();\n            const PrevYear = currentYear - 1;\n\n            for (var index in response.Entities)\n            {\n                if (response.Entities[index].Year == currentYear)\n                {aaa\n\n                    this.AnnualLeaveStartingRange.push(response.Entities[index].ServiceFromYear)\n                    this.AnnualLeaveEndingRange.push(response.Entities[index].ServiceUntilYear)\n                    this.EntitledAnnualLeave.push(response.Entities[index].EligibleDays)\n                }\n                else if (response.Entities[index].Year == PrevYear) {\n\n                    this.PrevYearAnnualLeaveStartingRange.push(response.Entities[index].ServiceFromYear)\n                    this.PrevYearAnnualLeaveEndingRange.push(response.Entities[index].ServiceUntilYear)\n                    this.PrevYearEntitledAnnualLeave.push(response.Entities[index].EligibleDays)\n                }\n            }\n\n\n        });\n\n        SickLeavePolicyService.List({\n        }, response => {\n            console.log(response)\n            const currentDate = new Date();\n            const currentYear = currentDate.getFullYear();\n            const PrevYear = currentYear - 1;\n\n            for (var index in response.Entities)\n            {\n                if (response.Entities[index].Year == currentYear) {\n\n\n                    this.SickLeaveStartingRange.push(response.Entities[index].ServiceFromYear)\n                    this.SickLeaveEndingRange.push(response.Entities[index].ServiceUntilYear)\n                    this.EntitledSickLeave.push(response.Entities[index].EligibleDays)\n\n\n                }\n                else if (response.Entities[index].Year == PrevYear) {\n\n                    this.PrevYearSickLeaveStartingRange.push(response.Entities[index].ServiceFromYear)\n                    this.PrevYearSickLeaveEndingRange.push(response.Entities[index].ServiceUntilYear)\n                    this.PrevYearEntitledSickLeave.push(response.Entities[index].EligibleDays)\n                }\n            }\n\n        });\n\n        InitYearService.List({\n        }, response => {\n            const currentDate = new Date();\n            const currentYear = currentDate.getFullYear();\n            const PrevYear = currentYear - 1;\n\n            for (var index in response.Entities)\n            {\n                if (response.Entities[index].Year == currentYear)\n                {\n                    this.MaternalLeave = response.Entities[index].MaternityLeave\n                    this.PaternalLeave = response.Entities[index].PaternityLeave\n                    this.CompassionateLeave = response.Entities[index].CompassionateLeave\n                    this.MarriageLeave = response.Entities[index].MarriageLeave\n                    this.HospitalisationLeave = response.Entities[index].HospitalisationLeave\n                }\n\n                else if (response.Entities[index].Year == PrevYear) {\n                    this.PrevYearMaternalLeave = response.Entities[index].MaternityLeave\n                    this.PrevYearPaternalLeave = response.Entities[index].PaternityLeave\n                    this.PrevYearCompassionateLeave = response.Entities[index].CompassionateLeave\n                    this.PrevYearMarriageLeave = response.Entities[index].MarriageLeave\n                    this.PrevYearHospitalisationLeave = response.Entities[index].HospitalisationLeave\n                }\n            }\n        });\n\n        CompanySettingsService.List({\n        }, response => {\n\n            if (response.Entities[0].RefreshLeaveOnSpecificDate == true)\n                this.LeaveRenewMethod = 1\n\n            else if (response.Entities[0].RefreshLeaveOnYearOfService == true)\n                this.LeaveRenewMethod = 2\n\n\n\n\n\n\n\n\n            if (response.Entities[0].MonthlyEntitlementAnnualLeave == true)\n                this.LeaveEntitlementMethod = 1\n\n            else if (response.Entities[0].OneOffEntitlementAnnualLeave == true)\n                this.LeaveEntitlementMethod = 2\n\n       \n\n            var LeaveRefresh = new Date(response.Entities[0].LeaveRefreshDate)\n            var LeaveRefreshYear = LeaveRefresh.getFullYear()\n            const today = new Date();\n            const todayYear = today.getFullYear();\n\n            if (LeaveRefreshYear != todayYear || today > LeaveRefresh )\n            {\n\n                LeaveRefresh.setFullYear(todayYear)\n                if (today > LeaveRefresh)\n                    LeaveRefresh.setFullYear(LeaveRefresh.getFullYear() + 1)\n\n                this.RenewCompanySettings = true;\n\n                const year = LeaveRefresh.getFullYear();\n                const month = LeaveRefresh.getMonth() + 1; // Note: January is 0, so we add 1\n                const day = LeaveRefresh.getDate();\n\n                this.LeaveRefreshDate = `${year}-${month}-${day}`\n\n            }\n\n            else\n            {\n                const year = LeaveRefresh.getFullYear();\n                const month = LeaveRefresh.getMonth() + 1; // Note: January is 0, so we add 1\n                const day = LeaveRefresh.getDate();\n\n                this.LeaveRefreshDate = `${year}-${month}-${day}`\n\n            }\n        });\n        */\n\n\n\n    }\n    protected getQuickFilters() {\n        let items = super.getQuickFilters();\n        return items;\n    }\n    \n\n\n\n    protected onViewProcessData(response: ListResponse<EmployeeProfileRow>)\n    {\n        response = super.onViewProcessData(response);\n        this.toolbar.findButton(\"column-picker-button\").toggle(false);\n        var EmployeeProfileData = response.Entities\n        /*\n        for (var index in EmployeeProfileData) {\n            var IdRow = EmployeeProfileData[index].Id\n            EmployeeProfileService.Retrieve({\n                EntityId: IdRow\n            }, response => {\n                var Today = new Date()\n                var Birthday = new Date(response.Entity.Birthday)\n                var age = Today.getFullYear() - Birthday.getFullYear() - ((Today.getMonth() < Birthday.getMonth() ||\n                    (Today.getMonth() === Birthday.getMonth() && Today.getDate() < Birthday.getDate())) ? 1 : 0);\n                if (age != EmployeeProfileData[index].Age)\n                    EmployeeProfileService.Update({\n                        EntityId: IdRow,\n                        Entity:\n                        {\n                            \"Age\": age\n                        },\n                    });\n            })\n        }\n        */\n        this.RowIdOfEmployees.length = 0\n        /*\n       \n        //convert to sql\n        function isLeapYear(year: number): boolean {\n            return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\n        }\n\n        function getDifference(list1: number[], list2: number[]): number[]\n        {\n            return list1.filter(item => !list2.includes(item));\n        }\n        //convert to sql\n        function calculateYearsOfService(recruitmentDate: Date, currentDate: Date): number {\n            const YearOfService = currentDate.getFullYear() - recruitmentDate.getFullYear();\n            const recruitmentMonth = recruitmentDate.getMonth();\n            const currentMonth = currentDate.getMonth();\n            const recruitmentDay = recruitmentDate.getDate();\n            const currentDay = currentDate.getDate();\n\n            // Check if the current date is before the recruitment date\n            if (currentMonth < recruitmentMonth || (currentMonth === recruitmentMonth && currentDay < recruitmentDay)) {\n                return YearOfService - 1; // Adjust the years if necessary\n            }\n\n            return YearOfService;\n        }\n        //convert to sql\n        function create_record(Current_entitled_leave,ResponseEntities, recruitmentdate, LeaveRenewMethod, LeaveRefreshDate, LeaveEntitlementMethod\n            , AnnualLeaveStartingRange, SickLeaveStartingRange, AnnualLeaveEndingRange, ListOfEntitledAnnualLeave,\n            ListOfEntitledSickLeave, SickLeaveEndingRange, MarriageLeave, MaternalLeave, HospitalisationLeave, PaternalLeave,CompassionateLeave)\n        {\n            //LeaveEntitlementMethod\n            //1:monthly\n            //2:all at once\n            var Today = new Date()\n            var next_year_flag = false\n            var year = Today.getFullYear()\n            var RecruitmentDate = new Date(recruitmentdate)\n            var NextEntitlementDate\n            var NextEntitlementDateString\n            if (LeaveRenewMethod == 1)//Specific date\n            {\n                var buffer = new Date(LeaveRefreshDate)\n                if (Today > buffer)\n                    buffer.setFullYear(buffer.getFullYear() + 1)\n                var ProjectedRenewalDate = buffer\n                const ProjectedRenewalDateYear = buffer.getFullYear();\n                const ProjectedRenewalDateMonth = buffer.getMonth() + 1; // Note: January is 0, so we add 1\n                const ProjectedRenewalDateDay = buffer.getDate();\n                var ProjectedRenewalDateString = `${ProjectedRenewalDateYear}-${ProjectedRenewalDateMonth}-${ProjectedRenewalDateDay}`;\n            }\n            else if (LeaveRenewMethod == 2)//Year of service // now\n            {\n                var ProjectedRenewalDate = new Date(recruitmentdate)\n                var YearDiff = year - ProjectedRenewalDate.getFullYear()\n                ProjectedRenewalDate.setFullYear(ProjectedRenewalDate.getFullYear() + YearDiff)\n                if (Today > ProjectedRenewalDate)\n                {\n                    ProjectedRenewalDate.setFullYear(ProjectedRenewalDate.getFullYear() + 1)\n                    next_year_flag = true\n                }\n                const ProjectedRenewalDateYear = ProjectedRenewalDate.getFullYear();\n                const ProjectedRenewalDateMonth = ProjectedRenewalDate.getMonth() + 1; // Note: January is 0, so we add 1\n                const ProjectedRenewalDateDay = ProjectedRenewalDate.getDate();\n                var ProjectedRenewalDateString = `${ProjectedRenewalDateYear}-${ProjectedRenewalDateMonth}-${ProjectedRenewalDateDay}`;\n            }\n            var yearsOfService = calculateYearsOfService(RecruitmentDate, Today);\n            var EntitledAnnualLeave = 0\n            var EntitledSickLeave = 0\n            for (var x in AnnualLeaveStartingRange)\n            {\n                if (yearsOfService >= AnnualLeaveStartingRange[x] && yearsOfService <= AnnualLeaveEndingRange[x]) {\n                    EntitledAnnualLeave = ListOfEntitledAnnualLeave[x]\n                    break\n                }\n            }\n            for (var y in SickLeaveStartingRange)\n            {\n                if (yearsOfService >= SickLeaveStartingRange[y] && yearsOfService <= SickLeaveEndingRange[y]) {\n                    EntitledSickLeave = ListOfEntitledSickLeave[y]\n                    break\n                }\n            }\n            if (LeaveEntitlementMethod == 1)//monthly\n            {\n                var PolicyStartingDate = new Date(ProjectedRenewalDate)\n                PolicyStartingDate.setFullYear(PolicyStartingDate.getFullYear() - 1)\n                var monthsPassed = (Today.getMonth() - PolicyStartingDate.getMonth());\n                PolicyStartingDate.setMonth(PolicyStartingDate.getMonth() + monthsPassed)\n                if (Today > PolicyStartingDate)\n                {\n                    PolicyStartingDate.setMonth(PolicyStartingDate.getMonth() + 1)\n                    monthsPassed = monthsPassed + 1\n                }\n                NextEntitlementDate = PolicyStartingDate\n                const NextEntitlementDateYear = NextEntitlementDate.getFullYear();\n                const NextEntitlementDateMonth = NextEntitlementDate.getMonth(); // Note: January is 0, so we add 1\n                const NextEntitlementDateDay = NextEntitlementDate.getDate();\n                NextEntitlementDateString = `${NextEntitlementDateYear}-${NextEntitlementDateMonth}-${NextEntitlementDateDay}`;\n                \n                var LeapYear = isLeapYear(PolicyStartingDate.getFullYear())\n           \n                if (next_year_flag == true\n                    && ((monthsPassed == 1 && LeapYear == false) || (monthsPassed == 2 && LeapYear == true)))// last entitlement for year\n                    monthsPassed = 13\n\n                else if ((monthsPassed == 2 && LeapYear==false) || (LeapYear == true && monthsPassed == 1)) // first entitlement every year\n                {\n                    EntitledAnnualLeave = EntitledAnnualLeave / 12.0 \n\n                    serviceCall<RetrieveResponse<any>>({\n                        service: EntitledLeaveService.baseUrl + '/CalculateCarryForward',\n                        data: {\n                            'EmployeeID': ResponseEntities.ID\n                        },\n                        method: \"GET\",\n                        async: false,\n                        onSuccess: (response) => {\n                            console.log(response)\n                        },\n                        onError: (error) => {\n                            console.log(error.Error);\n                        }\n                    });\n\n\n                }\n\n                else\n                \n                    EntitledAnnualLeave = Current_entitled_leave + EntitledAnnualLeave / 12.0 \n\n\n            }\n\n            else\n            {\n                const NextEntitlementDateYear = NextEntitlementDate.getFullYear();\n                const NextEntitlementDateMonth = NextEntitlementDate.getMonth() + 1; // Note: January is 0, so we add 1\n                const NextEntitlementDateDay = NextEntitlementDate.getDate();\n                NextEntitlementDateString = `${NextEntitlementDateYear}-${NextEntitlementDateMonth}-${NextEntitlementDateDay}`;\n            }\n\n\n            if (EntitledAnnualLeave > 0)\n            {\n                if (ResponseEntities.MaritalStatus == 1)//if married, entitle maternity or paternity leave\n                {\n\n                    if (ResponseEntities.Sex == 1)//male  \n                    {\n                        EntitledLeaveService.Create({\n                            Entity:\n                            {\n                                \"EmployeeRowId\": ResponseEntities.Id,\n                                \"EntitledMarriageLeave\": MarriageLeave,\n                                \"EntitledMaternityLeave\": MaternalLeave,\n                                \"EntitledHospitalisationLeave\": HospitalisationLeave,\n                                \"EntitledSickLeave\": EntitledSickLeave,\n                                \"EntitledAnnualLeave\": EntitledAnnualLeave,\n                                \"CurrentPolicyEndDate\": ProjectedRenewalDateString,\n                                \"NextEntitlementDate\": NextEntitlementDate,\n                                \"EntitledCompassionateLeave\": CompassionateLeave\n                            },\n                        });\n                    }\n\n                    else {\n\n                        EntitledLeaveService.Create({\n                            Entity:\n                            {\n                                \"EmployeeRowId\": ResponseEntities.Id,\n                                \"EntitledMarriageLeave\": MarriageLeave,\n                                \"EntitledPaternityLeave\": PaternalLeave,\n                                \"EntitledHospitalisationLeave\": HospitalisationLeave,\n                                \"EntitledSickLeave\": EntitledSickLeave,\n                                \"EntitledAnnualLeave\": EntitledAnnualLeave,\n                                \"CurrentPolicyEndDate\": ProjectedRenewalDateString,\n                                \"NextEntitlementDate\": NextEntitlementDate,\n                                \"EntitledCompassionateLeave\": CompassionateLeave\n\n                            },\n                        });\n\n                    }\n\n\n\n\n                }\n\n                else {\n                    EntitledLeaveService.Create({\n                        Entity:\n                        {\n                            \"EmployeeRowId\": ResponseEntities.Id,\n                            \"EntitledMarriageLeave\": MarriageLeave,\n                            \"EntitledHospitalisationLeave\": HospitalisationLeave,\n                            \"EntitledSickLeave\": EntitledSickLeave,\n                            \"EntitledAnnualLeave\": EntitledAnnualLeave,\n                            \"CurrentPolicyEndDate\": ProjectedRenewalDateString,\n                            \"NextEntitlementDate\": NextEntitlementDate,\n                            \"EntitledCompassionateLeave\": CompassionateLeave\n\n                        },\n                    });\n\n\n                }\n            }\n            \n\n\n        }\n    \n        var differenceList: number[] = getDifference(this.RowIdOfEmployees, this.RowIdWithInitialisedLeave);\n        var newlyCreatedList: number[] = []\n        for (var index in response.Entities)//create leave entitlement record for those who still dont have\n        {\n            const today = new Date();\n            const year = today.getFullYear();\n\n            if (differenceList.includes(response.Entities[index].Id)) \n            {\n\n                newlyCreatedList.push(response.Entities[index].Id)\n                if (this.LeaveRenewMethod == 1)//Specific date\n                {\n                    var buffer = new Date(this.LeaveRefreshDate)\n                    if (today > buffer)\n                    {\n                        create_record(null,response.Entities[index], response.Entities[index].RecruitmentDate.substring(0, 10), this.LeaveRenewMethod, this.LeaveRefreshDate, this.LeaveEntitlementMethod,\n                            this.AnnualLeaveStartingRange, this.SickLeaveStartingRange, this.AnnualLeaveEndingRange, this.EntitledAnnualLeave, this.EntitledSickLeave,\n                            this.SickLeaveEndingRange, this.MarriageLeave, this.MaternalLeave, this.HospitalisationLeave, this.PaternalLeave, this.CompassionateLeave)\n                    }\n                    else\n                    {\n                        create_record(null, response.Entities[index], response.Entities[index].RecruitmentDate.substring(0, 10), this.LeaveRenewMethod, this.LeaveRefreshDate, this.LeaveEntitlementMethod,\n                            this.PrevYearAnnualLeaveStartingRange, this.PrevYearSickLeaveStartingRange, this.PrevYearAnnualLeaveEndingRange, this.PrevYearEntitledAnnualLeave, this.PrevYearEntitledSickLeave,\n                            this.PrevYearSickLeaveEndingRange, this.PrevYearMarriageLeave, this.PrevYearMaternalLeave, this.PrevYearHospitalisationLeave, this.PrevYearPaternalLeave, this.PrevYearCompassionateLeave)\n                    }\n                }\n                else if (this.LeaveRenewMethod == 2)//Year of service // now\n                {\n                    var ProjectedRenewalDate = new Date(response.Entities[index].RecruitmentDate.substring(0, 10))\n                    var YearDiff = year - ProjectedRenewalDate.getFullYear()\n                    if (today > ProjectedRenewalDate)\n                    {\n                        create_record(null,response.Entities[index], response.Entities[index].RecruitmentDate.substring(0, 10), this.LeaveRenewMethod, this.LeaveRefreshDate, this.LeaveEntitlementMethod,\n                            this.AnnualLeaveStartingRange, this.SickLeaveStartingRange, this.AnnualLeaveEndingRange, this.EntitledAnnualLeave, this.EntitledSickLeave,\n                            this.SickLeaveEndingRange, this.MarriageLeave, this.MaternalLeave, this.HospitalisationLeave, this.PaternalLeave, this.CompassionateLeave)\n                    }\n                    else\n                    {\n                        create_record(null, response.Entities[index], response.Entities[index].RecruitmentDate.substring(0, 10), this.LeaveRenewMethod, this.LeaveRefreshDate, this.LeaveEntitlementMethod,\n                            this.PrevYearAnnualLeaveStartingRange, this.PrevYearSickLeaveStartingRange, this.PrevYearAnnualLeaveEndingRange, this.PrevYearEntitledAnnualLeave, this.PrevYearEntitledSickLeave,\n                            this.PrevYearSickLeaveEndingRange, this.PrevYearMarriageLeave, this.PrevYearMaternalLeave, this.PrevYearHospitalisationLeave, this.PrevYearPaternalLeave, this.PrevYearCompassionateLeave)\n                    }\n                }\n            }\n        }\n        */\n        return response;\n    }\n    protected createToolbarExtensions() { //creates the selector\n        super.createToolbarExtensions();\n        this.rowSelection = new GridRowSelectionMixin(this, {\n            selectable: (item: EmployeeProfileRow) => {\n                return true;\n            }\n        });\n    }\n    protected getColumns() {\n        DataGrid.defaultRowHeight = 100;\n        var columns = super.getColumns();\n        columns.splice(0, 0, {\n            field: 'Employee Leave',\n            name: '',\n            format: ctx => {\n                var button = '<a class=\"inline-action leave-application\" title=\"leave\"><i class=\"fa fa-plane\"></i></a>'\n                    + '<br>'\n                    + '<a class=\"inline-action employee-post\" title=\"employee profile edit history\"><i class=\"fa fa-wrench\"></i></a>';\n                return button\n\n            },\n            width: 12,\n            minWidth: 12,\n            maxWidth: 12\n        });\n\n        columns.splice(0, 0, {\n            field: 'Employee Shift History',\n            name: '',\n            format: ctx => {\n                var button = '<a class=\"inline-action shift-history\" title=\"shift history\"><i class=\"fa fa-book\"></i></a>'\n                    + '<br>'\n                    + '<a class=\"inline-action basic-info\" title=\"basic info\"> <i class=\"fa fa-user-tie\"></i></a>';\n                return button\n            },\n            width: 12,\n            minWidth: 12,\n            maxWidth: 12\n        });\n        /*\n        columns.splice(0, 0, {\n            field: 'Employee Leave',\n            name: '',\n            format: ctx => {\n                var button = '<a class=\"inline-action leave-application\" title=\"leave\"><i class=\"fa fa-plane\"></i></a>'\n                    + '<br>'\n                    + '<a class=\"inline-action money-claiming\" title=\"money claiming\"><i class=\"fa fa-money-bill-wave\"></i></a>';\n                return button\n            },\n            width: 12,\n            minWidth: 12,\n            maxWidth: 12\n        });\n        columns.splice(0, 0, {\n            field: 'Employee Shift History',\n            name: '',\n            format: ctx => {\n                var button = '<a class=\"inline-action shift-history\" title=\"shift history\"><i class=\"fa fa-book\"></i></a>'\n                    + '<br>'\n                    + '<a class=\"inline-action basic-info\" title=\"basic info\"> <i class=\"fa fa-user-tie\"></i></a>';\n                return button\n            },\n            width: 12,\n            minWidth: 12,\n            maxWidth: 12\n        });\n        columns.splice(0, 0, {\n            field: 'Employee Accounts',\n            name: '',\n            format: ctx => {\n                var button = '<a class=\"inline-action payment-accounts\" title=\"payment & accounts\"> <i class=\"fa fa-dollar-sign\"></i></a>'\n                    + '<br>'\n                    + '<a class=\"inline-action employee-post\" title=\"employee profile edit history\"><i class=\"fa fa-wrench\"></i></a>';\n                return button\n            },\n            width: 12,\n            minWidth: 12,\n            maxWidth: 12\n        });\n        */\n\n      /*\n        columns.splice(0, 0, {\n            field: 'Employee Basic Info',\n            name: '',\n            format: ctx => {\n                var button = '<a class=\"inline-action basic-info\" title=\"basic info\"> <i class=\"fa fa-user-tie\"></i></a>';\n                return button\n            },\n            width: 12,\n            minWidth: 12,\n            maxWidth: 12\n        });\n        */\n        return columns;\n    }\n    protected getButtons() {\n        var buttons = super.getButtons();\n\n        if (Authorization.hasPermission(PermissionKeys.HumanResources)) {\n            buttons.push({\n                title: 'Batch User Creation',\n                cssClass: 'apply-changes-button',\n                onClick: e => {\n                    confirm(\n                        \"Do you want to create users in batch?\",\n                        () => {\n                            var CreateUserDialog = new UserCreationDialog()\n                            CreateUserDialog.dialogOpen()\n\n                            CreateUserDialog.element.on(\"dialogclose\", function () {\n                                location.reload()\n                            })\n\n\n                        }\n                    )\n                },\n                separator: true\n            });\n        }\n        return buttons;\n    }\n\n    protected onClick(e: JQueryEventObject, row: number, cell: number) {\n        super.onClick(e, row, cell);\n        if (e.isDefaultPrevented())\n            return;\n        // get reference to current item\n        var item = this.itemAt(row);\n        // get reference to clicked element\n        var target = $(e.target);\n        if (target.parent().hasClass('inline-action'))\n            target = target.parent();\n\n        if (target.hasClass('basic-info')) {\n            confirm(\"Do you want to view basic employee data?\", () =>\n            {\n                var dlg = new EmployeeBasicDataDialog(item.Id)\n                dlg.loadByIdAndOpenDialog(item.Id)\n                dlg.set_readOnly(true);\n                dlg.element.on(\"dialogopen\", function () {\n                })\n\n            });\n        }\n        if (target.hasClass('employee-post')) {\n            confirm(\"Do you want to view employee profile edit history?\", () =>\n            {\n                var dlg = new EmployeeEditHistoryDialog(item.Id)\n                //dlg.set_readOnly(true);\n                dlg.dialogOpen();\n\n            });\n        }\n        /*\n        if (target.hasClass('payment-accounts')) {\n            confirm(\"Do you want to view employee payment and accounts?\", () =>\n            {\n\n            });\n        }\n\n        if (target.hasClass('money-claiming')) {\n            confirm(\"Do you want to view money claiming details?\", () =>\n            {\n\n            });\n        }\n        */\n        if (target.hasClass('leave-application')) {\n            confirm(\"Do you want to view leave details?\", () =>\n            {\n                EntitledLeaveService.List({\n                }, response => {\n                    var ListBuffer = response.Entities.filter(buffer => buffer.EmployeeRowId === item.Id);\n                    ListBuffer.sort((a, b) => {\n                        const dateA = new Date(a.NextEntitlementDate).getTime();\n                        const dateB = new Date(b.NextEntitlementDate).getTime();\n                        return dateA - dateB;\n                    });\n                    var dlg = new EntitledLeaveDialog(item.Id);\n                    dlg.loadByIdAndOpenDialog(ListBuffer[ListBuffer.length - 1].Id);\n                });\n            });\n        }\n        if (target.hasClass('shift-history')) {\n            confirm(\"Do you want to view the shift history?\", () => {\n                var dlg = new ViewShiftHistoryDialog(item.EmployeeID,item.Id);\n                dlg.dialogOpen();\n\n            });\n        }\n\n    }\n\n}", "import { DataGrid, Decorators, EditorUtils, EntityDialog, Select2Editor } from '@serenity-is/corelib';\nimport { EmployeeProfileForm, EmployeeProfileRow, EmployeeProfileService, EmployeeType, ProbationClass, SOCSOClass } from '../../../ServerTypes/EmployeeProfile';\nimport { alertDialog, getHighlightTarget, RetrieveResponse, serviceCall } from '@serenity-is/corelib/q';\nimport { ShiftService } from '../../../ServerTypes/Shift';\nimport { UserDialog } from '../../../Administration/User/UserDialog';\nimport { UserPermissionService, UserRow, UserService } from '../../../ServerTypes/Administration';\nimport { UserPermissionDialog } from '../../../Administration/UserPermission/UserPermissionDialog';\nimport { PermissionKeys } from '../../../ServerTypes/Administration';\nimport { CompanySettingsService } from '../../../ServerTypes/CompanySettings';\nimport { EmployeeEditHistoryService } from '../../../ServerTypes/EmployeeEditHistory';\nimport { userDefinition } from '../../../Administration/User/Authentication/Authorization';\nimport { Authorization, isEmptyOrNull } from '@serenity-is/corelib/q';\nimport { TerminateEmployeeDialog } from '../TerminateEmployee/TerminateEmployeeDialog';\nimport { EmployeeResignDialog } from '../EmployeeResign/EmployeeResignDialog';\nimport { ListResponse, confirm } from '@serenity-is/corelib/q';\nimport { AnnouncementWizardService } from '../../../ServerTypes/Announcement';\nimport { OTApplicationService } from '../../../ServerTypes/OTApplication';\n\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.EmployeeProfileDialog')\nexport class EmployeeProfileDialog extends EntityDialog<EmployeeProfileRow, any> {\n    protected getFormKey() { return EmployeeProfileForm.formKey; }\n    protected getRowDefinition() { return EmployeeProfileRow; }\n    protected getService() { return EmployeeProfileService.baseUrl; }\n\n    protected form = new EmployeeProfileForm(this.idPrefix);\n    public list_of_employee_id: string[] = [];\n    public list_of_employee_row_id: number[] = [];\n    public ListOfUserName: string[] = [];\n\n\n    public OriginalEmployeeId: string;\n    public Username: string;\n    public ProbationMonths: number;\n\n    public permission: string;\n    public UserRowID: number;\n    public EmployeeRowID: number;\n    public OriginalValue: Record<string, string> = {};\n    public EditedValue: Record<string, string> = {};\n    public RetireAge: number;\n    public OriginalCreateUserValue: number;\n\n    constructor() {\n        super();\n        this.form.FixedDeductionList.slickGrid.setOptions({ rowHeight: 30 });\n        this.form.AllowanceLists.slickGrid.setOptions({ rowHeight: 30 });\n        this.form.EmployeeCareerPath.slickGrid.setOptions({ rowHeight: 30 });\n\n        this.cloneButton.remove()\n        EmployeeProfileService.List({\n        }, response => {\n            for (var key in response.Entities) {\n                this.list_of_employee_id.push(response.Entities[key].EmployeeID)\n                this.list_of_employee_row_id.push(response.Entities[key].Id)\n            }\n        });\n        CompanySettingsService.List({\n        }, response => {\n            for (var key in response.Entities) {\n                if (response.Entities[key].IsActive == 1) {\n                    this.ProbationMonths = response.Entities[key].ProbationPeriod\n                    this.RetireAge = response.Entities[key].RetireAge\n                }\n            }\n        });\n\n    }\n    public createUser() {\n        var self = this\n\n        UserService.Create({\n            Entity:\n            {\n                \"Username\": this.form.UserName.value,\n                \"DisplayName\": this.form.EmployeeName.value,\n                \"Password\": this.form.UserPassword.value,\n                \"PasswordConfirm\": this.form.UserPassword.value,\n                \"Email\": this.form.EmployeeEmail.value,\n                \"MobilePhoneNumber\": this.form.TelNumber1.value\n            },\n        });\n    }\n    protected onSaveSuccess(response): void {\n        var self = this\n        var entity_id = this.entityId\n\n        if (this.isNew()) {\n            var UserName = Authorization.userDefinition.Username\n            var Today = new Date()\n            var Description = 'Employee ' + this.form.EmployeeName.value + ' is created by ' + UserName\n                + ' on ' + Today\n            EmployeeEditHistoryService.Create({\n                Entity:\n                {\n                    \"Description\": Description,\n                    \"OldValue\": null,\n                    \"NewValue\": null,\n                    \"FieldName\": null,\n                    \"EmployeeRowId\": this.EmployeeRowID\n\n                },\n            });\n            if (this.form.CreateUser.value == true)\n                this.createUser()\n        }\n        else if (!this.isNew())//not new\n        {\n            if (this.form.CreateUser.value == true) {\n                UserService.List({\n                }, response => {\n                    var found = 0\n                    for (var index in response.Entities) {\n                        if (response.Entities[index].EmployeeRowID == entity_id) {\n                            found = 1\n                            UserService.Update({\n                                EntityId: response.Entities[index].UserId,\n                                Entity:\n                                {\n                                    \"DisplayName\": this.form.EmployeeName.value,\n                                    \"Email\": this.form.EmployeeEmail.value,\n                                    \"MobilePhoneNumber\": this.form.TelNumber1.value\n                                },\n                            });\n\n                        }\n                    }\n                    if (found == 0)\n                        self.createUser()\n                    this.Record(this.EditedValue)\n                    var keys = Object.keys(this.EditedValue);\n                    var UserName = Authorization.userDefinition.Username\n                    var Today = new Date()\n                    for (const key of keys) {\n                        if (this.EditedValue[key] != this.OriginalValue[key] && typeof this.OriginalValue[key] != \"object\"\n                            && typeof this.EditedValue[key] != \"object\") {\n                            var Word = key\n                            Word = Word.replace(/ID/g, \"\")\n                            if (isEmptyOrNull(this.OriginalValue[key])) {\n                                var Description = Word + ' of ' + this.form.EmployeeName.value + ' is set by ' + UserName\n                                    + ' to ' + this.EditedValue[key] + ' on ' + Today\n                            }\n                            else {\n                                var Description = Word + ' of ' + this.form.EmployeeName.value + ' is changed by ' + UserName\n                                    + ' from ' + this.OriginalValue[key] + ' to ' + this.EditedValue[key] + ' on ' + Today\n                            }\n\n\n                            EmployeeEditHistoryService.Create({\n                                Entity:\n                                {\n                                    \"Description\": Description,\n                                    \"OldValue\": this.OriginalValue[key],\n                                    \"NewValue\": this.EditedValue[key],\n                                    \"FieldName\": key,\n                                    \"EmployeeRowId\": this.EmployeeRowID\n                                },\n                            });\n\n                        }\n\n                    }\n\n                });\n            }\n\n            else {\n                this.Record(this.EditedValue)\n                var keys = Object.keys(this.EditedValue);\n                var UserName = Authorization.userDefinition.Username\n\n                for (const key of keys) {\n                    if (this.EditedValue[key] !== this.OriginalValue[key] && typeof this.OriginalValue[key] != \"object\"\n                        && typeof this.EditedValue[key] != \"object\") {\n                        var Today = new Date()\n                        var Word = key\n                        Word = Word.replace(/ID/g, \"\")\n                        if (isEmptyOrNull(this.OriginalValue[key]))\n                            var Description = Word + ' of ' + this.form.EmployeeName.value + ' is set by ' + UserName\n                                + ' to ' + this.EditedValue[key] + ' on ' + Today\n                        else\n                            var Description = Word + ' of ' + this.form.EmployeeName.value + ' is changed by ' + UserName\n                                + ' from ' + this.OriginalValue[key] + ' to ' + this.EditedValue[key] + ' on ' + Today\n\n                        EmployeeEditHistoryService.Create({\n                            Entity:\n                            {\n                                \"Description\": Description,\n                                \"OldValue\": this.OriginalValue[key],\n                                \"NewValue\": this.EditedValue[key],\n                                \"FieldName\": key,\n                                \"EmployeeRowId\": this.EmployeeRowID\n                            },\n                        });\n\n                    }\n                }\n            }\n\n\n        }\n\n        super.onSaveSuccess(response);\n    }\n    protected onDialogOpen() {\n        super.onDialogOpen()\n        var self = this\n        EditorUtils.setReadonly(self.form.Age.element, true);\n\n        if (!this.isNew()) {\n            EditorUtils.setReadonly(self.form.BasicSalary.element, true);\n            EditorUtils.setReadonly(self.form.DivisionID.element, true);\n            EditorUtils.setReadonly(self.form.DepartmentID.element, true);\n            EditorUtils.setReadonly(self.form.OccupationID.element, true);\n            EditorUtils.setReadonly(self.form.SectionID.element, true);\n            EditorUtils.setReadonly(self.form.JobGradeID.element, true);\n        }\n        else\n            $('.CareerPahth').parent().hide()\n\n\n\n\n\n\n        const addButton = $('.EmployeeCareerPath .add-button');\n        addButton.on(\"click\", function () {\n            $('.s-HRMSoftware-EmployeeProfile-EmployeeCareerPathEditDialog .s-TemplatedDialog .s-DialogContent .s-Form .EmployeeRowId .s-LookupEditor').val(self.entityId).trigger('change')\n\n        })\n\n\n\n\n\n        $('.OtPayEntitlement').parent().after(`<ul role=\"tablist\" class=\"nav nav-tabs property-tabs\">\n            <li class=\"nav-item\" role=\"presentation\"> <a class=\"nav-link custom active AllowanceLists\" data-bs-toggle=\"tab\" role=\"tab\">Allowance</a> </li>\n            <li class=\"nav-item\" role=\"presentation\"> <a class=\"nav-link custom FixedDeductionList\" data-bs-toggle=\"tab\" role=\"tab\"> Deductions</a></li>\n        </ul>\n        `)\n        $('.field.FixedDeductionList').parent().hide()\n\n\n        $('.field.OtPayEntitlement, .field.FixedOtRateOption, .field.PayByMonth, .field.PayByHour, .field.PayByDay').addClass('col-2');\n\n\n        document.querySelectorAll('.nav-link.custom').forEach(link => {\n            link.addEventListener('click', function () {\n                // Remove 'active' class from all <a> elements\n                document.querySelectorAll('.nav-link.custom').forEach(item => item.classList.remove('active'));\n\n                // Add 'active' class to the clicked <a> element\n                this.classList.add('active');\n                console.log(this.classList)\n                const containsAllowanceList = Object.values(this.classList).includes(\"AllowanceLists\");\n                const containsFixedDeductionList = Object.values(this.classList).includes(\"FixedDeductionList\");\n                if (containsAllowanceList) {\n                    $('.field.AllowanceLists').parent().show()\n                    $('.field.FixedDeductionList').parent().hide()\n                }\n                else if (containsFixedDeductionList) {\n                    $('.field.AllowanceLists').parent().hide()\n                    $('.field.FixedDeductionList').parent().show()\n                }\n            });\n        });\n        $('.FixedOtRateOption').hide();\n        var OtPayEntitlement = document.getElementById(`${this.idPrefix}OtPayEntitlement`)\n        $(OtPayEntitlement).on('change', async function () {\n            if (self.form.OtPayEntitlement.value == true)\n                $('.FixedOtRateOption, .OtRateWeekday, .OtRateWeekend, .OtRatePublicHoliday, .FixedOtRateOption').show();\n\n            else if (self.form.OtPayEntitlement.value == false) {\n                self.form.OtRateWeekday.value = self.form.OtRateWeekend.value = self.form.OtRatePublicHoliday.value = 0\n                $('.OtRateWeekday, .OtRateWeekend, .OtRatePublicHoliday, .FixedOtRateOption').hide();\n            }\n        })\n        $(OtPayEntitlement).trigger('change')\n        var FixedOtRateOption = document.getElementById(`${this.idPrefix}FixedOtRateOption`)\n        $(FixedOtRateOption).on('change', async function () {\n            if (self.form.FixedOtRateOption.value == true) {\n                EditorUtils.setReadonly(self.form.OtRatePublicHoliday.element, false);\n                EditorUtils.setReadonly(self.form.OtRateWeekday.element, false);\n                EditorUtils.setReadonly(self.form.OtRateWeekend.element, false);\n            }\n            else if (self.form.FixedOtRateOption.value == false) {\n                EditorUtils.setReadonly(self.form.OtRatePublicHoliday.element, true);\n                EditorUtils.setReadonly(self.form.OtRateWeekday.element, true);\n                EditorUtils.setReadonly(self.form.OtRateWeekend.element, true);\n            }\n        })\n        $(FixedOtRateOption).trigger('change')\n\n\n        EditorUtils.setReadonly(this.form.WorkingHour.element, true);\n        EditorUtils.setReadonly(this.form.WorkingDays.element, true);\n        EditorUtils.setReadonly(this.form.DailyRateBase.element, true);\n        EditorUtils.setReadonly(this.form.NplRateBase.element, true);\n\n        var PassWordElement = this.form.UserPassword.element;\n        var UserNameElement = this.form.UserName.element;\n        $(PassWordElement).attr('autocomplete', 'off');\n        $(UserNameElement).attr('autocomplete', 'off');\n        EditorUtils.setReadonly(this.form.PassedProbation.element, true);\n\n        // Create a tooltip element\n        const tooltip = document.createElement('div');\n        tooltip.style.position = 'absolute';\n        tooltip.style.backgroundColor = '#000';\n        tooltip.style.color = '#fff';\n        tooltip.style.padding = '4px';\n        tooltip.style.borderRadius = '4px';\n        tooltip.style.zIndex = Number.MAX_SAFE_INTEGER.toString();\n        tooltip.style.display = 'none'; // Initially hidden\n        document.body.appendChild(tooltip);\n\n        if (parseInt(this.form.EmployeeType.value) == EmployeeType.Local || this.isNew())\n            $('.IssueDate, .WorkingPermitIssueDate, .WorkingPermitExpireDate, .WorkingPermitValidFrom, .WorkingPermitValidUntil, .ArrivalDate').hide();\n\n\n        this.validateBeforeSave()\n        {\n            this.form.CreateUser.addValidationRule(this.uniqueName,\n                e => {\n                    if (this.form.CreateUser.value && (isEmptyOrNull(this.form.UserName.value) || isEmptyOrNull(this.form.UserPassword.value))) {\n                        return \"Please fill in UserName and Password\";\n                    }\n                    return null;\n                });\n        };\n        var BirthdayElement = document.getElementById(this.idPrefix + 'Birthday')\n        EditorUtils.setReadonly(this.form.RetireDate.element, true);\n        $(BirthdayElement).on(\"change\", function () {\n            var birthDate = self.form.Birthday.valueAsDate\n            const retireYear = birthDate.getFullYear() + self.RetireAge;\n\n            // Create a new date for the retirement year with the same month and day as the birthdate\n            const retireDate = new Date(birthDate);\n            retireDate.setFullYear(retireYear);\n\n            // If the birth month and day is after the current date, adjust the retirement date to the next year\n            if (retireDate < new Date())\n                retireDate.setFullYear(retireYear + 1);\n\n            self.form.RetireDate.valueAsDate = retireDate\n        });\n\n        var UsernameElement = document.getElementById(this.idPrefix + 'UserName')\n        var UserNameDialog = 'Username Cannot Start With Number, No Special Characters'\n        $(UsernameElement).on(\"blur\", function () {\n            // If input is empty, set default text\n            if (isEmptyOrNull($(this).val())) {\n                $(this).val(UserNameDialog);\n                $(this).css({\n                    \"color\": \"grey\" // Set text color to grey\n                });\n            }\n        });\n        $(UsernameElement).on(\"focus\", function () {\n            if ($(this).val() == UserNameDialog) {\n                $(this).val('');\n                $(this).css({\n                    \"color\": \"black\" // Set text color to grey\n                });\n            }\n        });\n\n        $(UsernameElement).on(\"change\", function () {\n\n            if ($(this).val() != '' && $(this).val() != UserNameDialog)\n                $(this).css(\"color\", \"black\");\n\n            else\n                $(this).css(\"color\", \"grey\");\n\n        });\n        $(UsernameElement).on(\"keydown\", function (event) {\n            var caretPosition = this.selectionStart; // Get the current caret position\n            // Allow letters and numbers\n            var allowedKeys = /[A-Za-z0-9]/;\n            // Allow special keys like backspace, delete, arrows, etc.\n            var specialKeys = [8, 9, 13, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 144, 145];\n            // Check if the pressed key is a special key or an allowed character\n            if (event.key.match(allowedKeys) || specialKeys.includes(event.keyCode)) {\n                // Valid key input, check if it starts with a number\n                if (caretPosition === 0 && event.key.match(/[0-9]/)) {\n                    event.preventDefault(); // Prevent input if starting with a number\n                }\n            } else\n                event.preventDefault();\n        });\n\n        $(UsernameElement).on('mouseenter', () => {\n            tooltip.innerHTML = \"Please dont use repeated username <br> Username can not contain anything else than number and characters\"; // Tooltip text\n            const inputRect = $(UserNameElement)[0].getBoundingClientRect();\n            tooltip.style.display = 'block';\n            tooltip.style.top = `${inputRect.bottom}px`; // Position below input\n            tooltip.style.left = `${inputRect.left}px`; // Align with input\n        });\n\n        $(UsernameElement).on('mouseleave', () => {\n            tooltip.style.display = 'none';\n        });\n        var UserPasswordElement = document.getElementById(this.idPrefix + 'UserPassword')\n        var UserPasswordDialog = 'Password length must be greater or equal to 6'\n        $(UserPasswordElement).on(\"blur\", function () {\n            // If input is empty, set default text\n            if (isEmptyOrNull($(this).val())) {\n                $(this).val(UserPasswordDialog);\n                $(this).css({\n                    \"color\": \"grey\" // Set text color to grey\n                });\n            }\n        });\n        $(UserPasswordElement).on(\"focus\", function () {\n            if ($(this).val() == UserPasswordDialog) {\n                $(this).val('');\n                $(this).css({\n                    \"color\": \"black\" // Set text color to grey\n                });\n            }\n        });\n        $(UserPasswordElement).on(\"change\", function () {\n            if ($(this).val() != '' && $(this).val() != UserPasswordDialog)\n                $(this).css(\"color\", \"black\");\n            else\n                $(this).css(\"color\", \"grey\");\n\n        });\n        $(UserPasswordElement).on('mouseenter', () => {\n            tooltip.innerHTML = 'Password length must be greater or equal to 6'; // Tooltip text\n            const inputRect = $(UserPasswordElement)[0].getBoundingClientRect();\n            tooltip.style.display = 'block';\n            tooltip.style.top = `${inputRect.bottom}px`; // Position below input\n            tooltip.style.left = `${inputRect.left}px`; // Align with input\n        });\n        $(UserPasswordElement).on('mouseleave', () => {\n            tooltip.style.display = 'none';\n        });\n        var CalculationDate = document.getElementById(this.idPrefix + 'CalculationDate')\n        $(CalculationDate).on('change', () => {\n            serviceCall<RetrieveResponse<any>>({\n                service: EmployeeProfileService.baseUrl + '/CalculateWorkingHourAndDayWithDate',\n                data: {\n                    \"EmployeeRowID\": this.entityId,\n                    \"Date\": self.form.CalculationDate.value\n                },\n                method: \"GET\",\n                async: false,\n                onSuccess: (response) => {\n                    if (!isEmptyOrNull(response.Entities[0].NumberOfWorkingDays) && response.Entities[0].NumberOfWorkingDays > 0)\n                        self.form.WorkingHour.value = response.Entities[0].TotalWorkingTimeInMinutes / response.Entities[0].NumberOfWorkingDays\n                    else\n                        self.form.WorkingHour.value = 0\n                    self.form.WorkingDays.value = response.Entities[0].NumberOfWorkingDays\n                    self.form.DailyRateBase.value = response.Entities[0].DailyRateBase\n                    self.form.NplRateBase.value = response.Entities[0].NplRateBase\n                },\n                onError: (error) => {\n                    console.log(error.Error);\n                }\n            });\n\n            if (self.form.OtPayEntitlement.value == true) {\n                serviceCall<RetrieveResponse<any>>({\n                    service: EmployeeProfileService.baseUrl + '/CalculateOtRate',\n                    data: {\n                        \"EmployeeRowID\": this.entityId,\n                        \"Date\": self.form.CalculationDate.value\n\n                    },\n                    method: \"GET\",\n                    async: false,\n                    onSuccess: (response) => {\n                        console.log(response)\n                        self.form.OtRateWeekday.value = response.Entities[0].OtRateWeekday\n                        self.form.OtRateWeekend.value = response.Entities[0].OtRateWeekend\n                        self.form.OtRatePublicHoliday.value = response.Entities[0].OtRatePublicHoliday\n                    }\n                })\n            }\n            else {\n                self.form.OtRateWeekday.value = self.form.OtRateWeekend.value = self.form.OtRatePublicHoliday.value = 0\n                $('.OtRateWeekday, .OtRateWeekend, .OtRatePublicHoliday').hide();\n            }\n\n        });\n        serviceCall<ListResponse<any>>({\n            service: AnnouncementWizardService.baseUrl + '/GetTodayDateTime',\n            method: \"GET\",\n            data: {\n            },\n            async: false,\n            onSuccess: (response) => {\n                self.form.CalculationDate.value = response;\n                $(CalculationDate).trigger('change')\n            }\n        })\n        if (this.isNew()) {\n            var terminateButtons = document.querySelectorAll('.text-bg-danger')\n            terminateButtons.forEach(function (element) {\n                $(element).hide()\n            });\n            var resignButtons = document.querySelectorAll('.text-bg-warning')\n            resignButtons.forEach(function (element) {\n                $(element).hide()\n            });\n\n            var confirmButtons = document.querySelectorAll('.text-bg-success')\n            confirmButtons.forEach(function (element) {\n                $(element).hide()\n            });\n        }\n\n        else { //not new\n            this.OriginalEmployeeId = this.form.EmployeeID.value\n            this.Username = this.form.UserName.value\n            if (parseInt(this.form.PassedProbation.value) == ProbationClass.PassedProbation) {\n                var confirmButtons = document.querySelectorAll('.text-bg-success')\n                confirmButtons.forEach(function (element) {\n                    $(element).hide()\n                });\n                EditorUtils.setReadonly(this.form.ProbationPeriodUntil.element, true);\n                EditorUtils.setReadonly(this.form.ProbationPeriodFrom.element, true);\n            }\n            EmployeeProfileService.Retrieve({\n                EntityId: this.entityId\n            }, response => {\n                if (response.Entity.Retired == 0 && response.Entity.Terminated == 0 && response.Entity.Resigned == 0)\n                    $('.tool-button').removeClass('hidden')\n                else {\n                    self.readOnly = true\n                    if (response.Entity.Terminated == 1) {\n                        self.dialogTitle = `Terminated Employee (${self.form.EmployeeID.value})`\n                        $('.TerminateDate').show()\n                        $('.TerminateLeaveDate').show()\n                    }\n                    else if (response.Entity.Resigned == 1) {\n                        self.dialogTitle = `Resigned Employee (${self.form.EmployeeID.value})`\n                        $('.ResignationDate').show()\n                        $('.ResignLeaveDate').show()\n                    }\n                    else if (response.Entity.Retired == 1)\n                        self.dialogTitle = `Retired Employee (${self.form.EmployeeID.value})`\n                }\n            });\n        }\n        UserService.List({\n        }, response => {\n            for (var index in response.Entities) {\n                if (response.Entities[index].Username == this.form.EmployeeID.value)\n                    this.UserRowID = response.Entities[index].UserId\n                this.ListOfUserName.push(response.Entities[index].Username)\n            }\n        });\n        // EditorUtils.setReadonly(this.form.ProbationPeriodEnd.element, true);\n        var ProbationPeriodElement = document.getElementById(this.idPrefix + 'ProbationPeriod')\n        var ProbationPeriodEndElement = document.getElementById(this.idPrefix + 'ProbationPeriodEnd')\n        var ProbationPeriodStartElement = document.getElementById(this.idPrefix + 'ProbationPeriodStart')\n\n        var RecruitmentDateElement = document.getElementById(this.idPrefix + 'RecruitmentDate')\n        var EmployeeTypeElement = document.getElementById(this.idPrefix + 'EmployeeType')\n        var PayByDayElement = document.getElementById(this.idPrefix + 'PayByDay')\n        var PayByMonthElement = document.getElementById(this.idPrefix + 'PayByMonth')\n        var PayByHourElement = document.getElementById(this.idPrefix + 'PayByHour')\n\n\n        $(PayByDayElement).on('change', function (e) {\n            if (self.form.PayByDay.value) //if employee is local\n            {\n                self.form.PayByHour.value = false;\n                self.form.PayByMonth.value = false;\n            }\n        });\n\n        $(PayByHourElement).on('change', function (e) {\n            if (self.form.PayByHour.value) //if employee is local\n            {\n                self.form.PayByDay.value = false;\n                self.form.PayByMonth.value = false;\n            }\n        });\n\n        $(PayByMonthElement).on('change', function (e) {\n            if (self.form.PayByMonth.value) //if employee is local\n            {\n                self.form.PayByHour.value = false;\n                self.form.PayByDay.value = false;\n            }\n        });\n\n        $(EmployeeTypeElement).on('change', function (e) {\n\n            if ($(EmployeeTypeElement).val() == 1) //if employee is local\n            {\n                // self.form.EpfContribution.value = 1\n                $('.' + 'EpfContribution').hide();\n                $('.' + 'WorkingPermit').hide();\n                $('.' + 'WorkingPermitIssueDate').hide();\n                $('.' + 'WorkingPermitExpireDate').hide();\n                $('.' + 'WorkingPermitValidFrom').hide();\n                $('.' + 'WorkingPermitValidUntil').hide();\n                $('.' + 'ArrivalDate').hide();\n\n            }\n            else {\n                //self.form\n                // self.form.EpfContribution.value = 0\n                $('.' + 'EpfContribution').show();\n                $('.' + 'WorkingPermit').show();\n                $('.' + 'WorkingPermitIssueDate').show();\n                $('.' + 'WorkingPermitExpireDate').show();\n                $('.' + 'WorkingPermitValidFrom').show();\n                $('.' + 'WorkingPermitValidUntil').show();\n                $('.' + 'ArrivalDate').show();\n                console.log(self.form.EpfClass.items[0].disabled = true)\n            }\n        });\n\n\n        $(ProbationPeriodEndElement).prop('readonly', true);\n        $(ProbationPeriodElement).on('change', function (e) {\n            var recruitment_date = $(RecruitmentDateElement).val()\n\n            if (isEmptyOrNull(recruitment_date))\n                return\n\n            var recruitment_date_Parts = recruitment_date.split('/');\n            const recruitment_date_datetime = new Date(\n                parseInt(recruitment_date_Parts[2]), // Year\n                parseInt(recruitment_date_Parts[0]) - 1, // Month (subtract 1 as January is 0)\n                parseInt(recruitment_date_Parts[1]) // Day\n            );\n            recruitment_date_datetime.setMonth(recruitment_date_datetime.getMonth() + 3);\n            const year = recruitment_date_datetime.getFullYear();\n            const month = recruitment_date_datetime.getMonth() + 1; // Note: January is 0, so we add 1\n            const day = recruitment_date_datetime.getDate();\n\n            var probation_end_string = `${month}/${day}/${year}`\n            $(ProbationPeriodEndElement).val(probation_end_string)\n        });\n\n        $(RecruitmentDateElement).on('change', function (e) {\n            var recruitment_date = $(RecruitmentDateElement).val()\n            console.log('haha')\n\n            if (!self.isNew())\n                return\n            console.log('haha')\n\n            var recruitment_date_Parts = recruitment_date.split('/');\n            const recruitment_date_datetime = new Date(\n                parseInt(recruitment_date_Parts[2]), // Year\n                parseInt(recruitment_date_Parts[0]) - 1, // Month (subtract 1 as January is 0)\n                parseInt(recruitment_date_Parts[1]) // Day\n            );\n\n            recruitment_date_datetime.setMonth(recruitment_date_datetime.getMonth() + 3);\n\n\n            const year = recruitment_date_datetime.getFullYear();\n            const month = recruitment_date_datetime.getMonth() + 1; // Note: January is 0, so we add 1\n            const day = recruitment_date_datetime.getDate();\n\n            var probation_end_string = `${month}/${day}/${year}`\n\n            self.form.ProbationPeriodFrom.value = self.form.RecruitmentDate.value\n            self.form.ProbationPeriodUntil.value = probation_end_string\n\n        });\n        if (!this.isNew()) //this is old record\n        {\n            if (this.form.CreateUser.value == true) {\n                EditorUtils.setReadonly(this.form.CreateUser.element, true);\n                EditorUtils.setReadonly(this.form.UserPassword.element, true);\n                EditorUtils.setReadonly(this.form.UserName.element, true);\n\n            }\n            else {\n                $('.' + 'UserName').hide();\n                $('.' + 'UserPassword').hide();\n                $('.' + 'GrantHRPrivilege').hide();\n\n                $('.' + 'CreateUser').on('change', (evt: Event) => {\n                    if (this.form.CreateUser.value == true) {\n                        $('.' + 'UserName').show();\n                        $('.' + 'UserPassword').show();\n                        $('.' + 'GrantHRPrivilege').show();\n\n\n                    }\n                    else {\n                        $('.' + 'GrantHRPrivilege').hide();\n\n                        $('.' + 'UserName').hide();\n                        $('.' + 'UserPassword').hide();\n                    }\n                });\n            }\n\n            if (isEmptyOrNull(this.form.RetireDate.value)) {\n                var birthDate = self.form.Birthday.valueAsDate\n                const retireYear = birthDate.getFullYear() + self.RetireAge;\n\n                // Create a new date for the retirement year with the same month and day as the birthdate\n                const retireDate = new Date(birthDate);\n                retireDate.setFullYear(retireYear);\n\n                // If the birth month and day is after the current date, adjust the retirement date to the next year\n                if (retireDate < new Date()) {\n                    retireDate.setFullYear(retireYear + 1);\n                }\n                self.form.RetireDate.valueAsDate = retireDate\n            }\n\n            $(RecruitmentDateElement).prop('readonly', false);\n            this.Record(this.OriginalValue)\n\n            for (var index in this.list_of_employee_id) {\n                if (this.list_of_employee_id[index] == this.form.EmployeeID.value)\n                    this.EmployeeRowID = this.list_of_employee_row_id[index]\n            }\n\n            if (parseInt(this.form.PassedProbation.value) == ProbationClass.PassedProbation) {\n                EditorUtils.setReadonly(this.form.ProbationPeriodFrom.element, true);\n                EditorUtils.setReadonly(this.form.ProbationPeriodUntil.element, true);\n            }\n\n            if (isEmptyOrNull(self.form.PassedProbation.value)) {\n                self.form.PassedProbation.value = ProbationClass.UnderProbation.toString()\n                EmployeeProfileService.Update({\n                    EntityId: this.entityId,\n                    Entity:\n                    {\n                        \"PassedProbation\": ProbationClass.UnderProbation\n                    }\n                });\n\n            }\n\n\n\n        }\n        else {\n            $('.' + 'EpfContribution').hide();\n            $('.' + 'UserName').hide();\n            $('.' + 'UserPassword').hide();\n            $('.' + 'GrantHRPrivilege').hide();\n\n            $('.' + 'CreateUser').on('change', (evt: Event) => {\n                if (self.form.CreateUser.value == true) {\n                    $('.' + 'GrantHRPrivilege').show();\n\n                    $('.' + 'UserName').show();\n\n                    if (isEmptyOrNull($(UserNameElement).val())) {\n                        // var UserNameDialog = 'Cannot Start With Number '\n                        $(UserNameElement).val(UserNameDialog)\n                        $(UserNameElement).css({\n                            \"color\": \"grey\" // Set text color to grey\n                        });\n                    }\n                    $('.' + 'UserPassword').show();\n                    console.log(isEmptyOrNull($(UserPasswordElement).val()))\n                    if (isEmptyOrNull($(UserPasswordElement).val())) {\n\n                        //var UserPasswordDialog = 'Password length must be greater or equal to 6'\n                        $(UserPasswordElement).val(UserPasswordDialog)\n                        $(UserPasswordElement).css({\n                            \"color\": \"grey\" // Set text color to grey\n                        });\n                    }\n                }\n                else {\n                    $('.' + 'GrantHRPrivilege').val('');\n                    $('.' + 'UserName').val('');\n                    $('.' + 'UserPassword').val('');\n                    $('.' + 'GrantHRPrivilege').hide();\n                    $('.' + 'UserName').hide();\n                    $('.' + 'UserPassword').hide();\n                }\n            });\n        }\n    }\n\n\n\n    public Record(RecordElement: Record<string, string>) {\n        var ItemsBuffer = this.propertyGrid.get_items()\n        // var stringList: string[];\n        var stringList: string[] = [];\n        for (var index in ItemsBuffer) {\n            // if (!isEmptyOrNull(ItemsBuffer[index].name))\n            var name = ItemsBuffer[index].name\n            stringList.push(name)\n        }\n        let Dictionary: Record<string, string> = {};\n        for (let item of stringList) {\n\n            var Value = this.form[item]?.text\n            if (typeof Value === 'undefined' || Value === null) {\n                Value = this.form[item]?.value\n                if (typeof Value === 'undefined' || Value === null) {\n                    Value = ''\n                }\n            }\n            Dictionary[item] = Value\n        }\n        Object.assign(RecordElement, Dictionary); // Assigning values to RecordElement\n    }\n    protected getDialogOptions() {\n        let opt = super.getDialogOptions()\n        opt.height = 800\n        opt.width = 1200\n        return opt\n    }\n    protected save_submitHandler(response): void {\n        var list_of_errors: string[] = [];\n        function startsWithNumber(input: string): boolean {\n            // Regular expression to match any digit character at the start of the string\n            const regex = /^[0-9]/;\n            return regex.test(input);\n        }\n        function containsOnlyNumbersAndChars(input: string): boolean {\n            // Regular expression to match anything other than numbers and characters\n            const regex = /[^a-zA-Z0-9]/;\n            return !regex.test(input);\n        }\n        if (this.form.UserName.value == 'Username Cannot Start With Number, No Special Characters')\n            this.form.UserName.value = ''\n        if (this.isNew() || (this.Username.toLowerCase() != this.form.UserName.value.toLowerCase()) && !isEmptyOrNull(this.Username)) {\n            for (var index in this.ListOfUserName)\n                if (this.form.UserName.value.toLowerCase() == this.ListOfUserName[index].toLowerCase())\n                    list_of_errors.push('Please use another username, there is another user with same username')\n        }\n\n        if (this.form.CreateUser.value == true && this.form.UserPassword.value == '')\n            list_of_errors.push('Please fill in UserPassword')\n\n\n        if (this.form.CreateUser.value == true && this.form.UserPassword.value.length < 6)\n            list_of_errors.push('Length of UserPassword cannot be less than 6')\n\n        if (this.form.CreateUser.value == true && startsWithNumber(this.form.UserName.value) == true)\n            list_of_errors.push('User Name cannot start with number')\n\n        if (this.form.CreateUser.value == true && containsOnlyNumbersAndChars(this.form.UserName.value) == false)\n            list_of_errors.push('User Name cannot contain anything else than number and characters')\n\n        var EmployeeTypeElement = document.getElementById(this.idPrefix + 'EmployeeType')\n        if ($(EmployeeTypeElement).val() == 1) // if is local\n        {\n            if (this.form.Nric.value == '')\n                list_of_errors.push('Please fill in the Identity Card Number')\n        }\n        if (this.form.FixedOtRateOption.value == true) {\n            if (isEmptyOrNull(this.form.OtRatePublicHoliday.value) || isEmptyOrNull(this.form.OtRateWeekday.value) || isEmptyOrNull(this.form.OtRateWeekend.value))\n                list_of_errors.push('Please fill in the Ot Rate')\n        }\n        var CurrentEmployeeID = this.form.EmployeeID.value.toString()\n        if ((this.isNew()) || (!this.isNew() && (this.form.EmployeeID.value != this.OriginalEmployeeId))) // if is new or the value changed\n        {\n            for (var item in this.list_of_employee_id) {\n                if (this.list_of_employee_id[item] === CurrentEmployeeID)\n                    list_of_errors.push(\"There is a active employee with the ID, please check again.\")\n            }\n        }\n        if (list_of_errors.length > 0) {\n            const concatenatedString: string = list_of_errors.map(item => `- ${item}`).join('\\n');\n            alertDialog(concatenatedString)\n        }\n        else {\n            //var res = response\n            //r self = this\n            super.save_submitHandler(response)\n            /*\n            if (!this.isNew())\n                EmployeeProfileService.Retrieve({\n                    EntityId: this.entityId\n                }, response => {\n                    console.log('haha')\n                    // if (response.Entity.CreateUser == false && self.form.CreateUser.value == true) {\n                    //self.createUser()\n                    super.save_submitHandler(res)\n                    //  }\n\n                });\n            else\n                super.save_submitHandler(res)\n            */\n\n        }\n    }\n    protected getToolbarButtons() {\n        var buttons = super.getToolbarButtons();\n        var self = this;\n        var Linkx = document.createElement('style')\n        Linkx.textContent =\n            `\n            .hidden {\n      display: none;\n    }\n    .nav-link.custom {\n        cursor: pointer;\n    }\n\n            `\n        document.head.appendChild(Linkx)\n        buttons.push(\n            {\n                title: \"Empoyee Retire\",\t// *** Get button text from translation\n                cssClass: 'text-bg-primary p-2 hidden retireButton',\n                // icon: 'fa-plus text-green',\n                onClick: () => {\n\n\n                    var today = new Date()\n\n                    if (self.form.RetireDate.valueAsDate > today) {\n                        confirm(\"This employee has not reached the retire date, are you sure?\", () => {\n                            confirm(\"Are you sure this employee has retired?\", () => {\n\n\n                                EmployeeProfileService.Update({\n                                    EntityId: self.entityId,\n                                    Entity:\n                                    {\n                                        \"Retired\": 1\n                                    }\n                                });\n                                self.readOnly = true\n                                self.dialogTitle = `Retired Employee (${self.form.EmployeeID.value})`\n                                $('.confirmEmployee').addClass('hidden');\n                                $('.terminateButton').addClass('hidden');\n                                $('.resignButton').addClass('hidden');\n                                $('.retireButton').addClass('hidden');\n                            });\n                        });\n\n                    }\n                    else\n                        confirm(\"Are you sure this employee has retired?\", () => {\n\n\n                            EmployeeProfileService.Update({\n                                EntityId: self.entityId,\n                                Entity:\n                                {\n                                    \"Retired\": 1\n                                }\n                            });\n                            self.readOnly = true\n                            self.dialogTitle = `Retired Employee (${self.form.EmployeeID.value})`\n                            $('.confirmEmployee').addClass('hidden');\n                            $('.terminateButton').addClass('hidden');\n                            $('.resignButton').addClass('hidden');\n                            $('.retireButton').addClass('hidden');\n                        });\n                },\n            }\n        );\n        buttons.push(\n            {\n                title: \"Confirm Empoyee\",\t// *** Get button text from translation\n                cssClass: 'text-bg-success p-2 confirmEmployee hidden',\n                // icon: 'fa-plus text-green',\n                onClick: () => {\n                    var today = new Date()\n                    if (!isEmptyOrNull(self.form.ProbationPeriodUntil.valueAsDate)) {\n                        if (self.form.ProbationPeriodUntil.valueAsDate > today) {\n                            confirm(\"This employee has not passed probation period, are you sure?\", () => {\n                                confirm(\"Do you want to pass probation of this employee?\", () => {\n                                    EmployeeProfileService.Update({\n                                        EntityId: self.entityId,\n                                        Entity:\n                                        {\n                                            \"PassedProbation\": ProbationClass.PassedProbation\n                                        }\n                                    });\n                                    $('.confirmEmployee').addClass('hidden');\n                                });\n                            });\n\n                        }\n                    }\n                    else {\n                        confirm(\"Do you want to pass probation of this employee?\", () => {\n                            EmployeeProfileService.Update({\n                                EntityId: self.entityId,\n                                Entity:\n                                {\n                                    \"PassedProbation\": ProbationClass.PassedProbation\n                                }\n                            });\n                            $('.confirmEmployee').addClass('hidden');\n                        });\n\n                    }\n                },\n            }\n        );\n        buttons.push(\n            {\n                title: \"Terminate Employee\",\t// *** Get button text from translation\n                cssClass: 'text-bg-danger p-2 hidden terminateButton',\n                // icon: 'fa-plus text-green',\n                onClick: () => {\n                    var dlg = new TerminateEmployeeDialog()\n                    dlg.loadByIdAndOpenDialog(this.entityId)\n                    dlg.element.on(\"dialogclose\", function () {\n                        EmployeeProfileService.Retrieve({\n                            EntityId: self.entityId\n                        }, response => {\n\n                            if (response.Entity.Retired == 0 && response.Entity.Terminated == 0 && response.Entity.Resigned == 0)\n                                $('.tool-button').removeClass('hidden')\n\n                            else {\n                                self.readOnly = true\n                                if (response.Entity.Terminated == 1)\n                                    self.dialogTitle = `Terminated Employee (${self.form.EmployeeID.value})`\n                                else if (response.Entity.Resigned == 1)\n                                    self.dialogTitle = `Resigned Employee (${self.form.EmployeeID.value})`\n                                else if (response.Entity.Retired == 1)\n                                    self.dialogTitle = `Retired Employee (${self.form.EmployeeID.value})`\n                            }\n                        });\n                    })\n\n                },\n            }\n        );\n        buttons.push(\n            {\n                title: \"Employee Resign\",\t// *** Get button text from translation\n                cssClass: 'text-bg-warning p-2 hidden resignButton',\n                // icon: 'fa-minus text-red',\n                onClick: () => {\n                    var dlg = new EmployeeResignDialog()\n                    dlg.loadByIdAndOpenDialog(this.entityId)\n                    dlg.element.on(\"dialogclose\", function () {\n                        EmployeeProfileService.Retrieve({\n                            EntityId: self.entityId\n                        }, response => {\n\n                            if (response.Entity.Retired == 0 && response.Entity.Terminated == 0 && response.Entity.Resigned == 0)\n                                $('.tool-button').removeClass('hidden')\n\n                            else {\n                                self.readOnly = true\n                                if (response.Entity.Terminated == 1)\n                                    self.dialogTitle = `Terminated Employee (${self.form.EmployeeID.value})`\n                                else if (response.Entity.Resigned == 1)\n                                    self.dialogTitle = `Resigned Employee (${self.form.EmployeeID.value})`\n                                else if (response.Entity.Retired == 1)\n                                    self.dialogTitle = `Retired Employee (${self.form.EmployeeID.value})`\n                            }\n                        })\n\n                        /*\n                        EmployeeProfileService.Retrieve({\n                            EntityId: self.entityId\n                        }, response => {\n                            if (isEmptyOrNull(response.Entity['TerminateLeaveDate'])\n                                && isEmptyOrNull(response.Entity['ResignLeaveDate'])) {\n                                $('.terminateButton').removeClass('hidden');\n                                $('.resignButton').removeClass('hidden');\n                                $('.retireButton').removeClass('hidden');\n                            }\n                            else {\n                                if (isEmptyOrNull(response.Entity['TerminateLeaveDate']))  // show terminate\n                                {\n                                    $('.terminateButton').addClass('hidden');\n                                    $('.retireButton').addClass('hidden');\n                                }\n                                else\n                                    $('.terminateButton').removeClass('hidden');\n                                if (isEmptyOrNull(response.Entity['ResignLeaveDate']))  // show resign\n                                {\n                                    $('.resignButton').addClass('hidden');\n                                    $('.retireButton').addClass('hidden');\n                                }\n                                else\n                                    $('.resignButton').removeClass('hidden');\n                            }\n\n                        });\n                        */\n                    })\n                },\n            }\n        );\n\n        return buttons;\n    }\n}"],
  "mappings": "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",
  "names": ["import_corelib", "import_q", "import_corelib", "import_corelib", "import_q", "import_q", "import_q", "EmployeeProfileDialog", "EmployeeProfileForm", "EmployeeProfileService", "response", "key", "CompanySettingsService", "EmployeeProfileRow", "self", "UserService", "entity_id", "UserName", "Today", "Description", "EmployeeEditHistoryService", "found", "index", "keys", "Word", "link", "item", "containsAllowanceList", "containsFixedDeductionList", "OtPayEntitlement", "__async", "FixedOtRateOption", "PassWordElement", "UserNameElement", "tooltip", "e", "BirthdayElement", "birthDate", "retireYear", "retireDate", "UsernameElement", "UserNameDialog", "event", "caretPosition", "allowedKeys", "specialKeys", "inputRect", "UserPasswordElement", "UserPasswordDialog", "CalculationDate", "error", "AnnouncementWizardService", "terminateButtons", "element", "resignButtons", "confirmButtons", "ProbationPeriodElement", "ProbationPeriodEndElement", "ProbationPeriodStartElement", "RecruitmentDateElement", "EmployeeTypeElement", "PayByDayElement", "PayByMonthElement", "PayByHourElement", "recruitment_date", "recruitment_date_Parts", "recruitment_date_datetime", "year", "month", "day", "probation_end_string", "evt", "RecordElement", "_a", "_b", "ItemsBuffer", "stringList", "name", "Dictionary", "Value", "opt", "list_of_errors", "startsWithNumber", "input", "__name", "containsOnlyNumbersAndChars", "CurrentEmployeeID", "concatenatedString", "buttons", "Linkx", "today", "dlg", "TerminateEmployeeDialog", "EmployeeResignDialog", "__decorateClass", "import_q", "EmployeeProfileGrid", "container", "EmployeeProfileColumns", "EmployeeProfileDialog", "EmployeeProfileRow", "EmployeeProfileService", "response", "EmployeeProfileData", "item", "columns", "ctx", "button", "buttons", "PermissionKeys", "e", "CreateUserDialog", "UserCreationDialog", "row", "cell", "target", "dlg", "EmployeeBasicDataDialog", "EmployeeEditHistoryDialog", "EntitledLeaveService", "ListBuffer", "buffer", "a", "b", "dateA", "dateB", "EntitledLeaveDialog", "ViewShiftHistoryDialog", "__name", "__decorateClass", "Highcharts", "import_heatmap", "findRowById", "array", "idValue", "i", "__name", "pageInit", "Country", "CompanySettingsService", "response", "index", "PermissionKeys", "mainElement", "EmployeeProfileGrid", "Heatmap", "Highcharts", "CopiedResEntity", "ShiftNameList", "Color", "ShiftIdList", "WorkingHourFromList", "WorkingHourUntilList", "WorkingTimeList", "ListOfShiftData", "done_retrieve_shift", "ShiftService", "ListOfDays", "ListOfWorkingFrom", "ListOfWorkingUntil", "ListOfWorkingTime", "days", "error", "ListOfPublicHolidayData", "done_retrieve_public_holiday", "PublicHolidayService", "ListOfGroupData", "done_retrieve_group_data", "EmployeeGroupService", "ListOfLeaveTakenData", "done_retrieve_holiday", "LeaveApplicationService", "half", "ListOfData", "year", "month", "currentDate", "currentMonth", "currentYear", "dateString", "isInRange", "num", "min", "max", "buffer", "addLeadingZero", "GetCurrentMonthHoliday", "curr_year", "curr_month", "CurrentMonthPublicHolidayName", "CurrentMonthPublicHolidayDate", "CurrentMonthPublicHolidayID", "date", "generateMonthRange", "months", "startDate", "prevMonth", "nextMonth", "generateListOfDate", "res", "Year", "Month", "numberOfDays", "day", "GroupID", "Start", "End", "appendShift", "entities", "x", "endDate", "data", "generateChartData", "TakenLeave", "firstWeekday", "monthLength", "emptyTilesFirst", "chartData", "xCoordinate", "yCoordinate", "id", "shift", "Group", "CurrentColorCode", "ShiftString", "detail_string", "ShiftID", "LeaveReasonTable", "StartingRange", "EndingRange", "currentValue", "key", "LookupIndex", "isDateBetween", "plot", "Data", "ListOfCurrentMonthPublicHoliday", "chart", "FormID", "isLeave", "thisday", "thismonth", "thisyear", "IsGroup", "formattedDate", "DatetimeDate", "StartDate", "EndDate", "dlg", "LeaveApplicationDialog", "isPublicHoliday", "HolidayFormID", "each_res", "shift_start", "shift_end", "endDateString", "dlg2", "SetEmployeeShiftDialog", "EmployeeGroupDlg", "EmployeeGroupDialog", "PublicHolidayDlg", "PublicHolidayDialog", "chartWidth", "chartHeight", "styleElement", "finalRowEle", "finalRowEle2", "finalSecEle", "cover1", "cover2", "cover3", "mainrow", "fragment", "timetable_cover1", "TimetableNode", "no_records", "DepartmentTable", "DivisionTable", "SectionTable", "JobGradeTable", "OccupationTable", "done", "ViewShiftHistoryService", "EmployeeProfileService", "Div1", "Div2", "Div3", "Div2_Ul1", "Div3_Ul1", "Div2_li6", "Div2_li6_span1", "Div2_li7", "Div2_li7_span1", "Div2_li8", "Div2_li8_span1", "RecruitmentDate", "today", "yearDiff", "monthDiff", "Div2_li9", "Div2_li9_span1", "Service", "Div3_li1", "Div3_li1_span1", "Div3_li2", "Div3_li2_span1", "Div3_li3", "Div3_li3_span1", "Div3_li5", "Div3_li5_span1", "Div3_li4", "Div3_li4_span1", "TimeNode", "rowNode", "MonthNode", "open", "evt", "tabcontent", "tablinks", "TabRowNode", "ShiftTableButton", "Tab2Button", "ShiftTabNode", "Tab2Node", "Tab2ContentH3", "Tab2ContentP", "SetOfMonthYear", "MonthEditor", "__async", "wanted", "index2", "chartwidth", "chartheight"]
}
