{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/EmployeeProfile/MasterDeduction/MasterDeductionPage.ts", "../../../../../../Modules/HumanResource/EmployeeProfile/MasterDeduction/MasterDeductionGrid.ts", "../../../../../../Modules/HumanResource/EmployeeProfile/MasterDeduction/MasterDeductionDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { MasterDeductionGrid } from './MasterDeductionGrid';\r\n\r\nexport default function pageInit() {\n    initFullHeightGridPage(new MasterDeductionGrid($('#GridDiv')).element);\n}", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { MasterDeductionColumns, MasterDeductionRow, MasterDeductionService } from '../../../ServerTypes/EmployeeProfile';\r\nimport { MasterDeductionDialog } from './MasterDeductionDialog';\r\n\r\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.MasterDeductionGrid')\nexport class MasterDeductionGrid extends EntityGrid<MasterDeductionRow, any> {\n    protected getColumnsKey() { return MasterDeductionColumns.columnsKey; }\n    protected getDialogType() { return MasterDeductionDialog; }\n    protected getRowDefinition() { return MasterDeductionRow; }\n    protected getService() { return MasterDeductionService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { FixedDeductionRow, FixedDeductionService, MasterDeductionForm, MasterDeductionRow, MasterDeductionService } from '../../../ServerTypes/EmployeeProfile';\r\nimport { alertDialog, confirmDialog, getHighlightTarget, RetrieveResponse, serviceCall } from '@serenity-is/corelib/q';\n\r\n@Decorators.registerClass('HRMSoftware.EmployeeProfile.MasterDeductionDialog')\nexport class MasterDeductionDialog extends EntityDialog<MasterDeductionRow, any> {\n    protected getFormKey() { return MasterDeductionForm.formKey; }\n    protected getRowDefinition() { return MasterDeductionRow; }\n    protected getService() { return MasterDeductionService.baseUrl; }\n\n    protected form = new MasterDeductionForm(this.idPrefix);\n\n\n    protected save_submitHandler(response): void {\n        var res = response\n        var self = this\n        if (this.form.Recurring.value == false && this.form.OneTime.value == false) {\n            alertDialog('Please choose the frequency of this allowance')\n            return\n        }\n\n\n        if (!this.isNew()) {\n\n            confirmDialog(\r\n                // here we demonstrate how you can detect which button user has clicked\r\n                // second parameter is Yes handler and it is called only when user clicks Yes.\r\n                // third parameter has some additional options, that you should only use when needed\r\n                \"Do you want to update all employee with the Deduction?\",\r\n                () => {\n                    FixedDeductionService.List({\n                        Criteria: [[FixedDeductionRow.Fields.MasterDeductionId], '=', self.entityId]\n                    }, response => {\n                        for (var index in response.Entities) {\n                            FixedDeductionService.Update({\n                                EntityId: response.Entities[index].Id,\n                                Entity:\n                                {\n                                    \"DeductionCode\": self.form.DeductionCode.value,\n                                    \"Amount\": self.form.Amount.value,\n                                    \"Description\": self.form.Description.value,\n                                    \"OneTime\": self.form.OneTime.value,\n                                    \"Recurring\": self.form.Recurring.value,\n                                }\n                            });\n                        }\n                        super.save_submitHandler(res);\n                    })\n                }, {\r\n                onNo: () => { super.save_submitHandler(res) }\n            });\n\n\n\n        }\n        else\n            super.save_submitHandler(response);\n\n    }\n\n\n\n\n}"],
  "mappings": "6TAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAuC,SCAvC,IAAAC,EAAyC,SAEzC,IAAAC,EAA8F,SAGvF,IAAMC,EAAN,cAAoC,cAAsC,CAA1E,kCAKH,KAAU,KAAO,IAAIC,EAAoB,KAAK,QAAQ,EAJ5C,YAAa,CAAE,OAAOA,EAAoB,OAAS,CACnD,kBAAmB,CAAE,OAAOC,CAAoB,CAChD,YAAa,CAAE,OAAOC,EAAuB,OAAS,CAKtD,mBAAmBC,EAAgB,CACzC,IAAIC,EAAMD,EACNE,EAAO,KACX,GAAI,KAAK,KAAK,UAAU,OAAS,IAAS,KAAK,KAAK,QAAQ,OAAS,GAAO,IACxE,eAAY,+CAA+C,EAC3D,MACJ,CAGK,KAAK,MAAM,EAkCZ,MAAM,mBAAmBF,CAAQ,KAhCjC,iBAII,yDACA,IAAM,CACFG,EAAsB,KAAK,CACvB,SAAU,CAAC,CAACC,EAAkB,OAAO,iBAAiB,EAAG,IAAKF,EAAK,QAAQ,CAC/E,EAAGF,GAAY,CACX,QAASK,KAASL,EAAS,SACvBG,EAAsB,OAAO,CACzB,SAAUH,EAAS,SAASK,CAAK,EAAE,GACnC,OACA,CACI,cAAiBH,EAAK,KAAK,cAAc,MACzC,OAAUA,EAAK,KAAK,OAAO,MAC3B,YAAeA,EAAK,KAAK,YAAY,MACrC,QAAWA,EAAK,KAAK,QAAQ,MAC7B,UAAaA,EAAK,KAAK,UAAU,KACrC,CACJ,CAAC,EAEL,MAAM,mBAAmBD,CAAG,CAChC,CAAC,CACL,EAAG,CACH,KAAM,IAAM,CAAE,MAAM,mBAAmBA,CAAG,CAAE,CAChD,CAAC,CAQT,CAKJ,EA1DaK,EAAAV,EAAA,yBAAAA,EAANW,EAAA,CADN,aAAW,cAAc,mDAAmD,GAChEX,GDAN,IAAMY,EAAN,cAAkC,YAAoC,CAC/D,eAAgB,CAAE,OAAOC,EAAuB,UAAY,CAC5D,eAAgB,CAAE,OAAOC,CAAuB,CAChD,kBAAmB,CAAE,OAAOC,CAAoB,CAChD,YAAa,CAAE,OAAOC,EAAuB,OAAS,CAEhE,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACJ,EATaC,EAAAN,EAAA,uBAAAA,EAANO,EAAA,CADN,aAAW,cAAc,iDAAiD,GAC9DP,GDFE,SAARQ,GAA4B,IAC/B,0BAAuB,IAAIC,EAAoB,EAAE,UAAU,CAAC,EAAE,OAAO,CACzE,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "import_corelib", "import_q", "MasterDeductionDialog", "MasterDeductionForm", "MasterDeductionRow", "MasterDeductionService", "response", "res", "self", "FixedDeductionService", "FixedDeductionRow", "index", "__name", "__decorateClass", "MasterDeductionGrid", "MasterDeductionColumns", "MasterDeductionDialog", "MasterDeductionRow", "MasterDeductionService", "container", "__name", "__decorateClass", "pageInit", "MasterDeductionGrid", "__name"]
}
