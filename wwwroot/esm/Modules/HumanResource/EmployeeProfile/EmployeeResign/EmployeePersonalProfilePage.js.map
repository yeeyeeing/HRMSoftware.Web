{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/EmployeeProfile/EmployeeResign/EmployeePersonalProfilePage.ts"],
  "sourcesContent": ["import { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { EmployeePersonalProfileGrid } from './EmployeePersonalProfileGrid';\nimport { ListResponse, Select2Editor } from '@serenity-is/corelib';\nimport { getLookup } from '@serenity-is/corelib/q';\nimport { serviceCall, RetrieveResponse } from '@serenity-is/corelib/q';\nimport { Authorization } from '@serenity-is/corelib/q';\nimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { PermissionKeys } from '../../../ServerTypes/Administration';\nimport { EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\nimport { ViewShiftHistoryService } from '../../../ServerTypes/ViewShiftHistory';\nimport { EmployeeProfileGrid } from './EmployeeProfileGrid';\nimport * as Highcharts from \"highcharts\";\nimport Heatmap from \"highcharts/modules/heatmap\"\nimport { PublicHolidayService } from '../../../ServerTypes/PublicHoliday';\nimport { ShiftService } from '../../../ServerTypes/Shift';\nimport { CompanySettingsService } from '../../../ServerTypes/CompanySettings';\nimport { LeaveApplicationService } from '../../../ServerTypes/LeaveApplication';\nimport { InitYearService } from '../../../ServerTypes/InitYear';\nimport { EmployeeGroupService } from '../../../ServerTypes/EmployeeGroup';\nimport { EmployeeGroupDialog } from '../../EmployeeGroup/EmployeeGroup/EmployeeGroupDialog';\nimport { LeaveApplicationDialog } from '../../LeaveApplication/LeaveApplication/LeaveApplicationDialog';\nimport { SetEmployeeShiftDialog } from '../../SetEmployeeShift/SetEmployeeShift/SetEmployeeShiftDialog';\nimport { PublicHolidayDialog } from '../../PublicHoliday/PublicHoliday/PublicHolidayDialog';\nfunction findRowById(array, idValue) {\n\n    for (let i = 0; i < array.length; i++) {\n        if (array[i].Id === idValue) {\n            console.log(array[i].Name)\n            return array[i].Name;\n        }\n    }\n    return null\n};\n\nexport default function pageInit() {\n   // initFullHeightGridPage(new EmployeePersonalProfileGrid($('#GridDiv')).element);\n\n\n\n\n\n    Heatmap(Highcharts)\n\n    var CopiedResEntity;\n    var ShiftNameList: string[] = [];\n    var Color: string[] = [];\n    var ShiftIdList: number[] = [];\n\n    var WorkingHourFromList: string[][] = [];\n    var WorkingHourUntilList: string[][] = [];\n    var WorkingTimeList: string[][] = [];\n\n    interface ShiftData {\n        ShiftName: string;\n        WorkingHourFromList: string[];\n        WorkingHourUntilList: string[];\n        WorkingTimeList: string[];\n        Color: string;\n        ShiftIdList: number;\n    }\n\n    var ListOfShiftData: ShiftData[] = [];\n    var done_retrieve_shift = false\n\n    serviceCall<ListResponse<any>>({\n        service: ShiftService.baseUrl + '/ListShift',\n        method: \"GET\",\n        data: {\n        },\n        async: false,\n        onSuccess: (response) => {\n            done_retrieve_shift = true\n            let ListOfDays: string[] = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n            for (var index in response.Entities) {\n\n                var ListOfWorkingFrom: string[] = []\n                var ListOfWorkingUntil: string[] = []\n                var ListOfWorkingTime: string[] = []\n\n                for (var days in ListOfDays) {\n                    ListOfWorkingFrom.push(response.Entities[index][ListOfDays[days] + 'StartingFrom'])\n                    ListOfWorkingUntil.push(response.Entities[index][ListOfDays[days] + 'EndingAt'])\n                    ListOfWorkingTime.push(response.Entities[index][ListOfDays[days] + 'WorkingTime'])\n                }\n                ListOfShiftData.push(\n                    {\n                        ShiftName: response.Entities[index].ShiftName,\n                        WorkingHourFromList: ListOfWorkingFrom,\n                        WorkingHourUntilList: ListOfWorkingUntil,\n                        WorkingTimeList: ListOfWorkingTime,\n                        Color: response.Entities[index].ShiftColor,\n                        ShiftIdList: response.Entities[index].Id\n                    }\n                )\n\n                WorkingHourFromList.push(ListOfWorkingFrom);\n                WorkingHourUntilList.push(ListOfWorkingUntil);\n                WorkingTimeList.push(ListOfWorkingTime)\n                ShiftNameList.push(response.Entities[index].ShiftName)\n                Color.push(response.Entities[index].ShiftColor)\n                ShiftIdList.push(response.Entities[index].Id)\n            }\n        },\n        onError: (error) => {\n\n            console.log(error)\n        }\n    });\n\n\n\n    while (done_retrieve_shift == false) {\n    };\n\n\n\n\n\n\n\n\n\n\n    interface PublicHolidayData {\n        PublicHolidayDate: string;\n        PublicHolidayName: string;\n        PublicHolidayId: number;\n    }\n\n    var ListOfPublicHolidayData: PublicHolidayData[] = [];\n\n    var done_retrieve_public_holiday = false\n    serviceCall<ListResponse<any>>({\n        service: PublicHolidayService.baseUrl + '/ListPublicHoliday',\n        method: \"GET\",\n        data: {\n        },\n        async: false,\n        onSuccess: (response) => {\n            done_retrieve_public_holiday = true\n\n\n            for (var index in response.Entities) {\n\n                ListOfPublicHolidayData.push({\n                    PublicHolidayDate: response.Entities[index].Date,\n                    PublicHolidayName: response.Entities[index].Name,\n                    PublicHolidayId: response.Entities[index].Id,\n\n                })\n\n\n            }\n\n\n\n        },\n        onError: (error) => {\n            console.log(error)\n        }\n    });\n\n\n\n    while (done_retrieve_public_holiday == false) {\n\n    };\n\n    console.log(ListOfPublicHolidayData)\n\n\n    interface GroupData {\n        GroupName: string;\n        GroupColor: string;\n        GroupID: number;\n    }\n\n    var ListOfGroupData: GroupData[] = [];\n\n\n\n    var done_retrieve_group_data = false\n    serviceCall<ListResponse<any>>({\n        service: EmployeeGroupService.baseUrl + '/ListGroup',\n        method: \"GET\",\n        data: {\n        },\n        async: false,\n        onSuccess: (response) => {\n            done_retrieve_group_data = true\n            for (var index in response.Entities) {\n\n                ListOfGroupData.push({\n                    GroupName: response.Entities[index].Name,\n                    GroupColor: response.Entities[index].ShiftColor,\n                    GroupID: response.Entities[index].Id\n                })\n\n\n            }\n        },\n        onError: (error) => {\n            console.log(error)\n        }\n    });\n\n\n    while (done_retrieve_group_data == false) {\n\n    };\n\n\n    interface LeaveTakenData {\n        StartDate: string;\n        EndDate: string;\n        HalfDate: number;\n        LeaveReason: number;\n        ID: number;\n\n    }\n    var ListOfLeaveTakenData: LeaveTakenData[] = [];\n    var done_retrieve_holiday = false\n\n    serviceCall<ListResponse<any>>({\n        service: LeaveApplicationService.baseUrl + '/ListTakenLeaveFromID',\n        method: \"GET\",\n        data: {\n            \"EmployeeRowID\": Authorization.userDefinition.EmployeeRowID\n        },\n        async: false,\n        onSuccess: (response) => {\n            done_retrieve_holiday = true\n            for (var index in response.Entities) {\n                var half = 0\n\n                if (response.Entities[index].LeaveReasonId == 4 && response.Entities[index].HalfDay == 1)// if is annual leave and taken only half day\n                    half = 1\n\n                ListOfLeaveTakenData.push({\n                    StartDate: response.Entities[index].StartDate.substring(0, 10),\n                    EndDate: response.Entities[index].EndDate.substring(0, 10),\n                    HalfDate: half,\n                    LeaveReason: response.Entities[index].LeaveReasonId,\n                    ID: response.Entities[index].Id\n                })\n\n            }\n        },\n        onError: (error) => {\n            console.log(error)\n        }\n    });\n\n\n    while (done_retrieve_holiday == false) {\n\n    };\n\n\n\n\n\n\n\n\n\n    var ListOfData: Data[];\n\n    var year;\n    var month;\n    interface Data {\n        date: string;\n        shift: number;\n        GroupID: number;\n    }\n\n    var currentDate = new Date();\n    var currentMonth = currentDate.getMonth() + 1; // January is 0, so we add 1 to get the correct month\n    var currentYear = currentDate.getFullYear();\n    var dateString = `${currentDate.getFullYear()}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}`\n\n\n    function isInRange(num: number, min: number, max: number): boolean {\n\n\n        if (min > max) {\n            var buffer = max\n            max = min\n            min = buffer\n        }\n\n\n        return num >= min && num <= max;\n    }\n\n    // Helper function to add leading zeros\n    function addLeadingZero(num: number): string {\n        return num < 10 ? '0' + num : num.toString();\n    }\n    /*\n    function generateChartData(data, ListOfShiftData, ListOfPublicHoliayData, TakenLeave) {\n     \n        // Calculate the starting weekday index (0-6 of the first date in the given\n        // array)\n        const firstWeekday = new Date(data[0].date).getDay(),\n\n            monthLength = data.length,\n            emptyTilesFirst = firstWeekday,\n            chartData = [];\n\n        for (let day = 1; day <= monthLength; day++) {\n            // Get date from the given data array\n            var date = new Date(data[day - 1].date);\n            var dateString = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${(date.getDate()).toString().padStart(2, '0')}`\n\n            // Offset by thenumber of empty tiles\n            const xCoordinate = (emptyTilesFirst + day - 1) % 7; // 0 is sunday\n            const yCoordinate = Math.floor((firstWeekday + day - 1) / 7);\n            const id = day;\n\n\n            var shift = data[day - 1].shift;\n            var CurrentColorCode = null\n            var ShiftString = null\n\n            if (shift != null) {\n                var ShiftID\n                for (var index in ListOfShiftData) {\n                    if (ListOfShiftData[index].ShiftIdList == shift)\n                        ShiftID = index\n                }\n                CurrentColorCode = ListOfShiftData[ShiftID].Color\n                ShiftString = ListOfShiftData[ShiftID].ShiftName\n\n                if (ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate].replace(/\\s/g, \"\") == '' && ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate].replace(/\\s/g, \"\") == '') {\n                    ShiftString = 'Rest Day'\n                    CurrentColorCode = '#FFFFE0'\n                }\n                else if (ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] != null && ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate] != null)\n                {\n                    ShiftString = ShiftString + ' : ' + ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] + '-' + ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate]\n                    if (ListOfShiftData[ShiftID].WorkingTimeList[xCoordinate] != null)\n                        ShiftString = ShiftString + ' : ' + ListOfShiftData[ShiftID].WorkingTimeList[xCoordinate] + 'hours'\n                }\n            }\n\n            \n\n            for (var index in ListOfPublicHolidayData) {\n                if (ListOfPublicHolidayData[index].PublicHolidayDate.substring(0, 10) == dateString) {\n                    ShiftString = ListOfPublicHolidayData[index].PublicHolidayName\n                    CurrentColorCode = '#FF0000'\n                    shift = null\n                    break\n                }\n            }\n\n            var LeaveReasonTable = getLookup(\"LeaveReason.LeaveReason\")\n            for (var index in TakenLeave) {\n\n                var StartingRange = new Date(TakenLeave[index].StartDate)\n                var EndingRange = new Date(TakenLeave[index].EndDate)\n                var currentValue = TakenLeave[index].LeaveReason\n                var key\n                for (var LookupIndex in LeaveReasonTable.items) {\n                    if (LeaveReasonTable.items[LookupIndex].Id == currentValue) {\n                        key = LeaveReasonTable.items[LookupIndex].LeaveReason.replace(/\\s/g, \"\")\n                        break\n                    }\n                }\n\n                if (date >= StartingRange && date <= EndingRange) {\n                    ShiftString = key\n                    CurrentColorCode = '#00FF00'\n                    shift = null\n                    console.log(key)\n                }\n            }\n\n            chartData.push({\n                x: xCoordinate,\n                y: 5 - yCoordinate,\n                color: CurrentColorCode,\n                shiftstring: ShiftString,\n                value: shift,\n                date: dateString,\n                custom: {\n                    monthDay: id\n                }\n            });\n\n        }\n\n\n        return chartData;\n    }\n    */\n\n    function GetCurrentMonthHoliday(ListOfPublicHolidayData: any[], curr_year: number, curr_month: number): [string[], string[], number[]] {\n        var CurrentMonthPublicHolidayName: string[] = [];\n        var CurrentMonthPublicHolidayDate: string[] = [];\n        var CurrentMonthPublicHolidayID: number[] = [];\n        for (var index in ListOfPublicHolidayData) {\n            var date = new Date(ListOfPublicHolidayData[index].PublicHolidayDate.substring(0, 10));\n            var year = date.getFullYear();\n            var month = date.getMonth() + 1; // Months are 0-based, so add 1\n\n            if (year == curr_year && month == curr_month) {\n                CurrentMonthPublicHolidayName.push(ListOfPublicHolidayData[index].PublicHolidayName);\n                CurrentMonthPublicHolidayDate.push(ListOfPublicHolidayData[index].PublicHolidayDate.substring(0, 10));\n                CurrentMonthPublicHolidayID.push(ListOfPublicHolidayData[index].PublicHolidayId)\n            }\n        }\n\n        return [CurrentMonthPublicHolidayName, CurrentMonthPublicHolidayDate, CurrentMonthPublicHolidayID];\n    }\n\n\n\n    function generateMonthRange(year: number, month: number): string[] {\n        const months: string[] = [];\n        const startDate = new Date(year, month - 1, 1); // Month is zero-based\n        // Generate 6 months backward\n        for (let i = 6; i > 0; i--) {\n            const prevMonth = new Date(startDate);\n            prevMonth.setMonth(prevMonth.getMonth() - i);\n            months.push(`${prevMonth.getFullYear()}-${(prevMonth.getMonth() + 1).toString().padStart(2, '0')}`);\n        }\n        // Add the current month\n        months.push(`${startDate.getFullYear()}-${(startDate.getMonth() + 1).toString().padStart(2, '0')}`);\n        // Generate 6 months forward\n        for (let i = 1; i <= 6; i++) {\n            const nextMonth = new Date(startDate);\n            nextMonth.setMonth(nextMonth.getMonth() + i);\n            months.push(`${nextMonth.getFullYear()}-${(nextMonth.getMonth() + 1).toString().padStart(2, '0')}`);\n        }\n        return months;\n    }\n\n\n\n\n\n    function generateListOfDate(res, Year, Month) {\n        var numberOfDays = new Date(Year, Month, 0).getDate();\n        const ListOfData: Data[] = [];\n        for (let day = 1; day <= numberOfDays; day++) {\n            // Construct the date string in the format \"YYYY-MM-DD\"\n            var dateString = `${Year}-${addLeadingZero(Month)}-${addLeadingZero(day)}`;\n            var GroupID = null\n            var date = new Date(dateString)\n            for (var index in res) {\n                var Start = new Date(res[index].ShiftStartDate)\n                var End = new Date(res[index].ShiftEndDate)\n                date.setHours(0);\n                date.setMinutes(0);\n                date.setSeconds(0);\n                date.setMilliseconds(0);\n                if (typeof res[index].EmployeeGroupID !== undefined)//not group\n                {\n                    if (date >= Start && date <= End) {\n                        GroupID = res[index].EmployeeGroupID\n                        break\n                    }\n                }\n            }\n\n\n            ListOfData.push({\n                date: dateString,\n                shift: null,\n                GroupID: GroupID\n            });\n\n        }\n\n        return ListOfData\n    }\n\n\n\n\n\n    function appendShift(ListOfData, entities) {\n        console.log(entities)\n        for (var x in entities) {\n            const startDate: Date = new Date(entities[x][\"ShiftStartDate\"].substring(0, 10));\n            const endDate: Date = new Date(entities[x][\"ShiftEndDate\"].substring(0, 10));\n            for (var data of ListOfData) {\n                var currentDate: Date = new Date(data.date);\n\n                if (currentDate >= startDate && currentDate <= endDate) {\n                    if (data.GroupID == null)\n                        data.shift = entities[x][\"ShiftId\"]\n                }\n            }\n        }\n\n        return ListOfData\n    }\n\n\n    function generateChartData(data, ListOfGroupData, ListOfShiftData, ListOfPublicHolidayData, TakenLeave) {\n        console.log(data)\n        // Calculate the starting weekday index (0-6 of the first date in the given\n        // array)\n        const firstWeekday = new Date(data[0].date).getDay(),\n\n            monthLength = data.length,\n            emptyTilesFirst = firstWeekday,\n            chartData = [];\n\n        for (let day = 1; day <= monthLength; day++) {\n            // Get date from the given data array\n            var date = new Date(data[day - 1].date);\n            var dateString = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${(date.getDate()).toString().padStart(2, '0')}`\n\n            // Offset by thenumber of empty tiles\n            const xCoordinate = (emptyTilesFirst + day - 1) % 7; // 0 is sunday\n            const yCoordinate = Math.floor((firstWeekday + day - 1) / 7);\n            const id = day;\n\n\n            var shift = data[day - 1].shift;\n            var Group = data[day - 1].GroupID;\n\n            var CurrentColorCode = null\n            var ShiftString = null\n            var detail_string = null\n            for (var index in ListOfPublicHolidayData) {\n                if (ListOfPublicHolidayData[index].PublicHolidayDate.substring(0, 10) == dateString) {\n                    ShiftString = detail_string = ListOfPublicHolidayData[index].PublicHolidayName\n                    CurrentColorCode = '#FF0000'\n                    shift = null\n                    Group = null\n                    break\n                }\n            }\n            if (shift != null) {\n                var ShiftID\n\n                for (var index in ListOfShiftData) {\n                    if (ListOfShiftData[index].ShiftIdList == shift) {\n                        ShiftID = index\n                        break\n                    }\n                }\n                CurrentColorCode = ListOfShiftData[ShiftID].Color\n                ShiftString = ListOfShiftData[ShiftID].ShiftName\n\n                if (ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate] === undefined && ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] == undefined) {\n                    ShiftString = 'Rest Day'\n                    CurrentColorCode = '#FFFFE0'\n                    detail_string = 'Happy Holidays'\n\n                }\n\n                else if (ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] != null && ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate] != null) {\n                    detail_string = ListOfShiftData[ShiftID].WorkingHourFromList[xCoordinate] + '-' + ListOfShiftData[ShiftID].WorkingHourUntilList[xCoordinate]\n                    if (ListOfShiftData[ShiftID].WorkingTimeList[xCoordinate] != null)\n                        detail_string = detail_string + ' : ' + ListOfShiftData[ShiftID].WorkingTimeList[xCoordinate] + 'hours'\n                }\n            }\n\n\n            else if (Group != null) {\n\n                for (var index in ListOfGroupData) {\n                    if (ListOfGroupData[index].GroupID == Group) {\n                        ShiftString = detail_string = ListOfGroupData[index].GroupName\n                        CurrentColorCode = ListOfGroupData[index].GroupColor\n                        break\n                    }\n                }\n\n            }\n\n\n            var LeaveReasonTable = getLookup(\"LeaveReason.LeaveReason\")\n            for (var index in TakenLeave) {\n\n                var StartingRange = new Date(TakenLeave[index].StartDate)\n                var EndingRange = new Date(TakenLeave[index].EndDate)\n                var currentValue = TakenLeave[index].LeaveReason\n                var key\n                for (var LookupIndex in LeaveReasonTable.items) {\n                    if (LeaveReasonTable.items[LookupIndex].Id == currentValue) {\n                        key = LeaveReasonTable.items[LookupIndex].LeaveReason.replace(/\\s/g, \"\")\n                        break\n                    }\n                }\n\n                if (date >= StartingRange && date <= EndingRange) {\n                    ShiftString = detail_string = key\n                    CurrentColorCode = '#00FF00'\n                    shift = null\n                }\n            }\n\n\n            chartData.push({\n                x: xCoordinate,\n                y: 5 - yCoordinate,\n                color: CurrentColorCode,\n                shiftstring: ShiftString,\n                value: shift,\n                date: dateString,\n                custom: {\n                    monthDay: id,\n                    details: detail_string\n                }\n            });\n\n        }\n        console.log(chartData)\n        return chartData;\n    }\n\n\n\n\n\n    function isDateBetween(date: Date, startDate: Date, endDate: Date): boolean {\n        if (startDate === undefined || endDate === undefined)\n            return false\n        return date.getTime() >= startDate.getTime() && date.getTime() <= endDate.getTime();\n    }\n\n\n\n\n    function plot(Data, ListOfCurrentMonthPublicHoliday): [number, number] {\n        const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        var chart = Highcharts.chart('Employee-Timetable', {\n            chart:\n            {\n                type: 'heatmap'\n            },\n            title:\n            {\n                text: '',\n                align: 'left'\n            },\n            accessibility: {\n                landmarkVerbosity: 'one'\n            },\n            tooltip: {\n                enabled: true,\n                outside: true,\n                zIndex: 20,\n                headerFormat: '',\n                pointFormat: '{point.date:%A, %b %e, %Y} </br>' + '{point.custom.details:%s }',\n                nullFormat: '{point.date:%A, %b %e, %Y} </br>' + '{point.custom.details:%s }'\n\n            },\n            xAxis: {\n                categories: weekdays,\n                opposite: true,\n                lineWidth: 26,\n                offset: 13,\n                lineColor: 'rgba(27, 26, 37, 0.2)',\n                labels: {\n                    rotation: 0,\n                    y: 20,\n                    style: {\n                        textTransform: 'uppercase',\n                        fontWeight: 'bold'\n                    }\n                },\n                accessibility: {\n                    description: 'weekdays',\n                    rangeDescription: 'X Axis is showing all 7 days of the week, starting with Sunday.'\n                }\n            },\n            yAxis: {\n                min: 0,\n                max: 5,\n                accessibility: {\n                    description: 'weeks'\n                },\n                visible: false\n            },\n            legend: {\n                enable: false,\n                layout: 'vertical',\n                verticalAlign: 'middle'\n            },\n            series: [{\n                showInLegend: false, // Hide series 1 icon in the legend\n                keys: ['x', 'y', 'value', 'date', 'color', 'id'],\n                data: Data,\n                nullColor: 'rgba(196, 196, 196, 0.2)',\n                borderWidth: 2,\n                borderColor: 'rgba(196, 196, 196, 0.2)',\n                dataLabels: [{\n                    enabled: true,\n                    format: '{#unless point.custom.empty}{point.shiftstring}{/unless}',\n                    style: {\n                        textOutline: 'none',\n                        fontWeight: 'normal',\n                        fontSize: '0.73rem'\n                    },\n                    y: 4\n                }, {\n                    enabled: true,\n                    align: 'left',\n                    verticalAlign: 'top',\n                    format: '{#unless point.custom.details}{point.custom.details}{/unless}',\n                    backgroundColor: 'whitesmoke',\n                    padding: 2,\n                    style: {\n                        textOutline: 'none',\n                        color: 'rgba(70, 70, 92, 1)',\n                        fontSize: '0.8rem',\n                        fontWeight: 'bold',\n                        opacity: 0.5\n                    },\n                    x: 1,\n                    y: 1\n                }]\n            }],\n\n            plotOptions: {\n                series: {\n                    point: {\n                        events: {\n                            click: function () {\n                                var FormID = -1\n                                var isLeave = 0\n\n                                for (var buffer in Data) {\n                                    if (Data[buffer].x == this.x && Data[buffer].y == this.y) {\n                                        var date = new Date(Data[buffer].date)\n                                        var thisday = date.getDate();\n                                        var thismonth = date.getMonth() + 1; // Month is zero-based\n                                        var thisyear = date.getFullYear();\n                                        var IsGroup = false\n                                        // Format the date as \"YYYY-MM-DD\"\n                                        const formattedDate = `${thisyear}-${thismonth.toString().padStart(2, '0')}-${thisday.toString().padStart(2, '0')}`;\n                                        var DatetimeDate = new Date(formattedDate)\n\n                                        var IsGroup = false\n                                        // Format the date as \"YYYY-MM-DD\"\n                                        for (var index in ListOfLeaveTakenData) {\n                                            var StartDate = new Date(ListOfLeaveTakenData[index].StartDate)\n                                            var EndDate = new Date(ListOfLeaveTakenData[index].EndDate)\n                                            if (date >= StartDate && date <= EndDate) {\n                                                var dlg = new LeaveApplicationDialog();//open the shift \n                                                dlg.loadByIdAndOpenDialog(ListOfLeaveTakenData[index].ID)\n                                                dlg.set_readOnly(true)\n\n                                                isLeave = 1\n                                                break\n                                            }\n                                        }\n                                        if (isLeave == 1)\n                                            break\n                                        var isPublicHoliday = false\n                                        for (var i in ListOfCurrentMonthPublicHoliday) {\n                                            if (ListOfCurrentMonthPublicHoliday[i].PublicHolidayDate == formattedDate) {\n                                                var HolidayFormID = ListOfCurrentMonthPublicHoliday[i].Id\n                                                isPublicHoliday = true\n                                                break\n                                            }\n                                        }\n                                        if (isPublicHoliday = true)\n                                            break\n\n                                        for (var each_res in CopiedResEntity) {\n                                            var shift_start = new Date(CopiedResEntity[each_res][\"ShiftStartDate\"])\n                                            var shift_end = new Date(CopiedResEntity[each_res][\"ShiftEndDate\"])\n                                            var endDateString = CopiedResEntity[each_res][\"ShiftEndDate\"]\n                                            if (CopiedResEntity[each_res][\"EmployeeGroupID\"] !== undefined) {\n\n                                                if (date >= shift_start && date <= shift_end) {\n                                                    FormID = CopiedResEntity[each_res][\"EmployeeGroupID\"]\n                                                    IsGroup = true\n                                                    break\n                                                }\n                                            }\n                                            if (isDateBetween(DatetimeDate, shift_start, shift_end)) {\n                                                FormID = CopiedResEntity[each_res].Id\n                                                var dlg2 = new SetEmployeeShiftDialog(Authorization.userDefinition.EmployeeRowID, formattedDate, 1, endDateString);//open the shift \n                                                dlg2.loadByIdAndOpenDialog(FormID)\n                                                dlg2.set_readOnly(true)\n                                            }\n                                        }\n\n                                        if (IsGroup) {\n                                            var EmployeeGroupDlg = new EmployeeGroupDialog();\n                                            EmployeeGroupDlg.loadByIdAndOpenDialog(FormID);\n                                            EmployeeGroupDlg.set_readOnly(true)\n                                        }\n                                        if (isPublicHoliday) {\n                                            var PublicHolidayDlg = new PublicHolidayDialog();\n                                            PublicHolidayDlg.loadByIdAndOpenDialog(HolidayFormID);\n                                            PublicHolidayDlg.set_readOnly(true)\n                                        }\n                                        break\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n        })\n        var chartWidth = chart.chartWidth;\n        var chartHeight = chart.chartHeight;\n        return [chartWidth, chartHeight]\n    }\n\n\n\n\n\n\n        var styleElement = document.createElement('style');\n        styleElement.setAttribute(\"type\", \"text/css\")\n\n        styleElement.innerHTML =\n            ` body {margin-top:20px;}\n\n            .card-style1 {\n                box-shadow: 0px 0px 10px 0px rgb(89 75 128 / 9 %);\n            }\n            .border - 0 {\n                border: 0!important;\n            }\n            .card {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                min-width: 0;\n                word-wrap: break-word;\n                background-color: #fff;\n                background-clip: border-box;\n                border: 1px solid rgba(0, 0, 0, .125);\n                border-radius: 0.25rem;\n            }\n            section {\n                padding: 120px 0;\n                overflow: hidden;\n                background: #fff;\n            }\n            .mb-2-3,.my-2-3 {\n                margin-bottom: 2.3rem;\n            }\n\n            .section-title {\n                font-weight: 600;\n                letter-spacing: 2px;\n                text-transform: uppercase;\n                margin-bottom: 10px;\n                position: relative;\n                display: inline-block;\n            }\n\n            .text-primary {\n                    color: #ceaa4d!important;\n                }\n\n            .text-secondary {\n                    color: #15395A!important;\n                }\n\n            .font-weight-600 {\n                    font-weight: 600;\n                }\n\n            .display-26 {\n                    font-size: 1.3rem;\n                }\n\n        @media screen and(min-width: 992px) {\n        .p-lg-7 {\n                padding: 4rem;\n            }\n        }\n\n        @media screen and(min-width: 768px) {\n        .p-md-6 {\n                padding: 3.5rem;\n            }\n        }\n\n        @media screen and(min-width: 576px) {\n        .p-sm-2-3 {\n                padding: 2.3rem;\n            }\n        }\n\n    .p-1-9 {\n            padding: 1.9rem;\n        }\n\n    .bg-secondary {\n            background: #15395A!important;\n        }\n\n        @media screen and(min - width: 576px) {\n        .pe-sm-6,.px-sm-6{\n                padding-right: 3.5rem;\n            }\n        }\n\n        @media screen and(min-width: 576px) {\n        .ps-sm-6,.px-sm-6 {\n                padding-left: 3.5rem;\n            }\n        }\n\n    .pe-1-9,.px-1-9{\n            padding-right: 1.9rem;\n        }\n\n    .ps-1-9,.px-1-9 {\n            padding-left: 1.9rem;\n        }\n\n    .pb-1-9,.py-1-9 {\n            padding-bottom: 1.9rem;\n        }\n\n    .pt-1-9,.py-1-9{\n            padding-top: 1.9rem;\n        }\n    .mb-1-9,.my-1-9 {\n            margin-bottom: 1.9rem;\n        }\n\n        @media(min-width: 992px) {\n        .d-lg-inline-block {\n                display: inline - block!important;\n            }\n        }\n    .rounded {\n            border-radius: 0.25rem!important;\n        }\n        .tab {\n          overflow: hidden;\n          border: 1px solid #ccc;\n          background-color: #f1f1f1;\n        }\n\n        .tab button {\n          background-color: inherit;\n          float: left;\n          border: none;\n          outline: none;\n          cursor: pointer;\n          padding: 14px 16px;\n          transition: 0.3s;\n        }\n\n        .tab button:hover {\n          background-color: #ddd;\n        }\n\n        .tab button.active {\n          background-color: #ccc;\n        }\n\n\n        .tabcontent {\n          display: none;\n          padding: 6px 12px;\n          border: 1px solid #ccc;\n          border-top: none;\n        animation: fadeEffect 1s; /* Fading effect takes 1 second */\n\n        }\n\n        @keyframes fadeEffect {\n          from {opacity: 0;}\n          to {opacity: 1;}\n        }\n        `;\n\n\n\n        var finalRowEle = document.createElement(\"div\")\n        finalRowEle.setAttribute(\"class\", \"row\")\n\n        var finalRowEle2 = document.createElement(\"div\")\n        finalRowEle2.setAttribute(\"class\", \"container\")\n\n        var finalSecEle = document.createElement(\"section\")\n        finalSecEle.setAttribute(\"class\", \"bg-light\")\n\n        var cover1 = document.createElement(\"DIV\")\n        cover1.setAttribute(\"class\", \"col-lg-12 mb-4 mb-sm-5\")\n        var cover2 = document.createElement(\"DIV\")\n        cover2.setAttribute(\"class\", \"card card-style1 border-0\")\n        var cover3 = document.createElement(\"DIV\")\n        cover3.setAttribute(\"class\", \"card-body\")\n\n        var mainrow = document.createElement(\"div\");\n        mainrow.setAttribute(\"class\", \"row align-items-center\")\n        var fragment = document.createElement(\"img\");\n        fragment.setAttribute(\"id\", \"myImg\");\n        fragment.width = 63;\n        fragment.height = 112.5;\n\n\n\n        var timetable_cover1 = document.createElement(\"DIV\")\n        timetable_cover1.setAttribute(\"class\", \"col-lg-12 mb-4 mb-sm-5\")\n        var TimetableNode = document.createElement('DIV')\n        TimetableNode.classList.add('category-title')\n        TimetableNode.setAttribute(\"id\", \"Employee-Timetable\")\n        var no_records = false\n\n\n        var DepartmentTable = getLookup(\"Department.Department\")\n        var DivisionTable = getLookup(\"Division.Division\")\n        var SectionTable = getLookup(\"Section.Section\")\n        var JobGradeTable = getLookup(\"JobGrade.JobGrade\")\n        var OccupationTable = getLookup(\"Occupation.Occupation\")\n        var done = false\n\n        serviceCall<ListResponse<any>>({\n            service: ViewShiftHistoryService.baseUrl + '/RetriveShiftHistory',\n            method: \"GET\",\n            data: {\n                'EmployeeID': Authorization.userDefinition.EmployeeRowID\n            },\n            async: false,\n            onSuccess: (res) => {\n                CopiedResEntity = res.Entities\n                console.log(res.Entities)\n                console.log(Authorization.userDefinition.EmployeeRowID)\n\n                ListOfData = generateListOfDate(CopiedResEntity, currentYear, currentMonth);\n                for (var x in res.Entities) {\n                    if (parseInt(res.Entities[x][\"ID\"]) == 0 && res.Entities[x][\"EmployeeRowID\"] == 0 && res.Entities[x][\"Shift\"] == 0) {\n                        no_records = true\n                        break\n                    }\n                }\n                done = true\n            },\n            onError: (error) => {\n                console.log(error)\n            }\n        });\n\n        while (done == false) {\n        }//wait until the stored procedure extracted all dataas\n\n\n        serviceCall<ListResponse<any>>({\n            service: EmployeeProfileService.baseUrl + '/EmployeeProfileBasedOnID',\n            data: {\n                'EmployeeID': Authorization.userDefinition.EmployeeRowID\n            },\n            method: \"GET\",\n            async: false,\n            onSuccess: (response) => {\n                if (response.Entities[0].EmployeeImg) {\n                    fragment.src = '/upload/' + response.Entities[0].EmployeeImg;\n                } else {\n                    // Set default Facebook profile picture URL\n                    if (response.Entities[0].Sex == 1)//is male\n                        fragment.src = 'https://i.stack.imgur.com/l60Hf.png';\n\n                    else if (response.Entities[0].Sex == 0)//is female\n                        fragment.src = 'https://st.depositphotos.com/2218212/2938/i/950/depositphotos_29388097-stock-illustration-facebook-profile.jpg';\n\n                }\n                var Div1 = document.createElement('div');\n                Div1.appendChild(fragment)\n                Div1.setAttribute(\"class\", \"col-lg-2 mb-4 mb-lg-0\");\n\n                var Div2 = document.createElement('div');\n                Div2.setAttribute(\"class\", \"col-lg-5 px-xl-10\");\n                var Div3 = document.createElement('div');\n                Div3.setAttribute(\"class\", \"col-lg-5 px-xl-10\");\n\n                var Div2_Ul1 = document.createElement('ul');\n                Div2_Ul1.setAttribute(\"class\", \"list-unstyled \")\n\n                var Div3_Ul1 = document.createElement('ul');\n                Div3_Ul1.setAttribute(\"class\", \"list-unstyled \")\n\n\n\n\n                var Div2_li6 = document.createElement('li');\n                //Div2_li6.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                var Div2_li6_span1 = document.createElement('span');\n                Div2_li6_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                Div2_li6_span1.innerText = 'Name'\n                Div2_li6.appendChild(Div2_li6_span1)\n                Div2_li6.insertAdjacentText('beforeend', response.Entities[0].EmployeeName as string);\n                Div2_Ul1.appendChild(Div2_li6)\n\n\n                var Div2_li7 = document.createElement('li');\n                // Div2_li7.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                var Div2_li7_span1 = document.createElement('span');\n                Div2_li7_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                Div2_li7_span1.innerText = 'Employee ID'\n                Div2_li7.appendChild(Div2_li7_span1)\n                Div2_li7.insertAdjacentText('beforeend', response.Entities[0].EmployeeID as string);\n                Div2_Ul1.appendChild(Div2_li7)\n\n                console.log(response.Entities[0])\n\n                var Div2_li8 = document.createElement('li');\n                // Div2_li7.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                var Div2_li8_span1 = document.createElement('span');\n                Div2_li8_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                Div2_li8_span1.innerText = 'Age'\n                Div2_li8.appendChild(Div2_li8_span1)\n                Div2_li8.insertAdjacentText('beforeend', response.Entities[0].Age as string);\n                Div2_Ul1.appendChild(Div2_li8)\n\n                const RecruitmentDate = new Date(response.Entities[0].RecruitmentDate);\n                const today = new Date();\n                // Calculate the difference in months and years\n                const yearDiff = today.getFullYear() - RecruitmentDate.getFullYear();\n                const monthDiff = today.getMonth() - RecruitmentDate.getMonth();\n                var Div2_li9 = document.createElement('li');\n                // Div2_li7.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                var Div2_li9_span1 = document.createElement('span');\n                Div2_li9_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                var Service\n\n                if (yearDiff == 0) {\n                    Div2_li9_span1.innerText = 'Month of service'\n                    Service = monthDiff.toString()\n                }\n                else {\n                    Div2_li9_span1.innerText = 'Year of service'\n                    Service = yearDiff.toString()\n\n                }\n\n                Div2_li9.appendChild(Div2_li9_span1)\n\n                Div2_li9.insertAdjacentText('beforeend', Service as string);\n                Div2_Ul1.appendChild(Div2_li9)\n\n\n\n\n                if (findRowById(DepartmentTable.items, response.Entities[0].DepartmentId) != null) {\n                    var Div3_li1 = document.createElement('li');\n                    // Div2_li1.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li1_span1 = document.createElement('span');\n                    Div3_li1_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                    Div3_li1_span1.innerText = 'Department'\n                    Div3_li1.appendChild(Div3_li1_span1)\n                    Div3_li1.insertAdjacentText('beforeend', findRowById(DepartmentTable.items, response.Entities[0].DepartmentId));\n                    Div3_Ul1.appendChild(Div3_li1)\n                }\n\n                if (findRowById(DivisionTable.items, response.Entities[0].DivisionId) != null) {\n                    var Div3_li2 = document.createElement('li');\n                    // Div2_li2.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li2_span1 = document.createElement('span');\n                    Div3_li2_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                    Div3_li2_span1.innerText = 'Division'\n                    Div3_li2.appendChild(Div3_li2_span1)\n                    Div3_li2.insertAdjacentText('beforeend', findRowById(DivisionTable.items, response.Entities[0].DivisionId));\n                    Div3_Ul1.appendChild(Div3_li2)\n                }\n\n\n                if (findRowById(SectionTable.items, response.Entities[0].SectionId) != null) {\n                    var Div3_li3 = document.createElement('li');\n                    // Div2_li3.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li3_span1 = document.createElement('span');\n                    Div3_li3_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                    Div3_li3_span1.innerText = 'Section'\n                    Div3_li3.appendChild(Div3_li3_span1)\n                    Div3_li3.insertAdjacentText('beforeend', findRowById(SectionTable.items, response.Entities[0].SectionId));\n                    Div3_Ul1.appendChild(Div3_li3)\n                }\n\n                if (findRowById(OccupationTable.items, response.Entities[0].OccupationId) != null) {\n                    var Div3_li5 = document.createElement('li');\n                    // Div2_li5.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li5_span1 = document.createElement('span');\n                    Div3_li5_span1.setAttribute(\"class\", \"text-secondary me-1 font-weight-600\")\n                    Div3_li5_span1.innerText = 'Occupation'\n                    Div3_li5.appendChild(Div3_li5_span1)\n                    Div3_li5.insertAdjacentText('beforeend', findRowById(OccupationTable.items, response.Entities[0].OccupationId));\n                    Div3_Ul1.appendChild(Div3_li5)\n                }\n\n\n\n                if (findRowById(JobGradeTable.items, response.Entities[0].JobGradeId) != null) {\n                    var Div3_li4 = document.createElement('li');\n                    // Div2_li4.setAttribute(\"class\", \"mb-2 mb-xl-3 display-28\")\n                    var Div3_li4_span1 = document.createElement('span');\n                    Div3_li4_span1.setAttribute(\"class\", \" text-secondary me-1 font-weight-600\")\n                    Div3_li4_span1.innerText = 'JobGrade'\n                    Div3_li4.appendChild(Div3_li4_span1)\n                    Div3_li4.insertAdjacentText('beforeend', findRowById(JobGradeTable.items, response.Entities[0].JobGradeId));\n                    Div3_Ul1.appendChild(Div3_li4)\n                }\n\n\n\n\n\n                //Div2.appendChild(Div2_Div1)\n                Div2.appendChild(Div2_Ul1)\n                Div3.appendChild(Div3_Ul1)\n\n                mainrow.appendChild(Div1)\n                mainrow.appendChild(Div2)\n                mainrow.appendChild(Div3)\n\n                cover3.appendChild(mainrow)\n\n                cover2.appendChild(cover3)\n                cover1.appendChild(cover2)\n                finalRowEle.append(cover1)\n                finalRowEle2.append(finalRowEle)\n\n                finalSecEle.append(finalRowEle2)\n\n                $('#GridDiv').append(finalSecEle)\n                $('#GridDiv').append(styleElement)\n\n\n                var TimeNode = document.createElement('DIV');\n\n                TimeNode.setAttribute(\"id\", \"time-box\");\n                TimeNode.setAttribute(\"class\", \"row\");\n                TimeNode.setAttribute(\"align\", \"right\");\n\n                var rowNode = document.createElement('DIV');\n                var MonthNode = document.createElement(\"INPUT\");\n                MonthNode.setAttribute(\"id\", \"Month\");\n                MonthNode.setAttribute(\"type\", \"text\");\n                MonthNode.setAttribute(\"class\", \"monthSelect\");\n                rowNode.appendChild(MonthNode);\n                TimeNode.appendChild(rowNode);\n\n\n\n                function open(evt, id) {\n                    // Declare all variables\n                    var i, tabcontent, tablinks;\n\n                    // Get all elements with class=\"tabcontent\" and hide them\n                    tabcontent = document.getElementsByClassName(\"tabcontent\");\n                    for (i = 0; i < tabcontent.length; i++) {\n                        tabcontent[i].style.display = \"none\";\n                    }\n\n                    // Get all elements with class=\"tablinks\" and remove the class \"active\"\n                    tablinks = document.getElementsByClassName(\"tablinks\");\n                    for (i = 0; i < tablinks.length; i++) {\n                        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n                    }\n\n                    // Show the current tab, and add an \"active\" class to the button that opened the tab\n                    if (document.getElementById(id) != null)\n                        document.getElementById(id).style.display = \"block\";\n                    evt.currentTarget.className += \" active\";\n                }\n\n                var TabRowNode = document.createElement('div');\n                TabRowNode.setAttribute(\"class\", \"tab\");\n\n                var ShiftTableButton = document.createElement('button');\n                ShiftTableButton.addEventListener('click', function () { open(event, 'shifttab'); }, false);\n                ShiftTableButton.setAttribute(\"class\", \"tablinks\");\n                ShiftTableButton.innerText = 'Shift'\n                ShiftTableButton.setAttribute(\"id\", \"defaultOpen\");\n\n               // var Tab2Button = document.createElement('button');\n                //Tab2Button.addEventListener('click', function () { open(event, 'tab2'); }, false);\n              //  Tab2Button.setAttribute(\"class\", \"tablinks\");\n             //   Tab2Button.innerText = 'tab2'\n\n\n\n                TabRowNode.appendChild(ShiftTableButton)\n                //TabRowNode.appendChild(Tab2Button)\n\n\n                var ShiftTabNode = document.createElement('DIV');\n                ShiftTabNode.setAttribute(\"class\", \"tabcontent\");\n                ShiftTabNode.setAttribute(\"id\", \"shifttab\");\n                ShiftTabNode.appendChild(TimeNode)\n                ShiftTabNode.appendChild(TimetableNode)\n\n\n                var Tab2Node = document.createElement('DIV');\n                Tab2Node.setAttribute(\"class\", \"tabcontent\");\n                Tab2Node.setAttribute(\"id\", \"tab2\");\n\n                var Tab2ContentH3 = document.createElement('h3')\n                Tab2ContentH3.textContent = 'Tab 2'\n\n                var Tab2ContentP = document.createElement('p')\n                Tab2ContentP.textContent = 'This is the content of Tab 2'\n\n                Tab2Node.appendChild(Tab2ContentH3)\n                Tab2Node.appendChild(Tab2ContentP)\n\n\n\n\n                finalRowEle.appendChild(TabRowNode)\n                finalRowEle.appendChild(ShiftTabNode)\n                finalRowEle.appendChild(Tab2Node)\n\n                var SetOfMonthYear = generateMonthRange(currentYear, currentMonth);\n                let MonthEditor = new Select2Editor($(\"#Month\"))\n                for (var i = 0; i < SetOfMonthYear.length; i++) {\n                    MonthEditor.addItem({ id: (i).toString(), text: (SetOfMonthYear[i]).toString(), });\n                    if (SetOfMonthYear[i].toString() == dateString)\n                        MonthEditor.set_value((i).toString())\n                }\n\n                $(\"#Month\").on('change', async function () {\n                    var index = $(this).val()\n                    var wanted = SetOfMonthYear[index]\n                    year = parseInt(wanted.split('-')[0]);\n                    month = parseInt(wanted.split('-')[1]);\n                    currentMonth = month\n                    currentYear = year\n\n                    var ListOfData: Data[] = generateListOfDate(CopiedResEntity, year, month);\n\n                    if (no_records == false)\n                        ListOfData = appendShift(ListOfData, CopiedResEntity);\n\n                    var [CurrentMonthPublicHolidayName, CurrentMonthPublicHolidayDate, CurrentMonthPublicHolidayID] = GetCurrentMonthHoliday(ListOfPublicHolidayData, currentYear, currentMonth)\n                    var ListOfCurrentMonthPublicHoliday: PublicHolidayData[] = [];\n                    for (var index2 in CurrentMonthPublicHolidayDate) {\n                        ListOfCurrentMonthPublicHoliday.push({\n                            PublicHolidayDate: CurrentMonthPublicHolidayDate[index2],\n                            PublicHolidayId: CurrentMonthPublicHolidayID[index2],\n                            PublicHolidayName: CurrentMonthPublicHolidayName[index2],\n                        })\n                    }\n\n                    var chartData = generateChartData(ListOfData, ListOfGroupData, ListOfShiftData, ListOfCurrentMonthPublicHoliday, ListOfLeaveTakenData);\n                    var chartwidth, chartheight\n                    [chartwidth, chartheight] = plot(chartData, ListOfCurrentMonthPublicHoliday)\n\n                    Tab2Node.style.width = String(chartwidth) + 'px'\n                    Tab2Node.style.height = String(chartheight) + 'px'\n\n                });\n\n\n                if (no_records == false)\n                    ListOfData = appendShift(ListOfData, CopiedResEntity)\n                var [CurrentMonthPublicHolidayName, CurrentMonthPublicHolidayDate, CurrentMonthPublicHolidayID] = GetCurrentMonthHoliday(ListOfPublicHolidayData, currentYear, currentMonth)\n                var ListOfCurrentMonthPublicHoliday: PublicHolidayData[] = [];\n                for (var index in CurrentMonthPublicHolidayDate) {\n                    ListOfCurrentMonthPublicHoliday.push({\n                        PublicHolidayDate: CurrentMonthPublicHolidayDate[index],\n                        PublicHolidayId: CurrentMonthPublicHolidayID[index],\n                        PublicHolidayName: CurrentMonthPublicHolidayName[index],\n                    })\n                }\n                var chartData = generateChartData(ListOfData, ListOfGroupData, ListOfShiftData, ListOfCurrentMonthPublicHoliday, ListOfLeaveTakenData);\n\n                var chartwidth, chartheight\n                [chartwidth, chartheight] = plot(chartData, ListOfCurrentMonthPublicHoliday)\n\n                Tab2Node.style.width = String(chartwidth) + 'px'\n                Tab2Node.style.height = String(chartheight) + 'px'\n\n\n                ShiftTableButton.click();//open shift tab on default\n\n            },\n            onError: (error) => {\n                console.log(error.Error);\n            }\n        });\n\n\n\n\n    \n\n}\n"],
  "mappings": "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",
  "names": ["import_corelib", "import_q", "Highcharts", "import_heatmap", "findRowById", "array", "idValue", "i", "__name", "pageInit", "Heatmap", "Highcharts", "CopiedResEntity", "ShiftNameList", "Color", "ShiftIdList", "WorkingHourFromList", "WorkingHourUntilList", "WorkingTimeList", "ListOfShiftData", "done_retrieve_shift", "ShiftService", "response", "ListOfDays", "index", "ListOfWorkingFrom", "ListOfWorkingUntil", "ListOfWorkingTime", "days", "error", "ListOfPublicHolidayData", "done_retrieve_public_holiday", "PublicHolidayService", "ListOfGroupData", "done_retrieve_group_data", "EmployeeGroupService", "ListOfLeaveTakenData", "done_retrieve_holiday", "LeaveApplicationService", "half", "ListOfData", "year", "month", "currentDate", "currentMonth", "currentYear", "dateString", "isInRange", "num", "min", "max", "buffer", "addLeadingZero", "GetCurrentMonthHoliday", "curr_year", "curr_month", "CurrentMonthPublicHolidayName", "CurrentMonthPublicHolidayDate", "CurrentMonthPublicHolidayID", "date", "generateMonthRange", "months", "startDate", "prevMonth", "nextMonth", "generateListOfDate", "res", "Year", "Month", "numberOfDays", "day", "GroupID", "Start", "End", "appendShift", "entities", "x", "endDate", "data", "generateChartData", "TakenLeave", "firstWeekday", "monthLength", "emptyTilesFirst", "chartData", "xCoordinate", "yCoordinate", "id", "shift", "Group", "CurrentColorCode", "ShiftString", "detail_string", "ShiftID", "LeaveReasonTable", "StartingRange", "EndingRange", "currentValue", "key", "LookupIndex", "isDateBetween", "plot", "Data", "ListOfCurrentMonthPublicHoliday", "chart", "FormID", "isLeave", "thisday", "thismonth", "thisyear", "IsGroup", "formattedDate", "DatetimeDate", "StartDate", "EndDate", "dlg", "LeaveApplicationDialog", "isPublicHoliday", "HolidayFormID", "each_res", "shift_start", "shift_end", "endDateString", "dlg2", "SetEmployeeShiftDialog", "EmployeeGroupDlg", "EmployeeGroupDialog", "PublicHolidayDlg", "PublicHolidayDialog", "chartWidth", "chartHeight", "styleElement", "finalRowEle", "finalRowEle2", "finalSecEle", "cover1", "cover2", "cover3", "mainrow", "fragment", "timetable_cover1", "TimetableNode", "no_records", "DepartmentTable", "DivisionTable", "SectionTable", "JobGradeTable", "OccupationTable", "done", "ViewShiftHistoryService", "EmployeeProfileService", "Div1", "Div2", "Div3", "Div2_Ul1", "Div3_Ul1", "Div2_li6", "Div2_li6_span1", "Div2_li7", "Div2_li7_span1", "Div2_li8", "Div2_li8_span1", "RecruitmentDate", "today", "yearDiff", "monthDiff", "Div2_li9", "Div2_li9_span1", "Service", "Div3_li1", "Div3_li1_span1", "Div3_li2", "Div3_li2_span1", "Div3_li3", "Div3_li3_span1", "Div3_li5", "Div3_li5_span1", "Div3_li4", "Div3_li4_span1", "TimeNode", "rowNode", "MonthNode", "open", "evt", "tabcontent", "tablinks", "TabRowNode", "ShiftTableButton", "ShiftTabNode", "Tab2Node", "Tab2ContentH3", "Tab2ContentP", "SetOfMonthYear", "MonthEditor", "__async", "wanted", "index2", "chartwidth", "chartheight"]
}
