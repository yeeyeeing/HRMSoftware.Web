{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/EmployeeAttendance/EmployeeAttendance/EmployeeAttendancePage.ts", "../../../../../../Modules/HumanResource/EmployeeAttendance/EmployeeAttendance/EmployeeAttendanceGrid.ts", "../../../../../../Modules/HumanResource/EmployeeAttendance/EmployeeAttendance/EmployeeAttendanceDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { EmployeeAttendanceGrid } from './EmployeeAttendanceGrid';\n\nexport default function pageInit() {\n    initFullHeightGridPage(new EmployeeAttendanceGrid($('#GridDiv')).element);\n}", "import { Decorators, EntityGrid, ListResponse } from '@serenity-is/corelib';\nimport { EmployeeAttendanceColumns, EmployeeAttendanceRow, EmployeeAttendanceService } from '../../../ServerTypes/EmployeeAttendance';\nimport { EmployeeAttendanceDialog } from './EmployeeAttendanceDialog';\nimport { PermissionKeys } from '../../../ServerTypes/Administration';\nimport { Authorization } from '@serenity-is/corelib/q';\nimport { Select2Editor, QuickFilter, Widget } from '@serenity-is/corelib';\nimport { EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\nimport { OccupationService, JobGradeService, DepartmentService, DivisionService } from '../../../ServerTypes/OrganisationHierarchy';\n\n@Decorators.registerClass('HRMSoftware.EmployeeAttendance.EmployeeAttendanceGrid')\nexport class EmployeeAttendanceGrid extends EntityGrid<EmployeeAttendanceRow, any> {\n    protected getColumnsKey() { return EmployeeAttendanceColumns.columnsKey; }\n    protected getDialogType() { return EmployeeAttendanceDialog; }\n    protected getRowDefinition() { return EmployeeAttendanceRow; }\n    protected getService() { return EmployeeAttendanceService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n        var linkElement = document.createElement('link');\n        linkElement.rel = 'stylesheet';\n        linkElement.href = 'https://cdn.jsdelivr.net/npm/clocklet/css/clocklet.min.css';\n        // Create script element for JavaScript\n        var scriptElement = document.createElement('script');\n        scriptElement.src = 'https://cdn.jsdelivr.net/npm/clocklet';\n        // Append link and script elements to the head of the document\n        document.head.appendChild(linkElement);\n        document.head.appendChild(scriptElement);\n    }\n    protected onViewProcessData(response: ListResponse<EmployeeAttendanceRow>) {\n        response = super.onViewProcessData(response);\n        //this.toolbar.findButton(\"add-button\").toggle(false);\n        this.toolbar.findButton(\"column-picker-button\").toggle(false);\n\n        return response;\n    }\n    protected getQuickFilters(): QuickFilter<Widget<any>, any>[] {\n        //Gets the Filters defined in the Columns or in parent grids.\n        let filters = super.getQuickFilters();\n        var thisrow = EmployeeAttendanceRow\n        // console.log(filters[3].type = Select2Editor)\n        if (Authorization.hasPermission(PermissionKeys.HumanResources)) {\n\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: thisrow.Fields.OccupationName,\n                type: Select2Editor,\n                title: \"Occupation\",\n\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: thisrow.Fields.JobGradeName,\n                type: Select2Editor,\n                title: \"Job Grade\",\n\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: thisrow.Fields.DivisionName,\n                type: Select2Editor,\n                title: \"Division\",\n\n            });\n\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: thisrow.Fields.DepartmentName,\n                type: Select2Editor,\n                title: \"Department\",\n\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: thisrow.Fields.EmployeeName,\n                type: Select2Editor,\n                title: \"Name\",\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: thisrow.Fields.EmployeeId,\n                type: Select2Editor,\n                title: \"Employee ID\",\n            });\n            filters.reverse()\n\n        }\n        return filters;\n    }\n    protected createQuickFilters(): void {\n        // let base class to create quick filters first\n\n        super.createQuickFilters();\n        var thisrow = EmployeeAttendanceRow\n        if (Authorization.hasPermission(PermissionKeys.HumanResources)) {\n\n            OccupationService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, thisrow.Fields.OccupationName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n            })\n            JobGradeService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, thisrow.Fields.JobGradeName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n            })\n            DepartmentService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, thisrow.Fields.DepartmentName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n            })\n            DivisionService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, thisrow.Fields.DivisionName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n\n            })\n            EmployeeProfileService.List({\n            }, response => {\n                for (var index in response.Entities) {\n                    this.findQuickFilter(Select2Editor, thisrow.Fields.EmployeeName).items.push({ id: (response.Entities[index].EmployeeName).toString(), text: (response.Entities[index].EmployeeName).toString(), })\n                    this.findQuickFilter(Select2Editor, thisrow.Fields.EmployeeId).items.push({ id: (response.Entities[index].EmployeeID).toString(), text: (response.Entities[index].EmployeeID).toString(), })\n\n                }\n            })\n        }\n        else\n            this.toolbar.findButton(\"add-button\").toggle(false);\n\n    }\n\n}", "import { Decorators, EditorUtils, EntityDialog, Select2Editor } from '@serenity-is/corelib';\nimport { EmployeeAttendanceForm, EmployeeAttendanceRow, EmployeeAttendanceService } from '../../../ServerTypes/EmployeeAttendance';\nimport { EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\n\n@Decorators.registerClass('HRMSoftware.EmployeeAttendance.EmployeeAttendanceDialog')\nexport class EmployeeAttendanceDialog extends EntityDialog<EmployeeAttendanceRow, any> {\n    protected getFormKey() { return EmployeeAttendanceForm.formKey; }\n    protected getRowDefinition() { return EmployeeAttendanceRow; }\n    protected getService() { return EmployeeAttendanceService.baseUrl; }\n\n    protected form = new EmployeeAttendanceForm(this.idPrefix);\n    constructor() {\n      \n        super();\n    }\n\n\n\n    public dialogOpen(asPanel?: boolean): void {\n        var StartClocklet = document.getElementById(this.idPrefix + 'AuthenticationTime')\n        StartClocklet.setAttribute('data-clocklet', '');\n        StartClocklet.addEventListener(\"clocklet.opening\", function (event) {\n            var myClocklet = document.getElementById(this.id) as HTMLElement;\n            if (myClocklet)\n                myClocklet.style.zIndex = Number.MAX_SAFE_INTEGER.toString();\n        });\n        $(document.getElementById(this.idPrefix.substring(0, this.idPrefix.lastIndexOf('_')))).click(function () {});\n\n        var AuthenticationSecondValue = this.form.AuthenticationSecond.value\n        \n        var AuthenticationSecondElement = document.getElementById(this.idPrefix + 'AuthenticationSecond')\n        let AuthenticationSecondEditor = new Select2Editor($(AuthenticationSecondElement))\n\n        for (let i = 0; i <= 60; i++) \n            AuthenticationSecondEditor.addItem({ id: (i).toString(), text: (i).toString(), }); // 8am - 6pm , will consider lates\n        \n\n        if (AuthenticationSecondValue != null)\n            $(AuthenticationSecondElement).val(AuthenticationSecondValue.toString()).trigger('change');\n\n        \n        super.dialogOpen(asPanel);\n        EditorUtils.setReadonly(this.form.PersonName.element, true);\n\n        var EmployeeRowIdValue = this.form.EmployeeRowID.value\n\n\n        EmployeeProfileService.List({\n        }, response => {\n\n            var EmployeeRowIdElement = document.getElementById(this.idPrefix + 'EmployeeRowID')\n            let EmployeeRowIdEditor = new Select2Editor($(EmployeeRowIdElement))\n\n            var PersonNameElement = document.getElementById(this.idPrefix + 'PersonName')\n            //let PersonNameEditor = new Select2Editor($(PersonNameElement))\n            interface Item {\n                id: number;\n                name: string;\n            }\n            let listOfDicts: Item[] = [];\n\n            for (var index in response.Entities) {\n                EmployeeRowIdEditor.addItem({ id: (response.Entities[index].Id).toString(), text: (response.Entities[index].EmployeeID).toString(), }); // 8am - 6pm , will consider lates\n                listOfDicts.push({ id: response.Entities[index].Id, name: response.Entities[index].EmployeeName });\n            }\n\n            $(EmployeeRowIdElement).on('change', async function () {\n                for (var index in listOfDicts) {\n                    if (listOfDicts[index].id == $(EmployeeRowIdElement).val())\n                        $(PersonNameElement).val(listOfDicts[index].name)\n                }\n            })\n            if (EmployeeRowIdValue != null)\n                $(EmployeeRowIdElement).val(EmployeeRowIdValue.toString()).trigger('change');\n\n        });\n        if (this.form.AuthenticationTime.value != null)\n            this.form.AuthenticationTime.value = this.form.AuthenticationTime.value.substring(0,4)\n     \n    }\n}"],
  "mappings": "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",
  "names": ["import_q", "import_corelib", "import_corelib", "EmployeeAttendanceDialog", "EmployeeAttendanceForm", "EmployeeAttendanceRow", "EmployeeAttendanceService", "asPanel", "StartClocklet", "event", "myClocklet", "AuthenticationSecondValue", "AuthenticationSecondElement", "AuthenticationSecondEditor", "i", "EmployeeRowIdValue", "EmployeeProfileService", "response", "EmployeeRowIdElement", "EmployeeRowIdEditor", "PersonNameElement", "listOfDicts", "index", "__async", "__name", "__decorateClass", "import_q", "import_corelib", "EmployeeAttendanceGrid", "EmployeeAttendanceColumns", "EmployeeAttendanceDialog", "EmployeeAttendanceRow", "EmployeeAttendanceService", "container", "linkElement", "scriptElement", "response", "filters", "thisrow", "PermissionKeys", "OccupationService", "index", "JobGradeService", "DepartmentService", "DivisionService", "EmployeeProfileService", "__name", "__decorateClass", "pageInit", "EmployeeAttendanceGrid", "__name"]
}
