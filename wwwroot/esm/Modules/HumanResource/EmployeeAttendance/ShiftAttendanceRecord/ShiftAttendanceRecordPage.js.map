{
  "version": 3,
  "sources": ["../../../../../../Modules/HumanResource/EmployeeAttendance/ShiftAttendanceRecord/ShiftAttendanceRecordPage.ts", "../../../../../../Modules/HumanResource/EmployeeAttendance/ShiftAttendanceRecord/ShiftAttendanceRecordGrid.ts", "../../../../../../Modules/HumanResource/EmployeeAttendance/ShiftAttendanceRecord/ShiftAttendanceRecordDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\nimport { ShiftAttendanceRecordGrid } from './ShiftAttendanceRecordGrid';\n\nexport default function pageInit() {\n    initFullHeightGridPage(new ShiftAttendanceRecordGrid($('#GridDiv')).element);\n}", "import { Decorators, EntityGrid, ListResponse, QuickFilter, Select2Editor, Widget } from '@serenity-is/corelib';\nimport { ShiftAttendanceRecordColumns, ShiftAttendanceRecordRow, ShiftAttendanceRecordService } from '../../../ServerTypes/EmployeeAttendance';\nimport { ShiftAttendanceRecordDialog } from './ShiftAttendanceRecordDialog';\nimport { OccupationService, JobGradeService, DepartmentService, DivisionService } from '../../../ServerTypes/OrganisationHierarchy';\n\nimport { EmployeeProfileService } from '../../../ServerTypes/EmployeeProfile';\nimport { MasterCostCentreService } from '../../../ServerTypes/Master';\nimport { Authorization } from '@serenity-is/corelib/q';\nimport { PermissionKeys } from '../../../ServerTypes/Administration';\n@Decorators.registerClass('HRMSoftware.EmployeeAttendance.ShiftAttendanceRecordGrid')\nexport class ShiftAttendanceRecordGrid extends EntityGrid<ShiftAttendanceRecordRow, any> {\n    protected getColumnsKey() { return ShiftAttendanceRecordColumns.columnsKey; }\n    protected getDialogType() { return ShiftAttendanceRecordDialog; }\n    protected getRowDefinition() { return ShiftAttendanceRecordRow; }\n    protected getService() { return ShiftAttendanceRecordService.baseUrl; }\n\n\n    protected getQuickFilters(): QuickFilter<Widget<any>, any>[] {\n        //Gets the Filters defined in the Columns or in parent grids.\n        let filters = super.getQuickFilters();\n\n        // console.log(filters[3].type = Select2Editor)\n\n        if (Authorization.hasPermission(PermissionKeys.HumanResources)) {\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: ShiftAttendanceRecordRow.Fields.OccupationName,\n                type: Select2Editor,\n                title: \"Occupation\",\n\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: ShiftAttendanceRecordRow.Fields.JobGradeName,\n                type: Select2Editor,\n                title: \"Job Grade\",\n\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: ShiftAttendanceRecordRow.Fields.DivisionName,\n                type: Select2Editor,\n                title: \"Division\",\n\n            });\n\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: ShiftAttendanceRecordRow.Fields.DepartmentName,\n                type: Select2Editor,\n                title: \"Department\",\n\n            });\n\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: ShiftAttendanceRecordRow.Fields.EmployeeName,\n                type: Select2Editor,\n                title: \"Name\",\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: ShiftAttendanceRecordRow.Fields.EmployeeID,\n                type: Select2Editor,\n                title: \"Employee ID\",\n            });\n            filters.push({\n                cssClass: \"hidden-xs\",\n                field: ShiftAttendanceRecordRow.Fields.CostCentreName,\n                type: Select2Editor,\n\n                title: \"Cost Centre\",\n            });\n\n            filters.reverse()\n        }\n        return filters;\n    }\n    protected createQuickFilters(): void {\n        // let base class to create quick filters first\n        super.createQuickFilters();\n\n        if (Authorization.hasPermission(PermissionKeys.HumanResources)) {\n            const months: string[] = [\n                'January',   // 0\n                'February',  // 1\n                'March',     // 2\n                'April',     // 3\n                'May',       // 4\n                'June',      // 5\n                'July',      // 6\n                'August',    // 7\n                'September', // 8\n                'October',   // 9\n                'November',  // 10\n                'December'   // 11\n            ];\n\n            OccupationService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, ShiftAttendanceRecordRow.Fields.OccupationName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n            })\n            JobGradeService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, ShiftAttendanceRecordRow.Fields.JobGradeName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n            })\n            DepartmentService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, ShiftAttendanceRecordRow.Fields.DepartmentName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n            })\n            DivisionService.List({\n            }, response => {\n                for (var index in response.Entities)\n                    this.findQuickFilter(Select2Editor, ShiftAttendanceRecordRow.Fields.DivisionName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n\n            })\n            EmployeeProfileService.List({\n            }, response => {\n                for (var index in response.Entities) {\n                    this.findQuickFilter(Select2Editor, ShiftAttendanceRecordRow.Fields.EmployeeName).items.push({ id: (response.Entities[index].EmployeeName).toString(), text: (response.Entities[index].EmployeeName).toString(), })\n                    this.findQuickFilter(Select2Editor, ShiftAttendanceRecordRow.Fields.EmployeeID).items.push({ id: (response.Entities[index].EmployeeID).toString(), text: (response.Entities[index].EmployeeID).toString(), })\n\n                }\n            })\n            MasterCostCentreService.List({\n            }, response => {\n                for (var index in response.Entities) {\n                    this.findQuickFilter(Select2Editor, ShiftAttendanceRecordRow.Fields.CostCentreName).items.push({ id: (response.Entities[index].Name).toString(), text: (response.Entities[index].Name).toString(), })\n\n                }\n            })\n\n\n        }\n\n    }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n    protected getColumns() {\n        var columns = super.getColumns();\n        var index\n        if (!Authorization.hasPermission(PermissionKeys.HumanResources)) //if he is not HR guy, hide the employeeID and approved by column\n        {\n            for (index in columns) {\n                if (columns[index].name == 'Employee Id' || columns[index].name == 'Approved By') {\n                    columns.splice(index, 1);\n                }\n\n            }\n        }\n\n\n        return columns;\n\n    }\n    protected onViewProcessData(response: ListResponse<ShiftAttendanceRecordRow>) {\n        response = super.onViewProcessData(response);\n        this.toolbar.findButton(\"column-picker-button\").toggle(false);\n        return response;\n\n    }\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\nimport { ShiftAttendanceRecordForm, ShiftAttendanceRecordRow, ShiftAttendanceRecordService } from '../../../ServerTypes/EmployeeAttendance';\n\n@Decorators.registerClass('HRMSoftware.EmployeeAttendance.ShiftAttendanceRecordDialog')\nexport class ShiftAttendanceRecordDialog extends EntityDialog<ShiftAttendanceRecordRow, any> {\n    protected getFormKey() { return ShiftAttendanceRecordForm.formKey; }\n    protected getRowDefinition() { return ShiftAttendanceRecordRow; }\n    protected getService() { return ShiftAttendanceRecordService.baseUrl; }\n\n    protected form = new ShiftAttendanceRecordForm(this.idPrefix);\n\n    constructor() {\n        super();\n        this.editButton.remove();\n        this.applyChangesButton.remove();\n\n        // Create link element for CSS\n        var linkElement = document.createElement('link');\n        linkElement.rel = 'stylesheet';\n        linkElement.href = \"https://cdn.jsdelivr.net/npm/clocklet@0.3.0/css/clocklet.min.css\";\n        var scriptElement = document.createElement('script');\n        scriptElement.src = \"https://cdn.jsdelivr.net/npm/clocklet@0.3.0\";\n        // Append link and script elements to the head of the document\n        document.head.appendChild(linkElement);\n        document.head.appendChild(scriptElement);\n        var tabId = $(\".fieldset\").children().attr('id');\n        const searchString = \"PropertyGrid\";\n        const TimeInString = \"TimeInHour\";\n        const TimeOutString = \"TimeOutHour\";\n        const ShiftStartTimeString = \"ShiftStartTimeHour\";\n        const ShiftEndTimeString = \"ShiftEndTimeHour\";\n        const lastIndex = tabId.lastIndexOf(searchString);\n        if (lastIndex !== -1) {\n            var starting_time_element_id = tabId.substring(0, lastIndex) + TimeInString;\n            var ending_time_element_id = tabId.substring(0, lastIndex) + TimeOutString;\n            var ShiftStartTime_element_id = tabId.substring(0, lastIndex) + ShiftStartTimeString;\n            var ShiftEndTime_element_id = tabId.substring(0, lastIndex) + ShiftEndTimeString;\n        }\n        var StartClocklet = document.getElementById(starting_time_element_id)\n        StartClocklet.setAttribute('data-clocklet', '');\n        StartClocklet.setAttribute(\"id\", \"time-start-clocklet\");\n        StartClocklet.addEventListener(\"clocklet.opening\", function (event) {\n            const myClocklet = document.getElementById(\"time-start-clocklet\") as HTMLElement;\n            if (myClocklet) \n                myClocklet.style.zIndex = Number.MAX_SAFE_INTEGER.toString();\n        });\n        StartClocklet.addEventListener(\"clocklet.closed\", function (event) {\n        });\n        \n        var EndClocklet = document.getElementById(ending_time_element_id)\n        EndClocklet.setAttribute('data-clocklet', '');\n        EndClocklet.setAttribute(\"id\", \"time-end-clocklet\");\n        EndClocklet.addEventListener(\"clocklet.opening\", function (event) {\n            const myClocklet = document.getElementById(\"time-end-clocklet\") as HTMLElement;\n            if (myClocklet) \n                myClocklet.style.zIndex = Number.MAX_SAFE_INTEGER.toString();\n        });\n        EndClocklet.addEventListener(\"clocklet.closed\", function (event) {\n        });\n        var ShiftStartClocklet = document.getElementById(ShiftStartTime_element_id)\n        ShiftStartClocklet.setAttribute('data-clocklet', '');\n        ShiftStartClocklet.setAttribute(\"id\", \"shift-start-clocklet\");\n        ShiftStartClocklet.addEventListener(\"clocklet.opening\", function (event) {\n            const myClocklet = document.getElementById(\"shift-start-clocklet\") as HTMLElement;\n            if (myClocklet) \n                myClocklet.style.zIndex = Number.MAX_SAFE_INTEGER.toString();\n        });\n        ShiftStartClocklet.addEventListener(\"clocklet.closed\", function (event) {\n        });\n        var ShiftEndClocklet = document.getElementById(ShiftEndTime_element_id)\n        ShiftEndClocklet.setAttribute('data-clocklet', '');\n        ShiftEndClocklet.setAttribute(\"id\", \"shift-end-clocklet\");\n        ShiftEndClocklet.addEventListener(\"clocklet.opening\", function (event) {\n            const myClocklet = document.getElementById(\"shift-end-clocklet\") as HTMLElement;\n            if (myClocklet) \n                myClocklet.style.zIndex = Number.MAX_SAFE_INTEGER.toString();\n        });\n        ShiftEndClocklet.addEventListener(\"clocklet.closed\", function (event) {\n        });\n        \n    }\n\n    protected onDialogOpen() {\n        super.onDialogOpen()\n   \n        if (!this.isNew())\n        ShiftAttendanceRecordService.Retrieve({\n            EntityId: this.entityId\n        }, response => {\n            var ShiftStartTime = new Date(response.Entity.ShiftStartTime)\n            var hours = ShiftStartTime.getHours().toString().padStart(2, '0'); // Ensure two digits\n            var minutes = ShiftStartTime.getMinutes().toString().padStart(2, '0'); // Ensure two digits\n            var formattedTime = `${hours}:${minutes}`;\n            var ShiftStartElement = document.getElementById('shift-start-clocklet') as HTMLInputElement;\n            ShiftStartElement.value = formattedTime;\n\n\n            var ShiftEndTime = new Date(response.Entity.ShiftEndTime)\n            hours = ShiftEndTime.getHours().toString().padStart(2, '0'); // Ensure two digits\n            minutes = ShiftEndTime.getMinutes().toString().padStart(2, '0'); // Ensure two digits\n            formattedTime = `${hours}:${minutes}`;\n            var ShiftEndElement = document.getElementById('shift-end-clocklet') as HTMLInputElement;\n            ShiftEndElement.value = formattedTime;\n\n\n\n            var TimeIn = new Date(response.Entity.TimeIn)\n            hours = TimeIn.getHours().toString().padStart(2, '0'); // Ensure two digits\n            minutes = TimeIn.getMinutes().toString().padStart(2, '0'); // Ensure two digits\n            formattedTime = `${hours}:${minutes}`;\n            var TimeInElement = document.getElementById('time-start-clocklet') as HTMLInputElement;\n            TimeInElement.value = formattedTime;\n        \n            var TimeOut = new Date(response.Entity.TimeOut)\n            hours = TimeOut.getHours().toString().padStart(2, '0'); // Ensure two digits\n            minutes = TimeOut.getMinutes().toString().padStart(2, '0'); // Ensure two digits\n            formattedTime = `${hours}:${minutes}`;\n            var TimeOutElement = document.getElementById('time-end-clocklet') as HTMLInputElement;\n            TimeOutElement.value = formattedTime;\n        })\n\n    }\n}"],
  "mappings": "gsBAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAyF,SCAzF,IAAAC,EAAyC,SAIlC,IAAMC,EAAN,cAA0C,cAA4C,CAOzF,aAAc,CACV,MAAM,EAHV,KAAU,KAAO,IAAIC,EAA0B,KAAK,QAAQ,EAIxD,KAAK,WAAW,OAAO,EACvB,KAAK,mBAAmB,OAAO,EAG/B,IAAIC,EAAc,SAAS,cAAc,MAAM,EAC/CA,EAAY,IAAM,aAClBA,EAAY,KAAO,mEACnB,IAAIC,EAAgB,SAAS,cAAc,QAAQ,EACnDA,EAAc,IAAM,8CAEpB,SAAS,KAAK,YAAYD,CAAW,EACrC,SAAS,KAAK,YAAYC,CAAa,EACvC,IAAIC,EAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,IAAI,EAC/C,IAAMC,EAAe,eACfC,EAAe,aACfC,EAAgB,cAChBC,EAAuB,qBACvBC,EAAqB,mBACrBC,EAAYN,EAAM,YAAYC,CAAY,EAChD,GAAIK,IAAc,GACd,IAAIC,EAA2BP,EAAM,UAAU,EAAGM,CAAS,EAAIJ,EAC3DM,EAAyBR,EAAM,UAAU,EAAGM,CAAS,EAAIH,EACzDM,EAA4BT,EAAM,UAAU,EAAGM,CAAS,EAAIF,EAC5DM,EAA0BV,EAAM,UAAU,EAAGM,CAAS,EAAID,EAElE,IAAIM,EAAgB,SAAS,eAAeJ,CAAwB,EACpEI,EAAc,aAAa,gBAAiB,EAAE,EAC9CA,EAAc,aAAa,KAAM,qBAAqB,EACtDA,EAAc,iBAAiB,mBAAoB,SAAUC,EAAO,CAChE,IAAMC,EAAa,SAAS,eAAe,qBAAqB,EAC5DA,IACAA,EAAW,MAAM,OAAS,OAAO,iBAAiB,SAAS,EACnE,CAAC,EACDF,EAAc,iBAAiB,kBAAmB,SAAUC,EAAO,CACnE,CAAC,EAED,IAAIE,EAAc,SAAS,eAAeN,CAAsB,EAChEM,EAAY,aAAa,gBAAiB,EAAE,EAC5CA,EAAY,aAAa,KAAM,mBAAmB,EAClDA,EAAY,iBAAiB,mBAAoB,SAAUF,EAAO,CAC9D,IAAMC,EAAa,SAAS,eAAe,mBAAmB,EAC1DA,IACAA,EAAW,MAAM,OAAS,OAAO,iBAAiB,SAAS,EACnE,CAAC,EACDC,EAAY,iBAAiB,kBAAmB,SAAUF,EAAO,CACjE,CAAC,EACD,IAAIG,EAAqB,SAAS,eAAeN,CAAyB,EAC1EM,EAAmB,aAAa,gBAAiB,EAAE,EACnDA,EAAmB,aAAa,KAAM,sBAAsB,EAC5DA,EAAmB,iBAAiB,mBAAoB,SAAUH,EAAO,CACrE,IAAMC,EAAa,SAAS,eAAe,sBAAsB,EAC7DA,IACAA,EAAW,MAAM,OAAS,OAAO,iBAAiB,SAAS,EACnE,CAAC,EACDE,EAAmB,iBAAiB,kBAAmB,SAAUH,EAAO,CACxE,CAAC,EACD,IAAII,EAAmB,SAAS,eAAeN,CAAuB,EACtEM,EAAiB,aAAa,gBAAiB,EAAE,EACjDA,EAAiB,aAAa,KAAM,oBAAoB,EACxDA,EAAiB,iBAAiB,mBAAoB,SAAUJ,EAAO,CACnE,IAAMC,EAAa,SAAS,eAAe,oBAAoB,EAC3DA,IACAA,EAAW,MAAM,OAAS,OAAO,iBAAiB,SAAS,EACnE,CAAC,EACDG,EAAiB,iBAAiB,kBAAmB,SAAUJ,EAAO,CACtE,CAAC,CAEL,CA3EU,YAAa,CAAE,OAAOf,EAA0B,OAAS,CACzD,kBAAmB,CAAE,OAAOoB,CAA0B,CACtD,YAAa,CAAE,OAAOC,EAA6B,OAAS,CA2E5D,cAAe,CACrB,MAAM,aAAa,EAEd,KAAK,MAAM,GAChBA,EAA6B,SAAS,CAClC,SAAU,KAAK,QACnB,EAAGC,GAAY,CACX,IAAIC,EAAiB,IAAI,KAAKD,EAAS,OAAO,cAAc,EACxDE,EAAQD,EAAe,SAAS,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EAC5DE,EAAUF,EAAe,WAAW,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EAChEG,EAAgB,GAAGF,KAASC,IAC5BE,EAAoB,SAAS,eAAe,sBAAsB,EACtEA,EAAkB,MAAQD,EAG1B,IAAIE,EAAe,IAAI,KAAKN,EAAS,OAAO,YAAY,EACxDE,EAAQI,EAAa,SAAS,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EAC1DH,EAAUG,EAAa,WAAW,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EAC9DF,EAAgB,GAAGF,KAASC,IAC5B,IAAII,EAAkB,SAAS,eAAe,oBAAoB,EAClEA,EAAgB,MAAQH,EAIxB,IAAII,EAAS,IAAI,KAAKR,EAAS,OAAO,MAAM,EAC5CE,EAAQM,EAAO,SAAS,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EACpDL,EAAUK,EAAO,WAAW,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EACxDJ,EAAgB,GAAGF,KAASC,IAC5B,IAAIM,EAAgB,SAAS,eAAe,qBAAqB,EACjEA,EAAc,MAAQL,EAEtB,IAAIM,EAAU,IAAI,KAAKV,EAAS,OAAO,OAAO,EAC9CE,EAAQQ,EAAQ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EACrDP,EAAUO,EAAQ,WAAW,EAAE,SAAS,EAAE,SAAS,EAAG,GAAG,EACzDN,EAAgB,GAAGF,KAASC,IAC5B,IAAIQ,EAAiB,SAAS,eAAe,mBAAmB,EAChEA,EAAe,MAAQP,CAC3B,CAAC,CAEL,CACJ,EAtHaQ,EAAAnC,EAAA,+BAAAA,EAANoC,EAAA,CADN,aAAW,cAAc,4DAA4D,GACzEpC,GDGb,IAAAqC,EAA8B,SAGvB,IAAMC,EAAN,cAAwC,YAA0C,CAC3E,eAAgB,CAAE,OAAOC,EAA6B,UAAY,CAClE,eAAgB,CAAE,OAAOC,CAA6B,CACtD,kBAAmB,CAAE,OAAOC,CAA0B,CACtD,YAAa,CAAE,OAAOC,EAA6B,OAAS,CAG5D,iBAAmD,CAEzD,IAAIC,EAAU,MAAM,gBAAgB,EAIpC,OAAI,gBAAc,cAAcC,EAAe,cAAc,IACzDD,EAAQ,KAAK,CACT,SAAU,YACV,MAAOF,EAAyB,OAAO,eACvC,KAAM,gBACN,MAAO,YAEX,CAAC,EACDE,EAAQ,KAAK,CACT,SAAU,YACV,MAAOF,EAAyB,OAAO,aACvC,KAAM,gBACN,MAAO,WAEX,CAAC,EACDE,EAAQ,KAAK,CACT,SAAU,YACV,MAAOF,EAAyB,OAAO,aACvC,KAAM,gBACN,MAAO,UAEX,CAAC,EAEDE,EAAQ,KAAK,CACT,SAAU,YACV,MAAOF,EAAyB,OAAO,eACvC,KAAM,gBACN,MAAO,YAEX,CAAC,EAEDE,EAAQ,KAAK,CACT,SAAU,YACV,MAAOF,EAAyB,OAAO,aACvC,KAAM,gBACN,MAAO,MACX,CAAC,EACDE,EAAQ,KAAK,CACT,SAAU,YACV,MAAOF,EAAyB,OAAO,WACvC,KAAM,gBACN,MAAO,aACX,CAAC,EACDE,EAAQ,KAAK,CACT,SAAU,YACV,MAAOF,EAAyB,OAAO,eACvC,KAAM,gBAEN,MAAO,aACX,CAAC,EAEDE,EAAQ,QAAQ,GAEbA,CACX,CACU,oBAA2B,CAIjC,GAFA,MAAM,mBAAmB,EAErB,gBAAc,cAAcC,EAAe,cAAc,EAAG,CAC5D,IAAMC,EAAmB,CACrB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,UACJ,EAEAC,EAAkB,KAAK,CACvB,EAAGC,GAAY,CACX,QAASC,KAASD,EAAS,SACvB,KAAK,gBAAgB,gBAAeN,EAAyB,OAAO,cAAc,EAAE,MAAM,KAAK,CAAE,GAAKM,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,EAAG,KAAOD,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,CAAG,CAAC,CAC5M,CAAC,EACDC,EAAgB,KAAK,CACrB,EAAGF,GAAY,CACX,QAASC,KAASD,EAAS,SACvB,KAAK,gBAAgB,gBAAeN,EAAyB,OAAO,YAAY,EAAE,MAAM,KAAK,CAAE,GAAKM,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,EAAG,KAAOD,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,CAAG,CAAC,CAC1M,CAAC,EACDE,EAAkB,KAAK,CACvB,EAAGH,GAAY,CACX,QAASC,KAASD,EAAS,SACvB,KAAK,gBAAgB,gBAAeN,EAAyB,OAAO,cAAc,EAAE,MAAM,KAAK,CAAE,GAAKM,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,EAAG,KAAOD,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,CAAG,CAAC,CAC5M,CAAC,EACDG,EAAgB,KAAK,CACrB,EAAGJ,GAAY,CACX,QAASC,KAASD,EAAS,SACvB,KAAK,gBAAgB,gBAAeN,EAAyB,OAAO,YAAY,EAAE,MAAM,KAAK,CAAE,GAAKM,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,EAAG,KAAOD,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,CAAG,CAAC,CAE1M,CAAC,EACDI,EAAuB,KAAK,CAC5B,EAAGL,GAAY,CACX,QAASC,KAASD,EAAS,SACvB,KAAK,gBAAgB,gBAAeN,EAAyB,OAAO,YAAY,EAAE,MAAM,KAAK,CAAE,GAAKM,EAAS,SAASC,CAAK,EAAE,aAAc,SAAS,EAAG,KAAOD,EAAS,SAASC,CAAK,EAAE,aAAc,SAAS,CAAG,CAAC,EAClN,KAAK,gBAAgB,gBAAeP,EAAyB,OAAO,UAAU,EAAE,MAAM,KAAK,CAAE,GAAKM,EAAS,SAASC,CAAK,EAAE,WAAY,SAAS,EAAG,KAAOD,EAAS,SAASC,CAAK,EAAE,WAAY,SAAS,CAAG,CAAC,CAGpN,CAAC,EACDK,EAAwB,KAAK,CAC7B,EAAGN,GAAY,CACX,QAASC,KAASD,EAAS,SACvB,KAAK,gBAAgB,gBAAeN,EAAyB,OAAO,cAAc,EAAE,MAAM,KAAK,CAAE,GAAKM,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,EAAG,KAAOD,EAAS,SAASC,CAAK,EAAE,KAAM,SAAS,CAAG,CAAC,CAG5M,CAAC,CAGL,CAEJ,CAEA,YAAYM,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACU,YAAa,CACnB,IAAIC,EAAU,MAAM,WAAW,EAC3BP,EACJ,GAAI,CAAC,gBAAc,cAAcJ,EAAe,cAAc,EAE1D,IAAKI,KAASO,GACNA,EAAQP,CAAK,EAAE,MAAQ,eAAiBO,EAAQP,CAAK,EAAE,MAAQ,gBAC/DO,EAAQ,OAAOP,EAAO,CAAC,EAOnC,OAAOO,CAEX,CACU,kBAAkBR,EAAkD,CAC1E,OAAAA,EAAW,MAAM,kBAAkBA,CAAQ,EAC3C,KAAK,QAAQ,WAAW,sBAAsB,EAAE,OAAO,EAAK,EACrDA,CAEX,CACJ,EA5JaS,EAAAlB,EAAA,6BAAAA,EAANmB,EAAA,CADN,aAAW,cAAc,0DAA0D,GACvEnB,GDPE,SAARoB,GAA4B,IAC/B,0BAAuB,IAAIC,EAA0B,EAAE,UAAU,CAAC,EAAE,OAAO,CAC/E,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "import_corelib", "ShiftAttendanceRecordDialog", "ShiftAttendanceRecordForm", "linkElement", "scriptElement", "tabId", "searchString", "TimeInString", "TimeOutString", "ShiftStartTimeString", "ShiftEndTimeString", "lastIndex", "starting_time_element_id", "ending_time_element_id", "ShiftStartTime_element_id", "ShiftEndTime_element_id", "StartClocklet", "event", "myClocklet", "EndClocklet", "ShiftStartClocklet", "ShiftEndClocklet", "ShiftAttendanceRecordRow", "ShiftAttendanceRecordService", "response", "ShiftStartTime", "hours", "minutes", "formattedTime", "ShiftStartElement", "ShiftEndTime", "ShiftEndElement", "TimeIn", "TimeInElement", "TimeOut", "TimeOutElement", "__name", "__decorateClass", "import_q", "ShiftAttendanceRecordGrid", "ShiftAttendanceRecordColumns", "ShiftAttendanceRecordDialog", "ShiftAttendanceRecordRow", "ShiftAttendanceRecordService", "filters", "PermissionKeys", "months", "OccupationService", "response", "index", "JobGradeService", "DepartmentService", "DivisionService", "EmployeeProfileService", "MasterCostCentreService", "container", "columns", "__name", "__decorateClass", "pageInit", "ShiftAttendanceRecordGrid", "__name"]
}
