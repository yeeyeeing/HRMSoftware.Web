import { OTJobGradeTimeRow } from "../OTJobGradeTime/OTJobGradeTimeRow";
import { fieldsProxy } from "@serenity-is/corelib/q";

export interface CompanySettingsRow {
    HourlyNoPaidLeaveNPL?: boolean;
    HourlyNoPaidLeaveAbsent?: boolean;
    AbsentMonthDays?: boolean;
    EarlyLeavingMonthDays?: boolean;
    LateArrivalMonthDays?: boolean;
    DailyNplMonthDays?: boolean;
    OTMonthDays?: boolean;
    EarlyLeavingDes?: string;
    NoPaidLeaveDes?: string;
    HourlyNoPaidLeaveDes?: string;
    LateArrivalDes?: string;
    AbsentDes?: string;
    FixedOtRateDenominator?: number;
    FixedEarlyLeavingDenominator?: number;
    FixedLateArrivalDenominator?: number;
    FixedNPLDenominator?: number;
    FixedAbsentDenominator?: number;
    EarlyLeavingBasedOnWorkingHour?: boolean;
    EarlyLeavingBasedOnFixedDenominator?: boolean;
    LateArrivalBasedOnWorkingHour?: boolean;
    LateArrivalBasedOnFixedDenominator?: boolean;
    DailyNplBasedOnWorkingHour?: boolean;
    DailyNplBasedOnFixedDenominator?: boolean;
    AbsentBasedOnWorkingHour?: boolean;
    AbsentBasedOnFixedDenominator?: boolean;
    OTApplicationEmployeeApproval?: boolean;
    OTApplicationHrApproval?: boolean;
    OTEitherOne?: boolean;
    LeaveApplicationEmployeeApproval?: boolean;
    LeaveApplicationHrApproval?: boolean;
    LeaveApplicationEitherOne?: boolean;
    MoneyClaimingEmployeeApproval?: boolean;
    MoneyClaimingHrApproval?: boolean;
    MoneyClaimingEitherOne?: boolean;
    FixedOtRateCalculation?: boolean;
    VariableOtRateCalculation?: boolean;
    WeekdayTwo?: boolean;
    WeekdayOnePointFive?: boolean;
    WeekendTwo?: boolean;
    WeekendOnePointFive?: boolean;
    PublicHolidayTwo?: boolean;
    PublicHolidayOnePointFive?: boolean;
    EPFAccountNumber?: string;
    BankAccountNumber?: string;
    SocsoAccountNumber?: string;
    IncomeTaxAccountNumber?: string;
    ZakatAccountNumber?: string;
    BankId?: number;
    MonthlyDays?: number;
    BankName?: string;
    SundayWeekday?: boolean;
    MondayWeekday?: boolean;
    TuesdayWeekday?: boolean;
    WednesdayWeekday?: boolean;
    ThursdayWeekday?: boolean;
    FridayWeekday?: boolean;
    SaturdayWeekday?: boolean;
    RetireAge?: number;
    ClockInGracePeriod?: number;
    IsActive?: number;
    LateArrivalEqualHalfDayLeave?: number;
    LateArrivalEqualFullDayLeave?: number;
    PayDay?: number;
    LeaveRefreshDay?: number;
    LeaveRefreshMonth?: number;
    ClockOutGracePeriod?: number;
    Id?: number;
    OTMinimumMinute?: number;
    Paydate?: string;
    CompanyName?: string;
    OtCalculationDescription?: string;
    CompanyRegistrationNumber?: string;
    CompanyLogo?: string;
    CompanyPhone?: string;
    CompanyAddress?: string;
    MaximumBasicSalary?: number;
    DeductSalaryIfLate?: boolean;
    DeductSalaryIfEarlyLeaving?: boolean;
    FixedTime?: boolean;
    FixedHour?: boolean;
    FixedHourFlexiTime?: boolean;
    RefreshLeaveOnYearOfService?: boolean;
    RefreshLeaveOnSpecificDate?: boolean;
    EntitleAnualLeaveBeforeProbationPeriodEnd?: boolean;
    LeaveRefreshDate?: string;
    EffectiveUntil?: string;
    EffectiveSince?: string;
    InsertDate?: string;
    EntitleAnnualBasedOnJobGrade?: boolean;
    EntitleAnnualBasedOnYearOfService?: boolean;
    BasedCountry?: string;
    MaximumOtMinute?: number;
    OneOffEntitlementAnnualLeave?: boolean;
    MonthlyEntitlementAnnualLeave?: boolean;
    MaximumBasicSalaryToEntitleForOTPay?: boolean;
    MaximumJobGradeToEntitleForOTPay?: boolean;
    OTJobGradeTime?: OTJobGradeTimeRow[];
}

export abstract class CompanySettingsRow {
    static readonly idProperty = 'Id';
    static readonly localTextPrefix = 'CompanySettings.CompanySettings';
    static readonly deletePermission = 'Administration:HumanResources';
    static readonly insertPermission = 'Administration:HumanResources';
    static readonly readPermission = '*';
    static readonly updatePermission = 'Administration:HumanResources';

    static readonly Fields = fieldsProxy<CompanySettingsRow>();
}